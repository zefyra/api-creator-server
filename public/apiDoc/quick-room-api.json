{
	"openapi": "3.0.0",
	"servers": [
		{
			"url": "https://sboapi.ecount.com/OAPI/V2"
		}
	],
	"info": {
		"description": "Daily call Ecount, send total of date by store_id",
		"version": "1.0.0",
		"title": "QorePlusEcount"
	},
	"tags": [
		{
			"name": "calendar",
			"description": "1. calendar"
		},
		{
			"name": "callbackv3",
			"description": "2. callbackv3"
		},
		{
			"name": "confirm",
			"description": "3. confirm"
		},
		{
			"name": "dj-rest-auth",
			"description": "4. dj-rest-auth"
		},
		{
			"name": "getlock",
			"description": "5. getlock"
		},
		{
			"name": "hotel",
			"description": "6. hotel"
		},
		{
			"name": "linepay_info",
			"description": "7. linepay_info"
		},
		{
			"name": "misc",
			"description": "8. misc"
		},
		{
			"name": "oen",
			"description": "9. oen"
		},
		{
			"name": "order",
			"description": "10. order"
		},
		{
			"name": "room",
			"description": "11. room"
		},
		{
			"name": "room_daily_avail",
			"description": "12. room_daily_avail"
		},
		{
			"name": "room_daily_avail_by_hour",
			"description": "13. room_daily_avail_by_hour"
		},
		{
			"name": "room_day_booking",
			"description": "14. room_day_booking"
		},
		{
			"name": "room_hourly_avail",
			"description": "15. room_hourly_avail"
		},
		{
			"name": "roomrandom",
			"description": "16. roomrandom"
		},
		{
			"name": "sbmt_linepay_info",
			"description": "17. sbmt_linepay_info"
		},
		{
			"name": "schema",
			"description": "18. schema"
		},
		{
			"name": "search",
			"description": "19. search"
		},
		{
			"name": "search_multicity",
			"description": "20. search_multicity"
		},
		{
			"name": "user",
			"description": "21. user"
		}
	],
	"paths": {
		"/qr/calendar/": {
			"post": {
				"operationId": "calendar_create",
				"tags": [
					"calendar"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/callbackv3": {
			"get": {
				"operationId": "callbackv3_retrieve",
				"tags": [
					"callbackv3"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/confirm/": {
			"get": {
				"operationId": "confirm_retrieve",
				"tags": [
					"confirm"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/dj-rest-auth/account-confirm-email/": {
			"post": {
				"operationId": "dj_rest_auth_account_confirm_email_create",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyEmail"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/VerifyEmail"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/VerifyEmail"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VerifyEmail"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/google/": {
			"post": {
				"operationId": "dj_rest_auth_google_create",
				"description": "class used for social authentications\nexample usage for facebook with access_token\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n-------------\n\nexample usage for facebook with code\n\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\nfrom allauth.socialaccount.providers.oauth2.client import OAuth2Client\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n    client_class = OAuth2Client\n    callback_url = 'localhost:8000'\n-------------",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SocialLogin"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/line/": {
			"post": {
				"operationId": "dj_rest_auth_line_create",
				"description": "class used for social authentications\nexample usage for facebook with access_token\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n-------------\n\nexample usage for facebook with code\n\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\nfrom allauth.socialaccount.providers.oauth2.client import OAuth2Client\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n    client_class = OAuth2Client\n    callback_url = 'localhost:8000'\n-------------",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SocialLogin"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SocialLogin"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/login/": {
			"post": {
				"operationId": "dj_rest_auth_login_create",
				"description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Login"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Login"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Login"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JWT"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/logout/": {
			"post": {
				"operationId": "dj_rest_auth_logout_create",
				"description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
				"tags": [
					"dj-rest-auth"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestAuthDetail"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/password/change/": {
			"post": {
				"operationId": "dj_rest_auth_password_change_create",
				"description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PasswordChange"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PasswordChange"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PasswordChange"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestAuthDetail"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/password/reset/": {
			"post": {
				"operationId": "dj_rest_auth_password_reset_create",
				"description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomPasswordReset"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/CustomPasswordReset"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/CustomPasswordReset"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestAuthDetail"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/password/reset/confirm/": {
			"post": {
				"operationId": "dj_rest_auth_password_reset_confirm_create",
				"description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PasswordResetConfirm"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PasswordResetConfirm"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PasswordResetConfirm"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestAuthDetail"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/registration/": {
			"post": {
				"operationId": "dj_rest_auth_registration_create",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomRegister"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/CustomRegister"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/CustomRegister"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomRegister"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/token/refresh/": {
			"post": {
				"operationId": "dj_rest_auth_token_refresh_create",
				"description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TokenRefresh"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/TokenRefresh"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/TokenRefresh"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenRefresh"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/token/verify/": {
			"post": {
				"operationId": "dj_rest_auth_token_verify_create",
				"description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TokenVerify"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/TokenVerify"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/TokenVerify"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenVerify"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/dj-rest-auth/user/": {
			"get": {
				"operationId": "dj_rest_auth_user_retrieve",
				"description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
				"tags": [
					"dj-rest-auth"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDetails"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "dj_rest_auth_user_update",
				"description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDetails"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/UserDetails"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/UserDetails"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDetails"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "dj_rest_auth_user_partial_update",
				"description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
				"tags": [
					"dj-rest-auth"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedUserDetails"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedUserDetails"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedUserDetails"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDetails"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/getlock/": {
			"post": {
				"operationId": "getlock_create",
				"tags": [
					"getlock"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/hotel/": {
			"get": {
				"operationId": "hotel_retrieve",
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "hotel_update",
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "hotel_partial_update",
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"delete": {
				"operationId": "hotel_destroy",
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/hotel/{id}/": {
			"get": {
				"operationId": "hotel_retrieve_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "hotel_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Establishment"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "hotel_partial_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedEstablishment"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			},
			"delete": {
				"operationId": "hotel_destroy_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/hotel/extra_item/{id}/": {
			"get": {
				"operationId": "hotel_extra_item_retrieve",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtraItem"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "hotel_extra_item_update",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtraItem"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "hotel_extra_item_partial_update",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedExtraItem"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedExtraItem"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedExtraItem"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtraItem"
								}
							}
						},
						"description": ""
					}
				}
			},
			"delete": {
				"operationId": "hotel_extra_item_destroy",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/hotel/extra_item/create/": {
			"post": {
				"operationId": "hotel_extra_item_create_create",
				"tags": [
					"hotel"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/ExtraItem"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtraItem"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/hotel/info/": {
			"get": {
				"operationId": "hotel_info_retrieve",
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "integer"
						}
					}
				],
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Establishment"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/hotel/list/": {
			"get": {
				"operationId": "hotel_list_list",
				"tags": [
					"hotel"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Establishment"
									}
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/linepay_info/": {
			"get": {
				"operationId": "linepay_info_retrieve",
				"tags": [
					"linepay_info"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/misc/": {
			"get": {
				"operationId": "misc_retrieve",
				"tags": [
					"misc"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/oen/": {
			"post": {
				"operationId": "oen_create",
				"tags": [
					"oen"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/order/": {
			"put": {
				"operationId": "order_update",
				"tags": [
					"order"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "order_partial_update",
				"tags": [
					"order"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/order/{id}/": {
			"put": {
				"operationId": "order_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"order"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "order_partial_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"order"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedOrder"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/order/info/": {
			"get": {
				"operationId": "order_info_retrieve",
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						}
					}
				],
				"tags": [
					"order"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/order/list/": {
			"get": {
				"operationId": "order_list_retrieve",
				"tags": [
					"order"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/order/sales/": {
			"get": {
				"operationId": "order_sales_retrieve",
				"tags": [
					"order"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room/": {
			"get": {
				"operationId": "room_retrieve",
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "room_update",
				"tags": [
					"room"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "room_partial_update",
				"tags": [
					"room"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"delete": {
				"operationId": "room_destroy",
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room/{id}/": {
			"get": {
				"operationId": "room_retrieve_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "room_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"room"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Room"
							}
						}
					},
					"required": true
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "room_partial_update_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"room"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedRoom"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			},
			"delete": {
				"operationId": "room_destroy_2",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"required": true
					}
				],
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room/extra_item/add/": {
			"post": {
				"operationId": "room_extra_item_add_create",
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room/extra_item/remove/": {
			"post": {
				"operationId": "room_extra_item_remove_create",
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room/info/": {
			"get": {
				"operationId": "room_info_retrieve",
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						}
					}
				],
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Room"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/room/list/": {
			"get": {
				"operationId": "room_list_list",
				"parameters": [
					{
						"in": "query",
						"name": "hotel_id",
						"schema": {
							"type": "string"
						}
					}
				],
				"tags": [
					"room"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Room"
									}
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/room_daily_avail/": {
			"post": {
				"operationId": "room_daily_avail_create",
				"tags": [
					"room_daily_avail"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room_daily_avail_by_hour/": {
			"post": {
				"operationId": "room_daily_avail_by_hour_create",
				"tags": [
					"room_daily_avail_by_hour"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room_day_booking/": {
			"post": {
				"operationId": "room_day_booking_create",
				"tags": [
					"room_day_booking"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/room_hourly_avail/": {
			"post": {
				"operationId": "room_hourly_avail_create",
				"tags": [
					"room_hourly_avail"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/roomrandom/": {
			"get": {
				"operationId": "roomrandom_retrieve",
				"tags": [
					"roomrandom"
				],
				"summary": "16-1. 隨機顯示房間",
				"parameters": [],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"rooms": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "",
														"default": "89bc331e-02f7-11ef-9180-0242ac170003"
													},
													"created": {
														"type": "string",
														"description": "",
														"default": "2024-04-25T19:32:46.276548"
													},
													"hotel_id": {
														"type": "string",
														"description": "",
														"default": "d05837d4-02e1-11ef-98e0-0242ac170003"
													},
													"name": {
														"type": "string",
														"description": "",
														"default": "Terminal C-建北中庭(150-500人)"
													},
													"device_id": {
														"type": "string",
														"description": "",
														"default": ""
													},
													"about": {
														"type": "string",
														"description": "",
														"default": "建北中庭(150-500人"
													},
													"person": {
														"type": "integer",
														"description": "",
														"default": "500"
													},
													"mon": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"tue": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"wed": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"thu": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"fri": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"sat": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"sun": {
														"type": "boolean",
														"description": "",
														"default": "false"
													},
													"open": {
														"type": "string",
														"description": "",
														"default": "09:00:00"
													},
													"close": {
														"type": "string",
														"description": "",
														"default": "21:00:00"
													},
													"room_type": {
														"type": "string",
														"description": "",
														"default": "0011100000"
													},
													"size": {
														"type": "integer",
														"description": "",
														"default": "100"
													},
													"hour_rate": {
														"type": "integer",
														"description": "",
														"default": "12000"
													},
													"holi_hour_rate": {
														"type": "integer",
														"description": "",
														"default": ""
													},
													"day_rate": {
														"type": "integer",
														"description": "",
														"default": ""
													},
													"holi_rate": {
														"type": "integer",
														"description": "",
														"default": ""
													},
													"active": {
														"type": "boolean",
														"description": "",
														"default": "true"
													},
													"telephone": {
														"type": "string",
														"description": "",
														"default": "02-2517-2727"
													},
													"facility": {
														"type": "string",
														"description": "",
														"default": ""
													},
													"photo": {
														"type": "string",
														"description": "",
														"default": "/media/paper_2022082412514803.jpg"
													},
													"contact": {
														"type": "string",
														"description": "",
														"default": "櫃檯人員"
													},
													"location": {
														"type": "string",
														"description": "",
														"default": "中山區"
													},
													"city": {
														"type": "string",
														"description": "",
														"default": "台北市"
													}
												},
												"required": []
											}
										},
										"logo": {
											"type": "string",
											"description": "",
											"default": ""
										}
									},
									"required": []
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"start": {
										"type": "integer",
										"description": "亂數表單讀取錨點，若是-1，則自動生成亂數",
										"default": -1
									},
									"size": {
										"type": "integer",
										"description": "讀取資料筆數",
										"default": 30
									}
								},
								"required": [
									"start",
									"size"
								]
							}
						}
					}
				}
			}
		},
		"/qr/sbmt_linepay_info/": {
			"post": {
				"operationId": "sbmt_linepay_info_create",
				"tags": [
					"sbmt_linepay_info"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/schema/": {
			"get": {
				"operationId": "schema_retrieve",
				"description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"type": "string",
							"enum": [
								"json",
								"yaml"
							]
						}
					},
					{
						"in": "query",
						"name": "lang",
						"schema": {
							"type": "string",
							"enum": [
								"af",
								"ar",
								"ar-dz",
								"ast",
								"az",
								"be",
								"bg",
								"bn",
								"br",
								"bs",
								"ca",
								"ckb",
								"cs",
								"cy",
								"da",
								"de",
								"dsb",
								"el",
								"en",
								"en-au",
								"en-gb",
								"eo",
								"es",
								"es-ar",
								"es-co",
								"es-mx",
								"es-ni",
								"es-ve",
								"et",
								"eu",
								"fa",
								"fi",
								"fr",
								"fy",
								"ga",
								"gd",
								"gl",
								"he",
								"hi",
								"hr",
								"hsb",
								"hu",
								"hy",
								"ia",
								"id",
								"ig",
								"io",
								"is",
								"it",
								"ja",
								"ka",
								"kab",
								"kk",
								"km",
								"kn",
								"ko",
								"ky",
								"lb",
								"lt",
								"lv",
								"mk",
								"ml",
								"mn",
								"mr",
								"ms",
								"my",
								"nb",
								"ne",
								"nl",
								"nn",
								"os",
								"pa",
								"pl",
								"pt",
								"pt-br",
								"ro",
								"ru",
								"sk",
								"sl",
								"sq",
								"sr",
								"sr-latn",
								"sv",
								"sw",
								"ta",
								"te",
								"tg",
								"th",
								"tk",
								"tr",
								"tt",
								"udm",
								"uk",
								"ur",
								"uz",
								"vi",
								"zh-hans",
								"zh-hant"
							]
						}
					}
				],
				"tags": [
					"schema"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"content": {
							"application/vnd.oai.openapi": {
								"schema": {
									"type": "object",
									"additionalProperties": {}
								}
							},
							"application/yaml": {
								"schema": {
									"type": "object",
									"additionalProperties": {}
								}
							},
							"application/vnd.oai.openapi+json": {
								"schema": {
									"type": "object",
									"additionalProperties": {}
								}
							},
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": {}
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/search/": {
			"post": {
				"operationId": "search_create",
				"tags": [
					"search"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/search_multicity/": {
			"post": {
				"operationId": "search_multicity_create",
				"tags": [
					"search_multicity"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/": {
			"get": {
				"operationId": "user_retrieve",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			},
			"post": {
				"operationId": "user_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/change_email/": {
			"post": {
				"operationId": "user_change_email_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/email_exists/": {
			"post": {
				"operationId": "user_email_exists_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/info/": {
			"get": {
				"operationId": "user_info_retrieve",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Qruser"
								}
							}
						},
						"description": ""
					}
				}
			},
			"put": {
				"operationId": "user_info_update",
				"tags": [
					"user"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Qruser"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Qruser"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Qruser"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Qruser"
								}
							}
						},
						"description": ""
					}
				}
			},
			"patch": {
				"operationId": "user_info_partial_update",
				"tags": [
					"user"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PatchedQruser"
							}
						},
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/PatchedQruser"
							}
						},
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PatchedQruser"
							}
						}
					}
				},
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Qruser"
								}
							}
						},
						"description": ""
					}
				}
			}
		},
		"/qr/user/phone/check/": {
			"post": {
				"operationId": "user_phone_check_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/phone/set/": {
			"post": {
				"operationId": "user_phone_set_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					},
					{}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/ttlock/": {
			"get": {
				"operationId": "user_ttlock_retrieve",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/yale_send_verif/": {
			"post": {
				"operationId": "user_yale_send_verif_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		},
		"/qr/user/yale_validation/": {
			"post": {
				"operationId": "user_yale_validation_create",
				"tags": [
					"user"
				],
				"security": [
					{
						"jwtAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "No response body"
					}
				}
			}
		}
	},
	"externalDocs": {
		"description": "Ecount API",
		"url": "https://sboapi.ecount.com/ECERP/OAPI/OAPIView?lan_type=zh-TW#"
	},
	"components": {
		"schemas": {
			"CustomRegister": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string",
						"maxLength": 150,
						"minLength": 1
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"password1": {
						"type": "string",
						"writeOnly": true
					},
					"password2": {
						"type": "string",
						"writeOnly": true
					},
					"first_name": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"first_name",
					"password1",
					"password2"
				]
			},
			"ApiResponse_AAAAAAAA": {
				"type": "object",
				"properties": {
					"Status": {
						"type": "string",
						"default": "200"
					},
					"Errors": {
						"type": "string",
						"default": null
					},
					"Error": {
						"type": "string",
						"default": null
					},
					"Timestamp": {
						"type": "string",
						"default": "2022-11-17 12:38:06.242"
					},
					"RequestKey": {
						"type": "string"
					},
					"IsEnableNoL4": {
						"type": "boolean",
						"default": false
					},
					"RefreshTimestamp": {
						"type": "string",
						"default": "0"
					},
					"AsyncActionKey": {
						"type": "string",
						"default": null
					},
					"Data": {
						"type": "object",
						"properties": {
							"status": {
								"type": "string",
								"description": "Order Status",
								"enum": [
									"placed",
									"approved",
									"delivered"
								]
							}
						}
					}
				}
			},
			"ZoneInfo_AAAAAAA": {
				"type": "object",
				"properties": {
					"EXPIRE_DATE": {
						"type": "string",
						"default": null
					},
					"COM_CODE": {
						"type": "string",
						"default": "907422"
					},
					"DOMAIN": {
						"type": "string",
						"default": ".ecount.com"
					},
					"STATUS": {
						"type": "string",
						"default": "E"
					},
					"ZONE": {
						"type": "string",
						"default": "IA",
						"description": "zone param will use in login"
					},
					"CS_COM_CODE": {
						"type": "string",
						"default": ""
					},
					"ACCESS_ALL": {
						"type": "string",
						"default": null
					},
					"APP_DT_FROM": {
						"type": "string",
						"default": null
					},
					"APP_DT_TO": {
						"type": "string",
						"default": null
					},
					"MSG": {
						"type": "string",
						"default": ""
					},
					"DB_CON_FLAG": {
						"type": "string",
						"default": "51"
					},
					"EMPTY_ZONE": {
						"type": "string",
						"default": null
					},
					"SIP": {
						"type": "string",
						"default": "5a465144410b16030404020a1f5e"
					}
				}
			},
			"LoginInfo_AAAAAAA": {
				"type": "object",
				"properties": {
					"EXPIRE_DATE": {
						"type": "string",
						"default": null
					},
					"NOTICE": {
						"type": "string",
						"default": "907422"
					},
					"Code": {
						"type": "string",
						"default": ".ecount.com"
					},
					"Message": {
						"type": "string",
						"default": "E"
					},
					"FailCount": {
						"type": "string",
						"default": "IA",
						"description": "zone param will use in login"
					},
					"RedirectUrl": {
						"type": "string",
						"default": ""
					},
					"LoginErrcountResult": {
						"type": "string",
						"default": null
					},
					"Datas": {
						"type": "object",
						"properties": {
							"SESSION_ID": {
								"type": "string",
								"default": "3930373432327c54484f4d4153:IA-APYlviogK5Sru",
								"description": "SESSION_ID will be security param of other authed api"
							},
							"HOST_URL": {
								"type": "string",
								"default": "sboapiia.ecount.com"
							},
							"COM_CODE": {
								"type": "string",
								"default": "907422"
							},
							"USER_ID": {
								"type": "string",
								"default": "THOMAS"
							}
						}
					}
				}
			},
			"Invoice_AAAAAAA": {
				"type": "object",
				"properties": {
					"Line": {
						"type": "string",
						"default": "2",
						"description": "流水號: API 傳送時，每筆資料隨機賦予的序號"
					},
					"BulkDatas": {
						"type": "object",
						"properties": {
							"TRX_DATE": {
								"type": "string",
								"default": "20221117",
								"description": "$憑證日期(交易日期) :未輸入時預設為今日 \"20181113\""
							},
							"ACCT_DOC_NO": {
								"type": "string",
								"default": "20221117-001",
								"description": "$會計憑證號碼 系統設定 > 自主設定 > 功能設定 > 會計 > 會計憑證號碼"
							},
							"TAX_GUBUN": {
								"type": "string",
								"default": "71",
								"description": "$營業稅類型(銷售/採購類型)  #[系統設定 > 自主設定 > 功能設定 > 共同 > 會計-銷售營業稅(採購營業稅)中的營業稅類型編碼]"
							},
							"S_NO": {
								"type": "string",
								"default": "",
								"description": "X輸入信用卡或是認證號碼"
							},
							"CUST": {
								"type": "string",
								"default": "10001",
								"description": "$客戶/供應商: #[進銷存 > 基本資料 > 客戶/供應商]"
							},
							"CUST_DES": {
								"type": "string",
								"default": "ECOUNT",
								"description": "$客戶/供應商名稱"
							},
							"CR_CODE": {
								"type": "string",
								"default": "4117",
								"description": "$銷售會計科目編碼  銷售: 輸入銷售科目編碼 例) 4117(勞務收入) #[會計 > 基本資料 > 會計科目]"
							},
							"DR_CODE": {
								"type": "string",
								"default": "",
								"description": "採購科目編碼 採購: 輸入採購科目編碼 例) 1221(商品存貨)"
							},
							"SUPPLY_AMT": {
								"type": "string",
								"default": "60000",
								"description": "稅前價格"
							},
							"VAT_AMT": {
								"type": "string",
								"default": "6000",
								"description": "營業稅"
							},
							"ACCT_NO": {
								"type": "string",
								"default": "",
								"description": "收款類型: (應付憑證II) 收款帳戶編碼 / (應收憑證II) 輸入付款帳戶編碼的編碼或是名稱。"
							},
							"REMARKS_CD": {
								"type": "string",
								"default": "",
								"description": "摘要編碼"
							},
							"REMARKS": {
								"type": "string",
								"default": "",
								"description": "摘要"
							},
							"SITE_CD": {
								"type": "string",
								"default": "",
								"description": "部門編碼"
							},
							"PJT_CD": {
								"type": "string",
								"default": "",
								"description": "專案"
							},
							"ITEM1_CD": {
								"type": "string",
								"default": "",
								"description": "自訂欄位1(編碼型)"
							},
							"ITEM2_CD": {
								"type": "string",
								"default": "",
								"description": "自訂欄位2(編碼型)"
							},
							"ITEM3_CD": {
								"type": "string",
								"default": "",
								"description": "自訂欄位3(編碼型)"
							},
							"ITEM4": {
								"type": "string",
								"default": "",
								"description": "自訂欄位4(文字型)"
							},
							"ITEM5": {
								"type": "string",
								"default": "",
								"description": "自訂欄位5(文字型)"
							},
							"ITEM6": {
								"type": "string",
								"default": "",
								"description": "自訂欄位6(文字型)"
							},
							"ITEM7": {
								"type": "string",
								"default": "",
								"description": "自訂欄位7(文字型)"
							},
							"ITEM8": {
								"type": "string",
								"default": "",
								"description": "自訂欄位8(文字型)"
							}
						}
					}
				}
			}
		},
		"requestBodies": {
			"Zone": {
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": [
								"COM_CODE"
							],
							"properties": {
								"COM_CODE": {
									"type": "string",
									"example": "100023"
								}
							}
						}
					}
				},
				"description": "Zone Param",
				"required": true
			},
			"Login": {
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": [
								"COM_CODE",
								"USER_ID",
								"API_CERT_KEY",
								"LAN_TYPE",
								"ZONE"
							],
							"properties": {
								"COM_CODE": {
									"type": "string",
									"example": "100023",
									"description": "USER COM_CODE input"
								},
								"USER_ID": {
									"type": "string",
									"example": "Thomas",
									"description": "USER USER_ID input"
								},
								"API_CERT_KEY": {
									"type": "string",
									"example": "xxxxxxxxxxxxxxxxxxx",
									"description": "USER API_CERT_KEY input"
								},
								"LAN_TYPE": {
									"type": "string",
									"example": "zh-TW",
									"description": "USER LAN_TYPE input"
								},
								"ZONE": {
									"type": "string",
									"example": "IA",
									"description": "USER ZONE input"
								}
							}
						}
					}
				},
				"description": "Zone Param",
				"required": true
			},
			"InvoiceAutoList": {
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"required": [
								"InvoiceAutoList"
							],
							"properties": {
								"InvoiceAutoList": {
									"type": "array",
									"description": "InvoiceAuto Param List",
									"items": {
										"$ref": "#/components/schemas/Invoice"
									}
								}
							}
						}
					}
				},
				"description": "SaveInvoiceAuto Param",
				"required": true
			}
		},
		"securitySchemes": {},
		"links": {},
		"callbacks": {}
	},
	"security": []
}