{
  "openapi": "3.0.3",
  "info": {
    "title": "quickRoom",
    "version": "1.0.0"
  },
  "paths": {
    "/qr/calendar/": {
      "post": {
        "operationId": "calendar_create",
        "tags": [
          "calendar"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/callbackv3": {
      "get": {
        "operationId": "callbackv3_retrieve",
        "tags": [
          "callbackv3"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/confirm/": {
      "get": {
        "operationId": "confirm_retrieve",
        "tags": [
          "confirm"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/dj-rest-auth/account-confirm-email/": {
      "post": {
        "operationId": "dj_rest_auth_account_confirm_email_create",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmail"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyEmail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/google/": {
      "post": {
        "operationId": "dj_rest_auth_google_create",
        "description": "class used for social authentications\nexample usage for facebook with access_token\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n-------------\n\nexample usage for facebook with code\n\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\nfrom allauth.socialaccount.providers.oauth2.client import OAuth2Client\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n    client_class = OAuth2Client\n    callback_url = 'localhost:8000'\n-------------",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialLogin"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/line/": {
      "post": {
        "operationId": "dj_rest_auth_line_create",
        "description": "class used for social authentications\nexample usage for facebook with access_token\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n-------------\n\nexample usage for facebook with code\n\n-------------\nfrom allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter\nfrom allauth.socialaccount.providers.oauth2.client import OAuth2Client\n\nclass FacebookLogin(SocialLoginView):\n    adapter_class = FacebookOAuth2Adapter\n    client_class = OAuth2Client\n    callback_url = 'localhost:8000'\n-------------",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SocialLogin"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialLogin"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/login/": {
      "post": {
        "operationId": "dj_rest_auth_login_create",
        "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWT"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/logout/": {
      "post": {
        "operationId": "dj_rest_auth_logout_create",
        "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
        "tags": [
          "dj-rest-auth"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/password/change/": {
      "post": {
        "operationId": "dj_rest_auth_password_change_create",
        "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/password/reset/": {
      "post": {
        "operationId": "dj_rest_auth_password_reset_create",
        "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomPasswordReset"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/password/reset/confirm/": {
      "post": {
        "operationId": "dj_rest_auth_password_reset_confirm_create",
        "description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAuthDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/registration/": {
      "post": {
        "operationId": "dj_rest_auth_registration_create",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomRegister"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CustomRegister"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomRegister"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomRegister"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/token/refresh/": {
      "post": {
        "operationId": "dj_rest_auth_token_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/token/verify/": {
      "post": {
        "operationId": "dj_rest_auth_token_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerify"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/dj-rest-auth/user/": {
      "get": {
        "operationId": "dj_rest_auth_user_retrieve",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "tags": [
          "dj-rest-auth"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "dj_rest_auth_user_update",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "dj_rest_auth_user_partial_update",
        "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
        "tags": [
          "dj-rest-auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserDetails"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserDetails"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserDetails"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/getlock/": {
      "post": {
        "operationId": "getlock_create",
        "tags": [
          "getlock"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/hotel/": {
      "get": {
        "operationId": "hotel_retrieve",
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "hotel_update",
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "hotel_partial_update",
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "hotel_destroy",
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/hotel/{id}/": {
      "get": {
        "operationId": "hotel_retrieve_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "hotel_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Establishment"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "hotel_partial_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEstablishment"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "hotel_destroy_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/hotel/extra_item/{id}/": {
      "get": {
        "operationId": "hotel_extra_item_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "hotel_extra_item_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "hotel_extra_item_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExtraItem"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExtraItem"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedExtraItem"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "hotel_extra_item_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/hotel/extra_item/create/": {
      "post": {
        "operationId": "hotel_extra_item_create_create",
        "tags": [
          "hotel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtraItem"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtraItem"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/hotel/info/": {
      "get": {
        "operationId": "hotel_info_retrieve",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/hotel/list/": {
      "get": {
        "operationId": "hotel_list_list",
        "tags": [
          "hotel"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/linepay_info/": {
      "get": {
        "operationId": "linepay_info_retrieve",
        "tags": [
          "linepay_info"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/misc/": {
      "get": {
        "operationId": "misc_retrieve",
        "tags": [
          "misc"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/oen/": {
      "post": {
        "operationId": "oen_create",
        "tags": [
          "oen"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/order/": {
      "put": {
        "operationId": "order_update",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "order_partial_update",
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/order/{id}/": {
      "put": {
        "operationId": "order_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "order_partial_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedOrder"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/order/info/": {
      "get": {
        "operationId": "order_info_retrieve",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "order"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/order/list/": {
      "get": {
        "operationId": "order_list_retrieve",
        "tags": [
          "order"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/order/sales/": {
      "get": {
        "operationId": "order_sales_retrieve",
        "tags": [
          "order"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room/": {
      "get": {
        "operationId": "room_retrieve",
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "room_update",
        "tags": [
          "room"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "room_partial_update",
        "tags": [
          "room"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "room_destroy",
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room/{id}/": {
      "get": {
        "operationId": "room_retrieve_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "room_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "room"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "room_partial_update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "room"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedRoom"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "room_destroy_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room/extra_item/add/": {
      "post": {
        "operationId": "room_extra_item_add_create",
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room/extra_item/remove/": {
      "post": {
        "operationId": "room_extra_item_remove_create",
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room/info/": {
      "get": {
        "operationId": "room_info_retrieve",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/room/list/": {
      "get": {
        "operationId": "room_list_list",
        "parameters": [
          {
            "in": "query",
            "name": "hotel_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "room"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/room_daily_avail/": {
      "post": {
        "operationId": "room_daily_avail_create",
        "tags": [
          "room_daily_avail"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room_daily_avail_by_hour/": {
      "post": {
        "operationId": "room_daily_avail_by_hour_create",
        "tags": [
          "room_daily_avail_by_hour"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room_day_booking/": {
      "post": {
        "operationId": "room_day_booking_create",
        "tags": [
          "room_day_booking"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/room_hourly_avail/": {
      "post": {
        "operationId": "room_hourly_avail_create",
        "tags": [
          "room_hourly_avail"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/roomrandom/": {
      "get": {
        "operationId": "roomrandom_retrieve",
        "tags": [
          "roomrandom"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/sbmt_linepay_info/": {
      "post": {
        "operationId": "sbmt_linepay_info_create",
        "tags": [
          "sbmt_linepay_info"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/schema/": {
      "get": {
        "operationId": "schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "yaml"
              ]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "ckb",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": [
          "schema"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/search/": {
      "post": {
        "operationId": "search_create",
        "tags": [
          "search"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/search_multicity/": {
      "post": {
        "operationId": "search_multicity_create",
        "tags": [
          "search_multicity"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/": {
      "get": {
        "operationId": "user_retrieve",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      },
      "post": {
        "operationId": "user_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/change_email/": {
      "post": {
        "operationId": "user_change_email_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/email_exists/": {
      "post": {
        "operationId": "user_email_exists_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/info/": {
      "get": {
        "operationId": "user_info_retrieve",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Qruser"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "user_info_update",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Qruser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Qruser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Qruser"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Qruser"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "user_info_partial_update",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedQruser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedQruser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedQruser"
              }
            }
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Qruser"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/qr/user/phone/check/": {
      "post": {
        "operationId": "user_phone_check_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/phone/set/": {
      "post": {
        "operationId": "user_phone_set_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/ttlock/": {
      "get": {
        "operationId": "user_ttlock_retrieve",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/yale_send_verif/": {
      "post": {
        "operationId": "user_yale_send_verif_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/qr/user/yale_validation/": {
      "post": {
        "operationId": "user_yale_validation_create",
        "tags": [
          "user"
        ],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "CustomPasswordReset": {
        "type": "object",
        "description": "Serializer for requesting a password reset e-mail.",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "CustomRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password1": {
            "type": "string",
            "writeOnly": true
          },
          "password2": {
            "type": "string",
            "writeOnly": true
          },
          "first_name": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "password1",
          "password2"
        ]
      },
      "Establishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "photo": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "maxLength": 150
          },
          "location": {
            "type": "string",
            "maxLength": 40
          },
          "about": {
            "type": "string",
            "maxLength": 2048
          },
          "portkey": {
            "type": "string",
            "maxLength": 10
          },
          "active": {
            "type": "boolean"
          },
          "chat_url_meta": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "custom_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "terms": {
            "type": "string",
            "maxLength": 2048
          },
          "rental_process": {
            "type": "string",
            "maxLength": 2048
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "address",
          "created",
          "id",
          "location",
          "logo",
          "name",
          "payment_methods",
          "photo"
        ]
      },
      "ExtraItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "hotel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "price"
        ]
      },
      "JWT": {
        "type": "object",
        "description": "Serializer for JWT authentication.",
        "properties": {
          "access": {
            "type": "string"
          },
          "refresh": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserDetails"
          }
        },
        "required": [
          "access",
          "refresh",
          "user"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "hotelname": {
            "type": "string",
            "readOnly": true
          },
          "roomname": {
            "type": "string",
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "city": {
            "type": "string",
            "maxLength": 40
          },
          "location": {
            "type": "string",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "maxLength": 150
          },
          "hotelkey": {
            "type": "string",
            "maxLength": 10
          },
          "roomkey": {
            "type": "string",
            "maxLength": 10
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "pp_id": {
            "type": "string",
            "nullable": true,
            "description": "transaction id received by payment provider",
            "maxLength": 100
          },
          "cancelled": {
            "type": "boolean"
          },
          "complete": {
            "type": "boolean"
          },
          "payment_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodEnum"
              }
            ],
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "extra_items": {
            "type": "array",
            "items": {}
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "room": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "created",
          "end",
          "hotelname",
          "id",
          "price",
          "roomname",
          "start"
        ]
      },
      "PasswordChange": {
        "type": "object",
        "properties": {
          "new_password1": {
            "type": "string",
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "maxLength": 128
          }
        },
        "required": [
          "new_password1",
          "new_password2"
        ]
      },
      "PasswordResetConfirm": {
        "type": "object",
        "description": "Serializer for confirming a password reset attempt.",
        "properties": {
          "new_password1": {
            "type": "string",
            "maxLength": 128
          },
          "new_password2": {
            "type": "string",
            "maxLength": 128
          },
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "new_password1",
          "new_password2",
          "token",
          "uid"
        ]
      },
      "PatchedEstablishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "photo": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "maxLength": 150
          },
          "location": {
            "type": "string",
            "maxLength": 40
          },
          "about": {
            "type": "string",
            "maxLength": 2048
          },
          "portkey": {
            "type": "string",
            "maxLength": 10
          },
          "active": {
            "type": "boolean"
          },
          "chat_url_meta": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "custom_url": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "terms": {
            "type": "string",
            "maxLength": 2048
          },
          "rental_process": {
            "type": "string",
            "maxLength": 2048
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "PatchedExtraItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "hotel": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "PatchedOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "hotelname": {
            "type": "string",
            "readOnly": true
          },
          "roomname": {
            "type": "string",
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "city": {
            "type": "string",
            "maxLength": 40
          },
          "location": {
            "type": "string",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "maxLength": 150
          },
          "hotelkey": {
            "type": "string",
            "maxLength": 10
          },
          "roomkey": {
            "type": "string",
            "maxLength": 10
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "pp_id": {
            "type": "string",
            "nullable": true,
            "description": "transaction id received by payment provider",
            "maxLength": 100
          },
          "cancelled": {
            "type": "boolean"
          },
          "complete": {
            "type": "boolean"
          },
          "payment_method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodEnum"
              }
            ],
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "extra_items": {
            "type": "array",
            "items": {}
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "room": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "PatchedQruser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "ttuser": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "ttpswd": {
            "type": "string",
            "nullable": true,
            "maxLength": 12
          },
          "tttoken": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "ttrtoken": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "ttlock": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "yale_pswd": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "yale_tkn": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "LPChnlId": {
            "type": "string",
            "nullable": true,
            "maxLength": 11
          },
          "LPChnlKey": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "phone_valid": {
            "type": "boolean"
          },
          "phone_validation_code": {
            "type": "integer",
            "maximum": 9999,
            "minimum": 1000,
            "nullable": true
          },
          "phone_validation_code_expiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phone_last_validation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "einvoice": {
            "type": "string",
            "nullable": true,
            "description": "載具",
            "maxLength": 100
          },
          "transfer_bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransferBankEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "transfer_account": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "oen_merchant_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "oen_token": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "PatchedRoom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 30
          },
          "device_id": {
            "type": "string",
            "maxLength": 200
          },
          "about": {
            "type": "string",
            "maxLength": 500
          },
          "person": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "mon": {
            "type": "boolean"
          },
          "tue": {
            "type": "boolean"
          },
          "wed": {
            "type": "boolean"
          },
          "thu": {
            "type": "boolean"
          },
          "fri": {
            "type": "boolean"
          },
          "sat": {
            "type": "boolean"
          },
          "sun": {
            "type": "boolean"
          },
          "open": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "close": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "room_type": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "size": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "hour_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "holi_hour_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "day_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "holi_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "telephone": {
            "type": "string",
            "maxLength": 14
          },
          "facility": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048
          },
          "photo": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "maxLength": 30
          },
          "hotel": {
            "type": "string",
            "format": "uuid"
          },
          "extra_items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "PatchedUserDetails": {
        "type": "object",
        "description": "User model w/o password",
        "properties": {
          "pk": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "使用者名稱",
            "description": "必要的。150 個字或更少，只包含字母、數字和 @/./+/-/_。",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "title": "名字",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "姓氏",
            "maxLength": 150
          }
        }
      },
      "PaymentMethodEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "* `0` - LINE\n* `1` - CASH\n* `2` - TRANSFER\n* `3` - CARD"
      },
      "Qruser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "ttuser": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "ttpswd": {
            "type": "string",
            "nullable": true,
            "maxLength": 12
          },
          "tttoken": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "ttrtoken": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "ttlock": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "yale_pswd": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "yale_tkn": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "LPChnlId": {
            "type": "string",
            "nullable": true,
            "maxLength": 11
          },
          "LPChnlKey": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "maxLength": 32
          },
          "phone_valid": {
            "type": "boolean"
          },
          "phone_validation_code": {
            "type": "integer",
            "maximum": 9999,
            "minimum": 1000,
            "nullable": true
          },
          "phone_validation_code_expiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phone_last_validation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "einvoice": {
            "type": "string",
            "nullable": true,
            "description": "載具",
            "maxLength": 100
          },
          "transfer_bank": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransferBankEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "transfer_account": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "oen_merchant_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "oen_token": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "RestAuthDetail": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "detail"
        ]
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 30
          },
          "device_id": {
            "type": "string",
            "maxLength": 200
          },
          "about": {
            "type": "string",
            "maxLength": 500
          },
          "person": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "mon": {
            "type": "boolean"
          },
          "tue": {
            "type": "boolean"
          },
          "wed": {
            "type": "boolean"
          },
          "thu": {
            "type": "boolean"
          },
          "fri": {
            "type": "boolean"
          },
          "sat": {
            "type": "boolean"
          },
          "sun": {
            "type": "boolean"
          },
          "open": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "close": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "room_type": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "size": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          },
          "hour_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "holi_hour_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "day_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "holi_rate": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "telephone": {
            "type": "string",
            "maxLength": 14
          },
          "facility": {
            "type": "string",
            "nullable": true,
            "maxLength": 2048
          },
          "photo": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "maxLength": 30
          },
          "hotel": {
            "type": "string",
            "format": "uuid"
          },
          "extra_items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "created",
          "fri",
          "id",
          "mon",
          "name",
          "person",
          "sat",
          "size",
          "sun",
          "telephone",
          "thu",
          "tue",
          "wed"
        ]
      },
      "SocialLogin": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        }
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "access",
          "refresh"
        ]
      },
      "TokenVerify": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "token"
        ]
      },
      "TransferBankEnum": {
        "enum": [
          "\ufeff(004) 臺灣銀行",
          "(005) 臺灣土地銀行",
          "(006) 合作金庫商業銀行",
          "(007) 第一商業銀行",
          "(008) 華南商業銀行",
          "(009) 彰化商業銀行",
          "(011) 上海商業儲蓄銀行",
          "(012) 台北富邦商業銀行",
          "(013) 國泰世華商業銀行",
          "(016) 高雄銀行",
          "(017) 兆豐國際商業銀行",
          "(018) 全國農業金庫",
          "(020) 日商瑞穗銀行台北分行",
          "(021) 花旗(台灣)商業銀行",
          "(022) 美國銀行台北分行",
          "(023) 泰國盤谷銀行台北分行",
          "(025) 菲律賓首都銀行台北分行",
          "(039) 澳商澳盛銀行台北分行",
          "(048) 王道商業銀行",
          "(050) 臺灣中小企業銀行",
          "(052) 渣打國際商業銀行",
          "(053) 台中商業銀行",
          "(054) 京城商業銀行",
          "(072) 德商德意志銀行台北分行",
          "(075) 香港商東亞銀行台北分行",
          "(081) 匯豐(台灣)商業銀行",
          "(082) 法國巴黎銀行台北分行",
          "(101) 瑞興商業銀行",
          "(102) 華泰商業銀行",
          "(103) 臺灣新光商業銀行",
          "(108) 陽信商業銀行",
          "(114) 基隆第一信用合作社",
          "(115) 基隆市第二信用合作社",
          "(118) 板信商業銀行",
          "(119) 淡水第一信用合作社",
          "(130) 新竹第一信用合作社",
          "(132) 新竹第三信用合作社",
          "(146) 台中市第二信用合作社",
          "(147) 三信商業銀行",
          "(162) 彰化第六信用合作社",
          "(204) 高雄市第三信用合作社",
          "(215) 花蓮第一信用合作社",
          "(216) 花蓮第二信用合作社",
          "(329) 印尼商印尼人民銀行台北分行",
          "(388) 全盈支付金融科技股份有限公司",
          "(389) 全支付電子支付股份有限公司",
          "(390) 悠遊卡股份有限公司",
          "(391) 一卡通票證股份有限公司",
          "(392) 愛金卡股份有限公司",
          "(395) 橘子支行動支付股份有限公司",
          "(396) 街口電子支付股份有限公司",
          "(397) 歐付寶電子支付股份有限公司",
          "(398) 簡單行動支付股份有限公司",
          "(600) 農金資訊股份有限公司",
          "(700) 中華郵政股份有限公司",
          "(803) 聯邦商業銀行",
          "(805) 遠東國際商業銀行",
          "(806) 元大商業銀行",
          "(807) 永豐商業銀行",
          "(808) 玉山商業銀行",
          "(809) 凱基商業銀行",
          "(810) 星展（台灣）商業銀行",
          "(812) 台新國際商業銀行",
          "(816) 安泰商業銀行",
          "(822) 中國信託商業銀行",
          "(823) 將來商業銀行",
          "(824) 連線商業銀行",
          "(826) 樂天國際商業銀行",
          "(952) 財團法人農漁會南區資訊中心",
          "(997) 中華民國信用合作社聯合社南區聯合資訊處理中心"
        ],
        "type": "string",
        "description": "* `\ufeff(004) 臺灣銀行` - \ufeff(004) 臺灣銀行\n* `(005) 臺灣土地銀行` - (005) 臺灣土地銀行\n* `(006) 合作金庫商業銀行` - (006) 合作金庫商業銀行\n* `(007) 第一商業銀行` - (007) 第一商業銀行\n* `(008) 華南商業銀行` - (008) 華南商業銀行\n* `(009) 彰化商業銀行` - (009) 彰化商業銀行\n* `(011) 上海商業儲蓄銀行` - (011) 上海商業儲蓄銀行\n* `(012) 台北富邦商業銀行` - (012) 台北富邦商業銀行\n* `(013) 國泰世華商業銀行` - (013) 國泰世華商業銀行\n* `(016) 高雄銀行` - (016) 高雄銀行\n* `(017) 兆豐國際商業銀行` - (017) 兆豐國際商業銀行\n* `(018) 全國農業金庫` - (018) 全國農業金庫\n* `(020) 日商瑞穗銀行台北分行` - (020) 日商瑞穗銀行台北分行\n* `(021) 花旗(台灣)商業銀行` - (021) 花旗(台灣)商業銀行\n* `(022) 美國銀行台北分行` - (022) 美國銀行台北分行\n* `(023) 泰國盤谷銀行台北分行` - (023) 泰國盤谷銀行台北分行\n* `(025) 菲律賓首都銀行台北分行` - (025) 菲律賓首都銀行台北分行\n* `(039) 澳商澳盛銀行台北分行` - (039) 澳商澳盛銀行台北分行\n* `(048) 王道商業銀行` - (048) 王道商業銀行\n* `(050) 臺灣中小企業銀行` - (050) 臺灣中小企業銀行\n* `(052) 渣打國際商業銀行` - (052) 渣打國際商業銀行\n* `(053) 台中商業銀行` - (053) 台中商業銀行\n* `(054) 京城商業銀行` - (054) 京城商業銀行\n* `(072) 德商德意志銀行台北分行` - (072) 德商德意志銀行台北分行\n* `(075) 香港商東亞銀行台北分行` - (075) 香港商東亞銀行台北分行\n* `(081) 匯豐(台灣)商業銀行` - (081) 匯豐(台灣)商業銀行\n* `(082) 法國巴黎銀行台北分行` - (082) 法國巴黎銀行台北分行\n* `(101) 瑞興商業銀行` - (101) 瑞興商業銀行\n* `(102) 華泰商業銀行` - (102) 華泰商業銀行\n* `(103) 臺灣新光商業銀行` - (103) 臺灣新光商業銀行\n* `(108) 陽信商業銀行` - (108) 陽信商業銀行\n* `(114) 基隆第一信用合作社` - (114) 基隆第一信用合作社\n* `(115) 基隆市第二信用合作社` - (115) 基隆市第二信用合作社\n* `(118) 板信商業銀行` - (118) 板信商業銀行\n* `(119) 淡水第一信用合作社` - (119) 淡水第一信用合作社\n* `(130) 新竹第一信用合作社` - (130) 新竹第一信用合作社\n* `(132) 新竹第三信用合作社` - (132) 新竹第三信用合作社\n* `(146) 台中市第二信用合作社` - (146) 台中市第二信用合作社\n* `(147) 三信商業銀行` - (147) 三信商業銀行\n* `(162) 彰化第六信用合作社` - (162) 彰化第六信用合作社\n* `(204) 高雄市第三信用合作社` - (204) 高雄市第三信用合作社\n* `(215) 花蓮第一信用合作社` - (215) 花蓮第一信用合作社\n* `(216) 花蓮第二信用合作社` - (216) 花蓮第二信用合作社\n* `(329) 印尼商印尼人民銀行台北分行` - (329) 印尼商印尼人民銀行台北分行\n* `(388) 全盈支付金融科技股份有限公司` - (388) 全盈支付金融科技股份有限公司\n* `(389) 全支付電子支付股份有限公司` - (389) 全支付電子支付股份有限公司\n* `(390) 悠遊卡股份有限公司` - (390) 悠遊卡股份有限公司\n* `(391) 一卡通票證股份有限公司` - (391) 一卡通票證股份有限公司\n* `(392) 愛金卡股份有限公司` - (392) 愛金卡股份有限公司\n* `(395) 橘子支行動支付股份有限公司` - (395) 橘子支行動支付股份有限公司\n* `(396) 街口電子支付股份有限公司` - (396) 街口電子支付股份有限公司\n* `(397) 歐付寶電子支付股份有限公司` - (397) 歐付寶電子支付股份有限公司\n* `(398) 簡單行動支付股份有限公司` - (398) 簡單行動支付股份有限公司\n* `(600) 農金資訊股份有限公司` - (600) 農金資訊股份有限公司\n* `(700) 中華郵政股份有限公司` - (700) 中華郵政股份有限公司\n* `(803) 聯邦商業銀行` - (803) 聯邦商業銀行\n* `(805) 遠東國際商業銀行` - (805) 遠東國際商業銀行\n* `(806) 元大商業銀行` - (806) 元大商業銀行\n* `(807) 永豐商業銀行` - (807) 永豐商業銀行\n* `(808) 玉山商業銀行` - (808) 玉山商業銀行\n* `(809) 凱基商業銀行` - (809) 凱基商業銀行\n* `(810) 星展（台灣）商業銀行` - (810) 星展（台灣）商業銀行\n* `(812) 台新國際商業銀行` - (812) 台新國際商業銀行\n* `(816) 安泰商業銀行` - (816) 安泰商業銀行\n* `(822) 中國信託商業銀行` - (822) 中國信託商業銀行\n* `(823) 將來商業銀行` - (823) 將來商業銀行\n* `(824) 連線商業銀行` - (824) 連線商業銀行\n* `(826) 樂天國際商業銀行` - (826) 樂天國際商業銀行\n* `(952) 財團法人農漁會南區資訊中心` - (952) 財團法人農漁會南區資訊中心\n* `(997) 中華民國信用合作社聯合社南區聯合資訊處理中心` - (997) 中華民國信用合作社聯合社南區聯合資訊處理中心"
      },
      "UserDetails": {
        "type": "object",
        "description": "User model w/o password",
        "properties": {
          "pk": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "使用者名稱",
            "description": "必要的。150 個字或更少，只包含字母、數字和 @/./+/-/_。",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true,
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "title": "名字",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "姓氏",
            "maxLength": 150
          }
        },
        "required": [
          "email",
          "pk",
          "username"
        ]
      },
      "VerifyEmail": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "key"
        ]
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}