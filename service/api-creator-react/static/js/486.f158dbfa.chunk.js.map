{"version":3,"file":"static/js/486.f158dbfa.chunk.js","mappings":"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","sources":["assets/svg/br-trash.svg","fragment/DefinitionBuild.js","fragment/ApiSchema.js","fragment/ApiProfile.js","fragment/ApiBuild.js","fragment/ApiConnect.js","assets/svg/br-minus.svg","assets/svg/br-plus.svg","assets/svg/star-sign.svg","assets/svg/folder-download.svg","assets/svg/folder-upload.svg","assets/svg/br-browser.svg","assets/svg/sr-square-root.svg","assets/svg/book-bookmark.svg","fragment/ApiJson.js","enum/apiConnect/ParameterType.js","enum/apiConnect/SwaggerPropertyType.js","fragment/ApiManage.js","flow/apiManage.js","component/DateTimePicker.jsx","component/TextArea.jsx","assets/svg/br-sensor-alert.svg","component/FormModal.jsx","element/ApiConnect/AddTagModal.jsx","element/ApiConnect/AddApiModal.jsx","element/ApiConnect/BodyModalJsonAside.jsx","element/ApiConnect/AddBodyModal.jsx","element/ApiConnect/EditTagModal.jsx","element/ApiConnect/AddResponseModal.jsx","element/ApiConnect/EditAttrModal.jsx","element/ApiConnect/AddQueryModal.jsx","element/ApiConnect/AddSecurityModal.jsx","enum/apiConnect/AttrSrc.js","assets/svg/form.svg","element/ApiConnect/DocxSave.jsx","flow/docxControl.js","element/ApiConnect/AddApiDocModal.jsx","flow/apiJsonControl.js","element/ApiConnect/ApiSettingModal.jsx","element/ApiConnect/AddExample.jsx","element/ApiConnect/AddAttrModal.jsx","pages/ApiConnect.jsx"],"sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M490.667,96c0-17.673-14.327-32-32-32h-80.555C364.632,25.757,328.549,0.13,288,0h-64   c-40.549,0.13-76.632,25.757-90.112,64H53.333c-17.673,0-32,14.327-32,32l0,0c0,17.673,14.327,32,32,32H64v266.667   C64,459.468,116.532,512,181.333,512h149.333C395.468,512,448,459.468,448,394.667V128h10.667   C476.34,128,490.667,113.673,490.667,96z M384,394.667C384,424.122,360.122,448,330.667,448H181.333   C151.878,448,128,424.122,128,394.667V128h256V394.667z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.667,384c17.673,0,32-14.327,32-32V224c0-17.673-14.327-32-32-32s-32,14.327-32,32v128   C170.667,369.673,184.994,384,202.667,384z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M309.333,384c17.673,0,32-14.327,32-32V224c0-17.673-14.327-32-32-32s-32,14.327-32,32v128   C277.333,369.673,291.66,384,309.333,384z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrTrash);\nexport default __webpack_public_path__ + \"static/media/br-trash.e0156799225147e3ab5089241d648014.svg\";\nexport { ForwardRef as ReactComponent };","import ApiSchema from \"./ApiSchema\";\n\nclass DefinitionBuild {\n    // definitionMap = {}; // 舊版\n\n    refSchemaMap = {};\n\n    constructor(json) {\n        this.json = json;\n\n        if (!this.json) {\n            console.error(`DefinitionBuild: json not exist`);\n        }\n\n        // $ref: \"#/components/schemas/Pet\"\n\n        const vm = this;\n\n        // 單純把json中的每塊schemaObj挖出來\n        this.buildRefSchemaMap(this.json, function (refKey, schemaObj) {\n            vm.refSchemaMap[refKey] = schemaObj;\n            // vm.refSchemaMap[refKey] = new ApiSchema(schemaObj, vm, 1).getSchema();\n        });\n\n        // 跑每個schemaObj，清掉裡面的$ref\n        this.resolveEachRefDefinition(this.refSchemaMap, function (refKey, schemaObj) {\n            const outSchemaObj = new ApiSchema(schemaObj, vm, 1).getSchema();\n            vm.refSchemaMap[refKey] = outSchemaObj; // 取代掉原本的\n        });\n\n        // console.log('vm.refSchemaMap', vm.refSchemaMap)\n\n\n        /*舊版\n\n        // 有可能第一輪會抓不到全部definition，要跑2輪\n        // 因為有可能ref參照的definition在後面，尚未生成\n        this.definitionMap = this.buildDefinitionMap(json, 1);\n        // console.log(`first run ------------------------------`)\n        this.definitionMap = this.buildDefinitionMap(json, 2, this.definitionMap);\n        */\n    }\n    resolveEachRefDefinition(refSchemaMap, resolveEach) {\n        const vm = this;\n        Object.keys(refSchemaMap).forEach((refKey) => {\n            const schemaObj = refSchemaMap[refKey];\n            resolveEach(refKey, schemaObj);\n        });\n    }\n    buildRefKey(categoryKey, componentType, definitionType) {\n        // categoryKey: 'components'\n        return `#/${categoryKey}/${componentType}/${definitionType}`;\n        // '#/components/schemas/Pet'\n    }\n    buildRefSchemaMap(json, addRefSchema) {\n        if (!json.components) {\n            console.warn(`DefinitionBuild: json.components not exist`);\n            return;\n        }\n        const componentMap = json.components;\n        //  componentsMap: {\n        //     schemas: <componentTypeObj>\n        //     requestBodies: <componentTypeObj>\n        //     securitySchemes: 不支援 <componentTypeObj>\n        // }\n        const vm = this;\n\n        Object.keys(componentMap).forEach((componentType) => {\n            const validComponentTypeMap = {\n                schemas: true,\n                requestBodies: true,\n                securitySchemes: false, // 不支援\n            };\n            if (!validComponentTypeMap[componentType]) {\n                return;\n            }\n            const componentTypeObj = componentMap[componentType];\n\n            Object.keys(componentTypeObj).forEach((definitionType) => {\n                const definitionTypeObj = componentTypeObj[definitionType];\n\n                const refKey = vm.buildRefKey('components', componentType, definitionType);\n                if (componentType === 'schemas') {\n                    //  schemas: {\n                    //     Order: { // <definitionTypeObj>\n                    //         type: \"object\"\n                    //         properties\n                    //     }\n                    // }\n                    addRefSchema(refKey, definitionTypeObj);\n                } else if (componentType === 'requestBodies') {\n                    //  requestBodies: {\n                    //     \"Pet\": {\n                    //         \"description\": \"Pet object that needs to be added to the store\",\n                    //         \"content\": {\n                    //             \"application/json\": {\n                    //                 \"schema\": {\n                    //                     \"$ref\": \"#/components/schemas/Pet\"\n                    //                 }\n                    //             },\n                    //             \"application/xml\": {\n                    //                 \"schema\": {\n                    //                     \"$ref\": \"#/components/schemas/Pet\"\n                    //                 }\n                    //             }\n                    //         }\n                    //     }\n                    // } \n                    const jsonContent = definitionTypeObj.content['application/json']; // 目前先不支援xml等其他格式\n                    const schemaObj = jsonContent.schema;\n                    addRefSchema(refKey, schemaObj);\n                }\n            });\n        })\n    }\n    getRefSchema(refKey) {\n        return this.refSchemaMap[refKey];\n    }\n    /*\n    getRefSchema(defKey) {\n        // defKey: '#/components/requestBodies/Pet'\n        // console.log('getRefSchema defKey', defKey)\n\n        const defLayerList = defKey.split('/');\n        console.log('defLayerList', defLayerList)\n        if (defLayerList[0] !== '#') {\n            console.error(`getRefSchema: defKey format error`, defKey);\n            return null;\n        }\n        if (defLayerList[1] !== 'components') {\n            console.error(`getRefSchema: defKey format components error`, defKey);\n            return null;\n        }\n        const componentsMap = this.json['components'];\n        //  componentsMap: {\n        //     schemas: <componentTypeObj>\n        //     requestBodies: <componentTypeObj>\n        //     securitySchemes: 不支援 <componentTypeObj>\n        // }\n        if (!componentsMap) {\n            console.error(`getRefSchema: componentsMap not exist`);\n            return null;\n        }\n\n        const componentType = defLayerList[2];\n        const validComponentTypeMap = {\n            schemas: true,\n            requestBodies: true,\n            securitySchemes: false,\n        };\n        if (!validComponentTypeMap[componentType]) {\n            console.error(`componentType is not valid`, componentType);\n            return null;\n        }\n\n        const componentTypeObj = componentsMap[componentType];\n        if (!componentTypeObj) {\n            console.error(`getRefSchema: componentTypeObj not exist`);\n            return null;\n        }\n\n        const definitionTypeObj = componentTypeObj[defLayerList[3]];\n        if (!definitionTypeObj) {\n            console.error(`getRefSchema: definitionTypeObj not exist`);\n            return null;\n        }\n\n        if(componentType === 'schemas'){\n            //  schemas: {\n            //     Order: { // <definitionTypeObj>\n            //         type: \"object\"\n            //         properties\n            //     }\n            // }\n            return definitionTypeObj;\n        }else if (componentType === 'requestBodies'){\n            //  requestBodies: {\n            //     \"Pet\": {\n            //         \"description\": \"Pet object that needs to be added to the store\",\n            //         \"content\": {\n            //             \"application/json\": {\n            //                 \"schema\": {\n            //                     \"$ref\": \"#/components/schemas/Pet\"\n            //                 }\n            //             },\n            //             \"application/xml\": {\n            //                 \"schema\": {\n            //                     \"$ref\": \"#/components/schemas/Pet\"\n            //                 }\n            //             }\n            //         }\n            //     }\n            // } \n\n            const jsonContent = definitionTypeObj.content['application/json']; // 目前先不支援xml等其他格式\n\n            const schemaObj = jsonContent.schema;\n            return schemaObj;\n        }\n\n        console.error(`getRefSchema: Unknown componentType`);\n        return null;\n    } */\n    // 舊版------------------------------------------------\n    /*\n    getDefinitionMap() {\n        return this.definitionMap;\n    }\n    // 從ApiConnectComposition搬過來的函式\n    buildDefinitionMap(json, run, definitionMap = {}) {\n        // const vm = this;\n        const silentMode = run === 1; // 當第一run時，開啟silentMode\n\n        const definitions = json.definitions || {};\n\n        Object.keys(definitions).forEach((definitionKey) => {\n            let definitionData = Object.assign({}, json.definitions[definitionKey]);\n            // 預先將definition的shema build出來，解決裡面巢狀schema的問題\n            // definitionData = vm.buildSchema(definitionData);\n            definitionData = new ApiSchema(definitionData, definitionMap, null, {\n                silent: silentMode,\n            }).getSchema();\n            definitionMap[definitionKey] = definitionData;\n        });\n        // this.definitionMap = definitionMap;\n        return definitionMap;\n    }\n    */\n}\n\n\nexport default DefinitionBuild;","\n// OpenAPI 3.0版的ApiSchema\n// ps.將ApiConnect.js內的class ApiSchema直接複製過來改的，和swagger2.0版並沒有統合\n\nimport DefinitionBuild from \"./DefinitionBuild\";\n\n\nclass ApiSchema {\n    name = '';\n    silent = false;\n    schema = null;\n    // definitionMap = {};\n    layer = 1;\n    constructor(schema, defBuildObj, layer, { silent } = { silent: false }) {\n        // , definitionMap\n        if (!schema) {\n            console.error(`ApiSchema: no schema`);\n            return;\n        }\n        if (layer) {\n            this.layer = layer;\n        }\n        if (layer > 8) {\n            console.error(`ApiSchema layer over 8`, this);\n        }\n        if (!(defBuildObj instanceof DefinitionBuild)) {\n            console.error(`ApiSchema: defBuildObj is not DefinitionBuild`);\n            return;\n        }\n        this.defBuildObj = defBuildObj;\n        // this.definitionMap = definitionMap;\n        this.name = schema.name;\n        this.silent = silent;\n        // 將$ref內定義的物件替換進去\n        this.schema = this.buildSchema(schema);\n        // 將 'object' 類型的物件增加attributes欄位\n        this.schema = this.buildAttributes(this.schema);\n    }\n    // buildSchema--------------------------------------------------\n\n    // getDefinitionData(defKey) {\n    //     if (!this.definitionMap[defKey]) {\n    //         if (!this.silent) { // ps.寧靜模式下不報錯\n    //             console.error(`getDefinitionData: definition ${defKey} not exist`);\n    //         }\n    //     }\n    //     return this.definitionMap[defKey];\n    // }\n    getDefKey(ref) {\n        // ref: '#/definitions/service.AccountEntityWrap'\n        console.log('getDefKey', ref)\n\n        if (!/^\\#\\/definitions\\//.test(ref)) {\n            // definition識別失敗\n            console.error(`getDefKey: definition ref validate fail, unknown $ref ${ref}`);\n            return;\n        }\n\n        // 將前綴的 '#/definitions/' 去掉\n        const defKey = ref.replace(/^\\#\\/definitions\\//, \"\");\n        return defKey;\n    }\n    // 組建API時，取得schema用的\n    buildSchema(schema) {\n        // console.log(`buildSchema`, schema)\n        if (typeof schema !== 'object') {\n            // 目前只支援物件\n            console.error(`getSchema: schema is not object`, schema);\n            return schema;\n        }\n\n        schema = this.replaceAllOf(schema);\n\n        schema = this.replaceRefDefinition(schema);\n\n        schema = this.replaceObjectRefDefinition(schema);\n\n        return schema;\n    }\n    // 若allOf存在，則將definition替換進來\n    replaceAllOf(schema) {\n        /* responses: {\n            200: {\n                description: \"OK(200回應的描述)\"\n                schema: {\n                    allOf: [{\n                        $ref: \"#/definitions/app.Response\"\n                    }, {\n                        type: \"object\"\n                        data: {\n                            $ref: \"#/definitions/models.Account\"\n                        }\n                    }] // ==> 要將這個allOf替換成合併後的schema\n                }\n            }\n            500: {\n                description: \"Internal Server Error\"\n                schema: {\n                    $ref: \"#/definitions/app.Response\"\n                    // ==> 這個要將definition替代進去\n                }\n            }\n        } */\n        const vm = this;\n\n\n        if (!schema['allOf']) {\n            return schema;\n        }\n\n        // 代表有allOf陣列要處理\n\n        let allOfSchemaList = schema['allOf'].map(val => val);\n\n        let haveRef = false;\n        allOfSchemaList = allOfSchemaList.map((eachSchema) => {\n            // console.log(`before getSchema`, eachSchema);\n            // console.log(`getSchema`, new ApiSchema(eachSchema, vm.definitionMap, vm.layer + 1).getSchema());\n            const schemaObj = new ApiSchema(eachSchema, vm.defBuildObj, vm.layer + 1).getSchema();\n            if (schemaObj['$ref']) {\n                // 代表依舊是$ref\n                haveRef = true;\n            }\n            return schemaObj;\n            // return new ApiSchema(eachSchema, vm.definitionMap, vm.layer + 1).getSchema();\n        });\n        if (haveRef) { // 代表還有Ref，暫不處理\n            console.error(`still haveRef`);\n            return allOfSchemaList;\n        }\n\n        // console.log('allOfSchemaList', allOfSchemaList)\n\n        // 合併allOf的List---------------------------------------------------\n\n        let mergedSchema = null;\n        // 將allOfSchemaList所有的schema合併\n        allOfSchemaList.forEach((eachSchema) => {\n            if (!mergedSchema) {\n                mergedSchema = Object.assign({}, eachSchema);\n                return;\n            }\n\n            if (eachSchema.type !== 'object') {\n                console.error(`allOf merge fail: schema.type is not object`, eachSchema);\n                return;\n            }\n            Object.keys(eachSchema.properties).forEach((propKey) => {\n                // 取代掉mergedSchema當中的properties的欄位\n                mergedSchema.properties[propKey] = eachSchema.properties[propKey];\n            });\n        })\n        if (mergedSchema) {\n            // 代表有成功合併\n            return mergedSchema;\n        }\n\n        return schema;\n\n    }\n    // 若$ref存在，則將definition替換進來\n    replaceRefDefinition(schema) {\n        if (!schema['$ref']) {\n            return schema;\n        }\n        // 代表有$ref，要處理巢狀的$ref\n        const refKey = schema['$ref'];\n        let defSchemaData = this.defBuildObj.getRefSchema(refKey);\n        // console.log('replaceRefDefinition defSchemaData', defSchemaData)\n\n        // defSchemaData:\n        // {\n        //     $ref: \"#/components/schemas/Pet\"\n        // }\n\n        // defSchemaData = this.defBuildObj.getRefSchema\n\n        if (!defSchemaData) {\n            return schema; // 代表沒抓到，直接回傳原始schema\n        }\n        return defSchemaData;\n\n\n\n        // const defKey = this.getDefKey(schema['$ref']);\n        // if (!defKey) {\n        //     return schema;\n        // }\n        // const definitionData = this.getDefinitionData(defKey);\n        // if (!definitionData) {\n        //     // 代表沒抓到，直接回傳原始schema\n        //     return schema;\n        // }\n        // return definitionData;\n    }\n    // 負責檢查object型態當中的所有properties，若其中有$ref，則取代掉\n    replaceObjectRefDefinition(schema) {\n        if (schema.type !== 'object') {\n            return schema;\n        }\n        /* schema: {\n            type: \"object\"\n            properties: {\n                data: {\n                    $ref: \"#/definitions/models.Account\"\n                }\n            }     \n        }*/\n        if (!schema.properties) {\n            return schema;\n        }\n\n        // console.log(`replaceObjectRefDefinition`, schema)\n\n        // 這個檢查只跑第一層，不遞迴\n        Object.keys(schema.properties).forEach((propKey) => {\n            // propKey: 'data'\n            const propSchema = schema.properties[propKey];\n\n            /*\n            if (propSchema.type === 'array') {\n                valueSchema = propSchema.items;\n            }\n            const setPropSchema = function (refSchemaObj) {\n                if (propSchema.type === 'array') {\n                    propSchema.items = refSchemaObj;\n                    schema.properties[propKey] = propSchema;\n                } else {\n                    schema.properties[propKey] = refSchemaObj;\n                }\n            }*/\n\n\n            if (!propSchema) {\n                // console.error(`prop '${propKey}' propSchema is null`, schema, propSchema);\n                return;\n            }\n\n            if (propSchema['$ref']) {\n                schema.properties[propKey] = this.replaceRefDefinition(propSchema);\n            } else if (propSchema.type === 'array') {\n                propSchema.items = this.replaceRefDefinition(propSchema.items);\n                schema.properties[propKey] = propSchema;\n            }\n        });\n        return schema;\n    }\n    // buildAttributes----------------------------------------------------\n\n    layerPathPush(layerPath, layerName) {\n        return layerPath.concat([layerName]);\n    }\n    buildAttributes(schema, layer = 1, layerPath = []) {\n        // layerPath: 用來顯示欄位的階層\n        // console.log(`layerPath:`, layerPath);\n\n        // console.log('buildAttributes', schema)\n\n        // 避免修改到原本的schema那個樹狀結構內的物件，否則attributes和schema就只是入口不同，但底下的物件都相同\n        schema = Object.assign({}, schema);\n\n        if (!schema) {\n            console.error('buildAttributes: schema not exist');\n            return schema;\n        }\n        if (layer > 8) {\n            console.error(`buildAttributes layer over 8`);\n            return schema;\n        }\n        const vm = this;\n\n        let schemaPack = {};\n        if (schema.type === 'object') {\n            if (!schema.properties) {\n                console.error(`shema object not have properties`);\n                return schema;\n            }\n\n            schemaPack = schema.properties;\n        } else if (schema.type === 'array') {\n            // 代表這是一個陣列，要檢查陣列內的元素型態，決定要怎麼組件schemaPack\n            if (!schema.items) {\n                console.error(`shema array not have items`);\n                return schema;\n            } else if (schema.items.type !== 'object' && schema.items.type !== 'array') {\n                // 代表可能是string, integer...也就是單純的數值陣列\n                schemaPack = {\n                    '[array-item]': schema.items,\n                };\n            } else if (schema.items.type === 'object') {\n                /* schema.items: {\n                    \"type\": \"object\",\n                    \"minProperties\": 2,\n                    \"maxProperties\": 2,\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"serial\": {\n                            \"type\": \"string\",\n                            \"minLength\": 0,\n                            \"maxLength\": 80\n                        },\n                        \"time\": {\n                            \"type\": \"string\",\n                            \"minLength\": 0,\n                            \"maxLength\": 30\n                        }\n                    },\n                    \"required\": [\n                        \"serial\",\n                        \"time\"\n                    ]\n                }, */\n\n                // 修改type: 'array' -> 'object-array'\n                // schema.type = 'object-array';\n\n                if (!schema.items.properties) {\n                    console.error(`array schema item object not have properties`);\n                    return schema;\n                }\n\n                schemaPack = schema.items.properties;\n            } else if (schema.items.type === 'array') {\n                schemaPack = {\n                    '[array-item]': schema.items,\n                };\n            } else {\n                console.error(`schema.items.type ${schema.items.type} not support`);\n                return schema;\n            }\n        }\n\n\n        // 以下負責拆包物件型schema的properties----------------------\n\n        let attributeList = [];\n        // schemaPack: schema.properties\n        Object.keys(schemaPack).forEach((key) => {\n            let attributeData = schemaPack[key];\n\n            // if (key === 'name') {\n            //     console.log('name schema', schema, schemaPack)\n            // }\n\n            let required = false;\n\n            let requiredArray;\n            if (schema.type === 'object') {\n                requiredArray = schema.required;\n            } else if (schema.type === 'array') {\n                requiredArray = schema.items.required;\n            }\n            // if (requiredArray === undefined){\n            //     console.error('requiredArray is not array', schema)\n            // }\n\n            if (requiredArray) {\n\n                if (Array.isArray(requiredArray)) {\n                    requiredArray.forEach((requiredKey) => {\n                        if (key === requiredKey) {\n                            required = true;\n                        }\n                    });\n                } else {\n                    console.error(`schema.required is not array`, schema);\n                }\n                // console.log(`build required schema [${key}] required`, schema.required, required)\n            }\n\n            // if (schema.required) {\n            //     if (Array.isArray(schema.required)) {\n            //         schema.required.forEach((requiredKey) => {\n            //             if (key === requiredKey) {\n            //                 required = true;\n            //             }\n            //         });\n            //     } else {\n            //         console.error(`schema.required is not array`);\n            //     }\n            //     // console.log(`build required schema [${key}] required`, schema.required, required)\n            // }\n\n            // console.log(`${propName}`, attributeData)\n            attributeData = Object.assign({}, attributeData);\n            attributeData.name = key; // 將name加上去\n\n\n            // if (Array.isArray(attributeData.required)) {\n            //     // 代表這個欄位是物件，尚未到底\n            //     // console.error('required arr cannot set', JSON.stringify(attributeData.required));\n            //     // [BUG]目前無法設定object類型欄位的required，因為會導致下一層取到boolean，原本的array被蓋掉了\n            // } else {\n            //     attributeData.required = required;\n            // }\n            attributeData.attrRequired = required; // 要避免與原本物件的required衝突\n\n            // 麵包屑\n            attributeData.layerPath = layerPath;\n\n            // 檢查是否有需要遞迴-----------------------------------------\n            if (attributeData.type === 'object' ||\n                attributeData.type === 'array') { // recursiveCheck(attributeData)\n\n                // if (attributeData.type === 'array') {\n                //     console.log('array', attributeData)\n                // } else if (attributeData.type === 'object') {\n                //     console.log('object', attributeData)\n                // }\n\n\n                // 進行遞迴\n                attributeData = vm.buildAttributes(attributeData, layer + 1,\n                    vm.layerPathPush(layerPath, attributeData.name));\n            }\n\n            // console.log(`[${key}] required`, attributeData)\n\n            attributeList.push(attributeData);\n        });\n        schema.attributes = attributeList;\n\n\n        // console.log('buildAttributes end', schema)\n\n        return schema;\n    }\n\n    // [public]------------------------------------\n    getSchema() {\n        return this.schema;\n    }\n\n    getDefinitionMap() {\n        return this.definitionMap;\n    }\n}\n\n\nexport default ApiSchema;","import ApiSchema from \"./ApiSchema\";\nimport DefinitionBuild from \"./DefinitionBuild\";\n\nclass ApiProfile {\n    apiData = null;\n    /*  tagData: { ===> 之後會交給ApiComposition進行解析，才顯示在View上\n                apiList: [{ // <apiData>\n                    apiData: { // <apiInfo>\n                        consumes: ['application/json']\n                        description: \"這個是1-2.API的詳細描述\"\n                        parameters: [{\n                            description: \"payload\"\n                            in: \"body\"\n                            name: \"Body\"\n                            required: true\n                            schema: {\n                                additionalProperties: false\n                                maxProperties: 12\n                                minProperties: 3\n                                properties: {activated: {…}, createdAt: {…}, email: {…}, enabled: {…}, id: {…}, …}\n                                required: (3) ['email', 'id', 'role']\n                                type: \"object\"\n                                attributes: (12) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n                                // <---attributes插入在這裡\n                            }\n                        }]\n                        produces: ['application/json']\n                        responses: {200: {…}, 500: {…}}\n                        summary: \"1-2.用ID取得子用戶(API名稱)\"\n                        tags: ['accounts']\n                    }\n                    apiType: \"post\"\n                    path: \"/accounts/{id}/sub-accounts\"\n                }]\n                description: \"Crossbot account-entities\"\n                externalDocs: {description: 'Find out more about our store', url: 'http://swagger.io'}\n                groupName: \"1.帳號\"\n                name: \"accounts\"\n        } */\n    defBuildObj = null;\n    constructor(rawApiInfo, apiRoute, apiType, defBuildObj) {\n        if (!(defBuildObj instanceof DefinitionBuild)) {\n            console.error(`ApiProfile: defBuildObj is not DefinitionBuild`);\n            return;\n        }\n        this.defBuildObj = defBuildObj; // DefinitionBuild\n        let apiInfo = this.addParameterBody(rawApiInfo); // 將Parameter內的body項目加回去，讓它可以顯示\n        apiInfo = this.responsesAddAttributes(apiInfo); // 在responses增加attributes，之後view會判斷docType讀取openapi3格式\n\n        this.apiData = {\n            apiData: apiInfo,\n            apiType: apiType,\n            path: apiRoute,\n        };\n    }\n    getApiData() {\n        return this.apiData;\n    }\n    responsesAddAttributes(apiInfo) {\n        const responses = apiInfo.responses || {};\n        Object.keys(responses).forEach((code) => { // code: '200'\n            const responseItem = apiInfo.responses[code];\n\n            if (!responseItem.content) return;\n            if (!responseItem.content['application/json']) return;\n            if (!responseItem.content['application/json'].schema) return;\n\n            const schemaObj = responseItem.content['application/json'].schema;\n            const newSchemaObj = new ApiSchema(schemaObj, this.defBuildObj).getSchema();\n\n            responseItem.content['application/json'].schema = newSchemaObj;\n            apiInfo.responses[code] = responseItem;\n        });\n\n        return apiInfo;\n    }\n    addParameterBody(apiData) {\n        /* apiData: { // <原始OpenAPI的apiData格式>\n            \"tags\": [\n                \"pet\"\n            ],\n            \"summary\": \"Add a new pet to the store\",\n            \"description\": \"\",\n            \"operationId\": \"addPet\",\n            \"responses\": {\n                \"405\": {\n                    \"description\": \"Invalid input\"\n                }\n            },\n            \"security\": [\n                {\n                    \"petstore_auth\": [\n                        \"write:pets\",\n                        \"read:pets\"\n                    ]\n                }\n            ],\n            \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Pet\"\n            },\n            \"parameters\": [\n                { // <---這個是要生出來的swag2.0格式\n                    description: \"Payload\"\n                    in: \"body\"\n                    name: \"Body\"\n                    required: true\n                    schema: {\n                        attributes: [{\n                            attrRequired: true\n                            description: \"\"\n                            layerPath: []\n                            name: \"email\"\n                            type: \"string\"\n                        },{\n                            attrRequired: true\n                            description: \"\"\n                            layerPath: []\n                            name: \"password\"\n                            type: \"string\"\n                        }]\n                        properties: {\n                            email: {type: 'string', description: ''}\n                            password: {type: 'string', description: ''}\n                        }\n                        required: [\"email\", \"password\"]\n                        type: \"object\"\n                    }\n                },\n                {\n                    \"description\": \"Payload\",\n                    \"name\": \"Body\",\n                    \"in\": \"body\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"fileName\": {\n                                \"type\": \"string\",\n                                \"description\": \"fileName_bbbbb\",\n                                \"default\": \"api-creator\"\n                            }\n                        },\n                        \"required\": [\n                            \"fileName\"\n                        ],\n                        \"attributes\": [\n                            {\n                                \"type\": \"string\",\n                                \"description\": \"fileName_bbbbb\",\n                                \"default\": \"api-creator\",\n                                \"name\": \"fileName\",\n                                \"attrRequired\": true,\n                                \"layerPath\": [\n\n                                ]\n                            }\n                        ]\n                    }\n                }\n                {\n                    \"name\": \"status\",\n                    \"in\": \"query\",\n                    \"description\": \"Status values that need to be considered for filter\",\n                    \"required\": true,\n                    \"explode\": true,\n                    \"schema\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"available\",\n                                \"pending\",\n                                \"sold\"\n                            ],\n                            \"default\": \"available\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"tags\",\n                    \"in\": \"query\",\n                    \"description\": \"Tags to filter by\",\n                    \"required\": true,\n                    \"explode\": true,\n                    \"schema\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"petId\",\n                    \"in\": \"path\",\n                    \"description\": \"ID of pet to return\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                },\n                {\n                    \"name\": \"api_key\",\n                    \"in\": \"header\",\n                    \"required\": false,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ]\n        }\n        */\n\n\n        // apiData.requestBody\n\n        // ApiSchema\n\n        // if (!this.definitionMap) {\n        //     console.error('ApiBuilder addParameterBody: definitionMap not exist')\n        //     return;\n        // }\n\n        if (!this.defBuildObj) {\n            console.error('ApiBuilder addParameterBody: defBuildObj not exist')\n            return apiData;\n        }\n\n        // const apiSchema = new ApiSchema(parameterItem.schema, vm.definitionMap)\n\n        if (!apiData.requestBody) {\n            // 代表沒有設定requestBody，不需要建構parameter\n            return apiData;\n        }\n\n        // console.log('apiData.requestBody', apiData.requestBody);\n\n        // 取得schemaObj\n        let schemaObj;\n        if (apiData.requestBody['$ref']) { // '#/components/requestBodies/Pet'\n            // 直接參照requestBodies\n\n            const apiSchema = new ApiSchema(apiData.requestBody, this.defBuildObj);\n            schemaObj = apiSchema.getSchema();\n        } else if (apiData.requestBody['content']) {\n            const jsonContent = apiData.requestBody['content']['application/json'];\n            if (!jsonContent) { // 代表沒有設定'application/json'格式的request body\n                return apiData;\n            }\n            let contentSchemaObj = jsonContent.schema;\n\n            if (contentSchemaObj['type']) { // 代表是普通的\n                schemaObj = contentSchemaObj\n            } else if (contentSchemaObj['$ref']) {\n                const apiSchema = new ApiSchema(contentSchemaObj, this.defBuildObj);\n                schemaObj = apiSchema.getSchema();\n            } else {\n                console.error(`Unknown contentSchemaObj`);\n                return apiData;\n            }\n        } else {\n            console.error(`requestBody format unkown`);\n            return apiData;\n        }\n\n        if (!schemaObj) {\n            return apiData;\n        }\n\n        const bodyParameterObj = {\n            description: \"Payload\",\n            in: \"body\",\n            name: \"Body\",\n            required: true,\n            schema: new ApiSchema(schemaObj, this.defBuildObj).getSchema(), // 要經過一層ApiSchema處理，才會附加attributes欄位上\n            // schema: schemaObj,\n        }\n        if (!bodyParameterObj.schema.type) {\n            // console.log('`addParameterBody: body schema is invalid`)\n            console.log(`addParameterBody: body schema is invalid`, apiData);\n            return apiData;\n        }\n\n        const addParameter = function (obj) {\n            if (!apiData.parameters) {\n                apiData.parameters = [];\n            }\n            apiData.parameters.push(obj);\n        }\n\n        addParameter(bodyParameterObj);\n\n        return apiData;\n    }\n}\n\nexport default ApiProfile;","import ApiProfile from \"./ApiProfile\";\nimport ApiSchema from \"./ApiSchema\";\nimport DefinitionBuild from \"./DefinitionBuild\";\n\n\nclass ApiDocVersion {\n    getTagList() {\n        console.error(`ApiDocVersion: \\`${this.constructor.name}\\` should implement getTagList()`);\n    }\n}\n\nclass ApiComponent {\n    outObj() {\n        console.error(`ApiComponent: \\`${this.constructor.name}\\` should implement outObj()`);\n        return;\n    }\n}\n\nclass Tag extends ApiComponent {\n    name = '';\n    description = '';\n    groupName = '';\n    setName(name) {\n        this.name = name\n    }\n    setDescription(description) {\n        this.description = description\n    }\n    setGroupName(groupName) {\n        this.groupName = groupName\n    }\n    outObj() {\n        return {\n            name: this.name,\n            description: this.description,\n            groupName: this.groupName,\n            apiList: [],\n        }\n    }\n}\n\nclass TagList extends ApiComponent {\n    // constructor() {\n    //     super();\n    // }\n\n    tagList = [];\n\n    outObj() {\n        return this.tagList;\n    }\n    push(tagObj) {\n        if (!(tagObj instanceof Tag)) {\n            console.error(`not Tag`);\n            return;\n        }\n        this.tagList.push(tagObj.outObj());\n    }\n}\n\nclass OpenApiBuild extends ApiDocVersion { // OpenAPI 3.0\n    json = null;\n    tagList = [];\n    defBuildObj = null;\n    // definitionMap = {};\n\n    constructor(json) {\n        super();\n        this.json = json;\n\n        // const tagList = this.buildTagBlockDataList(new ApiConnectComposition(json));\n\n        // console.log('tagList', tagList);\n\n        // this.tagList = tagList;\n\n        this.defBuildObj = new DefinitionBuild(json);\n        // this.definitionMap = this.defBuildObj.getDefinitionMap();\n\n        // console.log('this.definitionMap', this.definitionMap);\n\n        // 生成tag的空殼\n        this.tagList = this.buildTagList();\n\n        // 生成tag內的apiList\n        this.buildTagApiList();\n    }\n\n    // 跑每個tag，將apiList塞進去\n    buildTagApiList() {\n        /*\n        目標格式: 要build成這種格式\n        tagList: [{\n            apiList: [{\n                apiData: { // <swagger的格式>\n                    parameters\n                    produces\n                    responses\n                    tags\n                }\n                apiType: \"post\"\n                path: \"/api/provider\"\n            }]\n            \"name\": \"pet\",\n            \"description\": \"Everything about your Pets\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        }] */\n\n        if (!this.json.paths) {\n            return;\n        }\n\n        const vm = this;\n\n        const tagApiDataMap = {\n            // <tagName>: [<apiData>]\n        };\n        const addTagApiData = function (tagName, apiData) {\n            if (!apiData) {\n                console.error(`addTagApiData apiData not exist`);\n                return;\n            }\n            if (!tagApiDataMap[tagName]) {\n                tagApiDataMap[tagName] = [];\n            }\n            tagApiDataMap[tagName].push(apiData);\n        }\n        const getTagApiDataList = function (tagName) {\n            // if (!tagApiDataMap[tagName]) {\n            //     console.error(`\\`${tagName}\\` not getTagApiData`);\n            // }\n            // return tagApiDataMap[tagName];\n            return tagApiDataMap[tagName] || [];\n        }\n\n        Object.keys(this.json.paths).forEach((apiRoute) => {\n            Object.keys(this.json.paths[apiRoute]).forEach((apiType) => {\n                let apiData = this.json.paths[apiRoute][apiType];\n                const apiTags = apiData.tags;\n                if (!apiTags) { // 代表該api尚未設定掛在哪個tag底下\n                    return;\n                }\n                apiData = new ApiProfile(apiData, apiRoute, apiType, vm.defBuildObj).getApiData();\n                // apiData = vm.addParameterBody(apiData);\n\n                // ps.這塊要獨立出去\n\n                apiTags.forEach((tagName) => {\n                    addTagApiData(tagName, apiData);\n                });\n            });\n        });\n\n\n        this.tagList = this.tagList.map((tagObj) => {\n            let outTagObj = Object.assign({}, tagObj);\n\n            const apiDataList = getTagApiDataList(tagObj.name);\n            outTagObj.apiList = apiDataList;\n\n            return outTagObj\n        });\n    }\n    buildTagList() {\n\n        /* \"tags\": [\n            {\n                \"name\": \"pet\",\n                \"description\": \"Everything about your Pets\",\n                \"externalDocs\": {\n                    \"description\": \"Find out more\",\n                    \"url\": \"http://swagger.io\"\n                }\n            },\n            {\n                \"name\": \"store\",\n                \"description\": \"Access to Petstore orders\"\n            },\n            {\n                \"name\": \"user\",\n                \"description\": \"Operations about user\",\n                \"externalDocs\": {\n                    \"description\": \"Find out more about our store\",\n                    \"url\": \"http://swagger.io\"\n                }\n            }\n        ], */\n        const tagsObj = new TagList();\n\n        const docTags = this.json.tags || [];\n\n        docTags.forEach((docTagItem) => {\n            const tagObj = new Tag();\n\n            tagObj.setName(docTagItem.name);\n            tagObj.setDescription(docTagItem.description);\n            tagObj.setGroupName(docTagItem.groupName);\n\n            tagsObj.push(tagObj);\n        });\n\n        // console.log('tagsObj.outObj();', tagsObj.outObj())\n\n        return tagsObj.outObj();\n        // return [{\n        //     apiList: [],\n        //     description: \"API的分類標籤\",\n        //     groupName: \"標籤\",\n        //     name: \"tag\",\n        // }];\n    }\n    getTagList() {\n        return this.tagList;\n    }\n}\n\n\nexport default class ApiBuild {\n    json = null;\n    buildObj = null;\n    constructor(json, docType) {\n        if (!docType) {\n            console.error(`ApiBuild: docType not exist`);\n            return;\n        }\n        this.json = json;\n\n        if (docType === 'openapi3') {\n            this.buildObj = new OpenApiBuild(json);\n        } else {\n            console.error(`ApiBuild: docType not support`);\n            return;\n        }\n    }\n\n    getTagList() {\n        return this.buildObj.getTagList();\n    }\n}","import StateModel from \"model/StateModel\";\r\nimport ApiBuild from \"./ApiBuild\";\r\n\r\n/* \r\n原本是巢狀object測試，dataCollection.json要替換回去\r\n\r\n\"$ref\": \"#/definitions/null.Bool\"\r\n\r\n\r\n\r\n\"type\": \"boolean\",\r\n\"default\": true,\r\n\"description\": \"帳號是否已激活\"\r\n*/\r\n\r\nconst layerPathPush = function (layerPath, layerName) {\r\n    return layerPath.concat([layerName]);\r\n}\r\n\r\n\r\nexport class AttributeComposition {\r\n    attributeData = null;\r\n    constructor(attributeData) {\r\n        this.attributeData = attributeData;\r\n    }\r\n}\r\n\r\n\r\nexport class ApiComposition {\r\n    docType = '';\r\n    tagData = null;\r\n    constructor(apiData, docType) {\r\n        this.docType = docType;\r\n        /*  tagData: {\r\n                apiList: [{ // <apiData>\r\n                    apiData: { // <apiInfo>\r\n                        consumes: ['application/json']\r\n                        description: \"這個是1-2.API的詳細描述\"\r\n                        parameters: [{\r\n                            description: \"payload\"\r\n                            in: \"body\"\r\n                            name: \"Body\"\r\n                            required: true\r\n                            schema: {\r\n                                additionalProperties: false\r\n                                maxProperties: 12\r\n                                minProperties: 3\r\n                                properties: {activated: {…}, createdAt: {…}, email: {…}, enabled: {…}, id: {…}, …}\r\n                                required: (3) ['email', 'id', 'role']\r\n                                type: \"object\"\r\n                                attributes: (12) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n                                // <---attributes插入在這裡\r\n                            }\r\n                        }]\r\n                        produces: ['application/json']\r\n                        responses: {200: {…}, 500: {…}}\r\n                        summary: \"1-2.用ID取得子用戶(API名稱)\"\r\n                        tags: ['accounts']\r\n                    }\r\n                    apiType: \"post\"\r\n                    path: \"/accounts/{id}/sub-accounts\"\r\n                }]\r\n                description: \"Crossbot account-entities\"\r\n                externalDocs: {description: 'Find out more about our store', url: 'http://swagger.io'}\r\n                groupName: \"1.帳號\"\r\n                name: \"accounts\"\r\n        } */\r\n        // this.tagData = tagData;\r\n\r\n        this.apiData = apiData;\r\n    }\r\n    checkApiDataField(key, ...args) {\r\n\r\n        const apiInfo = this.apiData.apiData;\r\n\r\n        if (key === 'consumesContentType') {\r\n            if (!apiInfo) return false;\r\n            return apiInfo.consumes ? (apiInfo.consumes[0] != null) : false;\r\n        } else if (key === 'producesContentType') {\r\n            if (!apiInfo) return false;\r\n            return apiInfo.produces ? (apiInfo.produces[0] != null) : false;\r\n        } else if (key === 'requestAttributes') {\r\n            if (!apiInfo) return false;\r\n            if (!apiInfo.parameters) return false;\r\n            const parameterItem = apiInfo.parameters.find((parameterItem) => {\r\n                return parameterItem.in === 'body';\r\n            });\r\n\r\n            if (!parameterItem) {\r\n                return false;\r\n            }\r\n\r\n            return parameterItem.schema ? parameterItem.schema.attributes != null : false;\r\n        } else if (key === 'requestQueryAttributes') {\r\n            return this.getApiDataField(key).length !== 0;\r\n            // return apiInfo.parameters ? (apiInfo.parameters.filter(item => item.in === 'query')) : [];\r\n        } else if (key === 'responseAttributes') {\r\n            return this.getApiDataField(key, ...args).length !== 0;\r\n        } else if (key === 'requestUrlAttributes') {\r\n            return this.getApiDataField(key).length !== 0;\r\n        } else if (key === 'requestHeaderAttributes') {\r\n            return this.getApiDataField(key).length !== 0;\r\n        }\r\n        return false;\r\n    }\r\n    getApiDataField(key, ...args) {\r\n\r\n        const apiInfo = this.apiData.apiData;\r\n\r\n        if (key === 'apiTitle') {\r\n            if (!apiInfo) return '';\r\n            return apiInfo.summary || '';\r\n        } else if (key === 'apiType') {\r\n            if (!apiInfo) return '';\r\n            return this.apiData.apiType || '';\r\n        } else if (key === 'path') {\r\n            if (!apiInfo) return '';\r\n            return this.apiData.path || '';\r\n        } else if (key === 'apiDescription') {\r\n            if (!apiInfo) return '';\r\n            return this.apiData.apiData ? (this.apiData.apiData.description || '') : '';\r\n        } else if (key === 'consumesContentType') {\r\n            if (!apiInfo) return '';\r\n            return apiInfo.consumes ? (apiInfo.consumes[0] || '') : '';\r\n        } else if (key === 'producesContentType') {\r\n            if (!apiInfo) return '';\r\n            return apiInfo.produces ? (apiInfo.produces[0] || '') : '';\r\n        } else if (key === 'requestAttributes') {\r\n            // return apiInfo.attributes ? apiInfo.attributes : [];\r\n            // return apiData.apiData ? (apiData.apiData.description || '') : '';\r\n\r\n            if (!apiInfo) return [];\r\n            if (!apiInfo.parameters) return [];\r\n            const parameterItem = apiInfo.parameters.find((parameterItem) => {\r\n                return parameterItem.in === 'body';\r\n            });\r\n\r\n            if (!parameterItem) {\r\n                return [];\r\n            }\r\n\r\n            return parameterItem.schema.attributes;\r\n\r\n            /*\r\n            if (this.docType === 'swagger2') {\r\n                if (!apiInfo) return [];\r\n                if (!apiInfo.parameters) return [];\r\n                const parameterItem = apiInfo.parameters.find((parameterItem) => {\r\n                    return parameterItem.in === 'body';\r\n                });\r\n\r\n                if (!parameterItem) {\r\n                    return [];\r\n                }\r\n\r\n                return parameterItem.schema.attributes;\r\n            } else if (this.docType === 'openapi3') {\r\n                if (!apiInfo) return [];\r\n                if (!apiInfo.requestBody) return [];\r\n                if (!apiInfo.requestBody.content) return [];\r\n                if (!apiInfo.requestBody.content['application/json']) return [];\r\n                if (!apiInfo.requestBody.content['application/json'].schema) return [];\r\n\r\n                const parameterItem = apiInfo.parameters.find((parameterItem) => {\r\n                    return parameterItem.in === 'body';\r\n                });\r\n\r\n                if (!parameterItem) {\r\n                    return [];\r\n                }\r\n\r\n                return parameterItem.schema.attributes;\r\n            }\r\n            */\r\n        } else if (key === 'statusList') {\r\n            if (!apiInfo) {\r\n                return [];\r\n            }\r\n\r\n            if (!apiInfo.responses) {\r\n                return [];\r\n            }\r\n\r\n            return Object.keys(apiInfo.responses);\r\n        } else if (key === 'responseAttributes') {\r\n            /* apiInfo: {\r\n                responses: {\r\n                    '200': {\r\n                        description: \"OK(200回應的描述)\"\r\n                        schema: <schema>\r\n                    }\r\n                }\r\n            } */\r\n            const status = args[0]; // '200'\r\n\r\n            // console.log('responseAttributes this.docType', this.docType);\r\n\r\n            if (this.docType === 'swagger2') {\r\n                if (!apiInfo.responses) return [];\r\n                const responseItem = apiInfo.responses[status];\r\n                if (!responseItem) return [];\r\n                if (!responseItem.schema) return [];\r\n                if (!responseItem.schema.attributes) return [];\r\n                return responseItem.schema.attributes;\r\n            } else if (this.docType === 'openapi3') {\r\n                if (!apiInfo.responses) return [];\r\n                const responseItem = apiInfo.responses[status];\r\n                if (!responseItem) return [];\r\n                if (!responseItem.content) return [];\r\n                if (!responseItem.content['application/json']) return [];\r\n                if (!responseItem.content['application/json'].schema) return [];\r\n                if (!responseItem.content['application/json'].schema.attributes) return [];\r\n                return responseItem.content['application/json'].schema.attributes;\r\n            }\r\n        } else if (key === 'requestQueryAttributes') {\r\n            if (!apiInfo) return [];\r\n            return apiInfo.parameters ? (apiInfo.parameters.filter(item => item.in === 'query')) : [];\r\n        } else if (key === 'requestUrlAttributes') {\r\n            if (!apiInfo) return [];\r\n            return apiInfo.parameters ? (apiInfo.parameters.filter(item => item.in === 'path')) : [];\r\n        } else if (key === 'requestHeaderAttributes') {\r\n            if (!apiInfo) return [];\r\n            return apiInfo.parameters ? (apiInfo.parameters.filter(item => item.in === 'header')) : [];\r\n            // } else if (key === 'apiDescription') {\r\n            //     return apiData.apiData ? (apiData.apiData.description || '') : '';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n\r\nclass ApiSchema {\r\n\r\n\r\n    name = '';\r\n    silent = false;\r\n    schema = null;\r\n    definitionMap = {};\r\n    layer = 1;\r\n    constructor(schema, definitionMap, layer, { silent } = { silent: false }) {\r\n        if (layer) {\r\n            this.layer = layer;\r\n        }\r\n        if (layer > 8) {\r\n            console.error(`ApiSchema layer over 8`, this);\r\n        }\r\n        this.definitionMap = definitionMap;\r\n        this.name = schema.name;\r\n        this.silent = silent;\r\n        // 將$ref內定義的物件替換進去\r\n        this.schema = this.buildSchema(schema);\r\n        // 將 'object' 類型的物件增加attributes欄位\r\n        this.schema = this.buildAttributes(this.schema);\r\n    }\r\n    // buildSchema--------------------------------------------------\r\n\r\n    getDefinitionData(defKey) {\r\n        if (!this.definitionMap[defKey]) {\r\n            if (!this.silent) { // ps.寧靜模式下不報錯\r\n                console.error(`getDefinitionData: definition ${defKey} not exist`);\r\n            }\r\n        }\r\n        return this.definitionMap[defKey];\r\n    }\r\n    getDefKey(ref) {\r\n        if (!/^\\#\\/definitions\\//.test(ref)) {\r\n            // definition識別失敗\r\n            console.error(`getDefKey: definition ref validate fail, unknown $ref ${ref}`);\r\n            return;\r\n        }\r\n\r\n        const defKey = ref.replace(/^\\#\\/definitions\\//, \"\");\r\n        return defKey;\r\n    }\r\n    // 組建API時，取得schema用的\r\n    buildSchema(schema) {\r\n        // console.log(`buildSchema`, schema)\r\n        if (typeof schema !== 'object') {\r\n            // 目前只支援物件\r\n            console.error(`getSchema: schema is not object`, schema);\r\n            return schema;\r\n        }\r\n\r\n        schema = this.replaceAllOf(schema);\r\n\r\n        schema = this.replaceRefDefinition(schema);\r\n\r\n        schema = this.replaceObjectRefDefinition(schema);\r\n\r\n        return schema;\r\n    }\r\n    // 若allOf存在，則將definition替換進來\r\n    replaceAllOf(schema) {\r\n        /* responses: {\r\n            200: {\r\n                description: \"OK(200回應的描述)\"\r\n                schema: {\r\n                    allOf: [{\r\n                        $ref: \"#/definitions/app.Response\"\r\n                    }, {\r\n                        type: \"object\"\r\n                        data: {\r\n                            $ref: \"#/definitions/models.Account\"\r\n                        }\r\n                    }] // ==> 要將這個allOf替換成合併後的schema\r\n                }\r\n            }\r\n            500: {\r\n                description: \"Internal Server Error\"\r\n                schema: {\r\n                    $ref: \"#/definitions/app.Response\"\r\n                    // ==> 這個要將definition替代進去\r\n                }\r\n            }\r\n        } */\r\n        const vm = this;\r\n\r\n\r\n        if (!schema['allOf']) {\r\n            return schema;\r\n        }\r\n\r\n        // 代表有allOf陣列要處理\r\n\r\n        let allOfSchemaList = schema['allOf'].map(val => val);\r\n\r\n        allOfSchemaList = allOfSchemaList.map((eachSchema) => {\r\n            // console.log(`before getSchema`, eachSchema);\r\n            // console.log(`getSchema`, new ApiSchema(eachSchema, vm.definitionMap, vm.layer + 1).getSchema());\r\n            return new ApiSchema(eachSchema, vm.definitionMap, vm.layer + 1).getSchema();\r\n        });\r\n        // console.log('allOfSchemaList', allOfSchemaList)\r\n\r\n        let mergedSchema = null;\r\n        // 將allOfSchemaList所有的schema合併\r\n        allOfSchemaList.forEach((eachSchema) => {\r\n            if (!mergedSchema) {\r\n                mergedSchema = Object.assign({}, eachSchema);\r\n                return;\r\n            }\r\n\r\n            if (eachSchema.type !== 'object') {\r\n                console.error(`allOf merge fail: schema.type is not object`, eachSchema);\r\n                return;\r\n            }\r\n            Object.keys(eachSchema.properties).forEach((propKey) => {\r\n                // 取代掉mergedSchema當中的properties的欄位\r\n                mergedSchema.properties[propKey] = eachSchema.properties[propKey];\r\n            });\r\n        })\r\n        if (mergedSchema) {\r\n            // 代表有成功合併\r\n            return mergedSchema;\r\n        }\r\n\r\n        return schema;\r\n\r\n    }\r\n    // 若$ref存在，則將definition替換進來\r\n    replaceRefDefinition(schema) {\r\n        if (!schema['$ref']) {\r\n            return schema;\r\n        }\r\n\r\n        // 代表有$ref，要處理巢狀的$ref\r\n\r\n        const defKey = this.getDefKey(schema['$ref']);\r\n        if (!defKey) {\r\n            return schema;\r\n        }\r\n        const definitionData = this.getDefinitionData(defKey);\r\n        if (!definitionData) {\r\n            // 代表沒抓到，直接回傳原始schema\r\n            return schema;\r\n        }\r\n        return definitionData;\r\n    }\r\n    // 負責檢查object型態當中的所有properties，若其中有$ref，則取代掉\r\n    replaceObjectRefDefinition(schema) {\r\n        if (schema.type !== 'object') {\r\n            return schema;\r\n        }\r\n        /* schema: {\r\n            type: \"object\"\r\n            properties: {\r\n                data: {\r\n                    $ref: \"#/definitions/models.Account\"\r\n                }\r\n            }     \r\n        }*/\r\n        if (!schema.properties) {\r\n            return schema;\r\n        }\r\n\r\n        // console.log(`replaceObjectRefDefinition`, schema)\r\n\r\n        // 這個檢查只跑第一層，不遞迴\r\n        Object.keys(schema.properties).forEach((propKey) => {\r\n            // propKey: 'data'\r\n            const propSchema = schema.properties[propKey];\r\n            if (!propSchema) {\r\n                // console.error(`prop '${propKey}' propSchema is null`, schema, propSchema);\r\n                return;\r\n            }\r\n\r\n            if (propSchema['$ref']) {\r\n                schema.properties[propKey] = this.replaceRefDefinition(propSchema);\r\n            }\r\n        });\r\n        return schema;\r\n    }\r\n    // buildAttributes----------------------------------------------------\r\n    buildAttributes(schema, layer = 1, layerPath = []) {\r\n        // layerPath: 用來顯示欄位的階層\r\n        // console.log(`layerPath:`, layerPath);\r\n\r\n        // 避免修改到原本的schema那個樹狀結構內的物件，否則attributes和schema就只是入口不同，但底下的物件都相同\r\n        schema = Object.assign({}, schema);\r\n\r\n        if (!schema) {\r\n            console.error('buildAttributes: schema not exist');\r\n            return schema;\r\n        }\r\n        if (layer > 8) {\r\n            console.error(`buildAttributes layer over 8`);\r\n            return schema;\r\n        }\r\n        const vm = this;\r\n\r\n        let schemaPack = {};\r\n        if (schema.type === 'object') {\r\n            if (!schema.properties) {\r\n                console.error(`shema object not have properties`);\r\n                return schema;\r\n            }\r\n\r\n            schemaPack = schema.properties;\r\n        } else if (schema.type === 'array') {\r\n            // 代表這是一個陣列，要檢查陣列內的元素型態，決定要怎麼組件schemaPack\r\n            if (!schema.items) {\r\n                console.error(`shema array not have items`);\r\n                return schema;\r\n            } else if (schema.items.type !== 'object' && schema.items.type !== 'array') {\r\n                // 代表可能是string, integer...也就是單純的數值陣列\r\n                schemaPack = {\r\n                    '[array-item]': schema.items,\r\n                };\r\n            } else if (schema.items.type === 'object') {\r\n                /* schema.items: {\r\n                    \"type\": \"object\",\r\n                    \"minProperties\": 2,\r\n                    \"maxProperties\": 2,\r\n                    \"additionalProperties\": false,\r\n                    \"properties\": {\r\n                        \"serial\": {\r\n                            \"type\": \"string\",\r\n                            \"minLength\": 0,\r\n                            \"maxLength\": 80\r\n                        },\r\n                        \"time\": {\r\n                            \"type\": \"string\",\r\n                            \"minLength\": 0,\r\n                            \"maxLength\": 30\r\n                        }\r\n                    },\r\n                    \"required\": [\r\n                        \"serial\",\r\n                        \"time\"\r\n                    ]\r\n                }, */\r\n\r\n                // 修改type: 'array' -> 'object-array'\r\n                // schema.type = 'object-array';\r\n\r\n                if (!schema.items.properties) {\r\n                    console.error(`array schema item object not have properties`);\r\n                    return schema;\r\n                }\r\n\r\n                schemaPack = schema.items.properties;\r\n            } else if (schema.items.type === 'array') {\r\n                schemaPack = {\r\n                    '[array-item]': schema.items,\r\n                };\r\n            } else {\r\n                console.error(`schema.items.type ${schema.items.type} not support`);\r\n                return schema;\r\n            }\r\n        }\r\n\r\n\r\n        // 以下負責拆包物件型schema的properties----------------------\r\n\r\n        let attributeList = [];\r\n        // schemaPack: schema.properties\r\n        Object.keys(schemaPack).forEach((key) => {\r\n            let attributeData = schemaPack[key];\r\n\r\n            // if (key === 'name') {\r\n            //     console.log('name schema', schema, schemaPack)\r\n            // }\r\n\r\n            let required = false;\r\n\r\n            let requiredArray;\r\n            if (schema.type === 'object') {\r\n                requiredArray = schema.required;\r\n            } else if (schema.type === 'array') {\r\n                requiredArray = schema.items.required;\r\n            }\r\n            // if (requiredArray === undefined){\r\n            //     console.error('requiredArray is not array', schema)\r\n            // }\r\n\r\n            if (requiredArray) {\r\n\r\n                if (Array.isArray(requiredArray)) {\r\n                    requiredArray.forEach((requiredKey) => {\r\n                        if (key === requiredKey) {\r\n                            required = true;\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.error(`schema.required is not array`, schema);\r\n                }\r\n                // console.log(`build required schema [${key}] required`, schema.required, required)\r\n            }\r\n\r\n            // if (schema.required) {\r\n            //     if (Array.isArray(schema.required)) {\r\n            //         schema.required.forEach((requiredKey) => {\r\n            //             if (key === requiredKey) {\r\n            //                 required = true;\r\n            //             }\r\n            //         });\r\n            //     } else {\r\n            //         console.error(`schema.required is not array`);\r\n            //     }\r\n            //     // console.log(`build required schema [${key}] required`, schema.required, required)\r\n            // }\r\n\r\n            // console.log(`${propName}`, attributeData)\r\n            attributeData = Object.assign({}, attributeData);\r\n            attributeData.name = key; // 將name加上去\r\n\r\n\r\n            // if (Array.isArray(attributeData.required)) {\r\n            //     // 代表這個欄位是物件，尚未到底\r\n            //     // console.error('required arr cannot set', JSON.stringify(attributeData.required));\r\n            //     // [BUG]目前無法設定object類型欄位的required，因為會導致下一層取到boolean，原本的array被蓋掉了\r\n            // } else {\r\n            //     attributeData.required = required;\r\n            // }\r\n            attributeData.attrRequired = required; // 要避免與原本物件的required衝突\r\n\r\n            // 麵包屑\r\n            attributeData.layerPath = layerPath;\r\n\r\n            // 檢查是否有需要遞迴-----------------------------------------\r\n            if (attributeData.type === 'object' ||\r\n                attributeData.type === 'array') { // recursiveCheck(attributeData)\r\n\r\n                // if (attributeData.type === 'array') {\r\n                //     console.log('array', attributeData)\r\n                // } else if (attributeData.type === 'object') {\r\n                //     console.log('object', attributeData)\r\n                // }\r\n\r\n\r\n                // 進行遞迴\r\n                attributeData = vm.buildAttributes(attributeData, layer + 1,\r\n                    layerPathPush(layerPath, attributeData.name));\r\n            }\r\n\r\n            // console.log(`[${key}] required`, attributeData)\r\n\r\n            attributeList.push(attributeData);\r\n        });\r\n        schema.attributes = attributeList;\r\n\r\n        return schema;\r\n    }\r\n\r\n    // [public]------------------------------------\r\n    getSchema() {\r\n        return this.schema;\r\n    }\r\n\r\n    getDefinitionMap() {\r\n        return this.definitionMap;\r\n    }\r\n}\r\n\r\nclass ApiConnectComposition {\r\n    json = null;\r\n    definitionMap = {};\r\n\r\n    constructor(json) {\r\n        this.json = json;\r\n\r\n        /* json: {\r\n            \"definitions\": {\r\n                \"service.AccountWrap\": <definitionData>\r\n            }\r\n        } */\r\n\r\n        // 有可能第一輪會抓不到全部definition，要跑2輪\r\n        // 因為有可能ref參照的definition在後面，尚未生成\r\n        this.definitionMap = this.buildDefinitionMap(json, 1);\r\n        // console.log(`first run ------------------------------`)\r\n        this.definitionMap = this.buildDefinitionMap(json, 2, this.definitionMap);\r\n\r\n        // this.definitionMap = Object.assign({}, json.definitions);\r\n    }\r\n\r\n    // definitionMapRun = 0;\r\n    buildDefinitionMap(json, run, definitionMap = {}) {\r\n        // const vm = this;\r\n        const silentMode = run === 1; // 當第一run時，開啟silentMode\r\n\r\n        const definitions = json.definitions || {};\r\n\r\n        Object.keys(definitions).forEach((definitionKey) => {\r\n            let definitionData = Object.assign({}, json.definitions[definitionKey]);\r\n            // 預先將definition的shema build出來，解決裡面巢狀schema的問題\r\n            // definitionData = vm.buildSchema(definitionData);\r\n            definitionData = new ApiSchema(definitionData, definitionMap, null, {\r\n                silent: silentMode,\r\n            }).getSchema();\r\n            definitionMap[definitionKey] = definitionData;\r\n        });\r\n        // this.definitionMap = definitionMap;\r\n        return definitionMap;\r\n    }\r\n\r\n    // --------------------------------------------------------------\r\n\r\n    getJson() {\r\n        return this.json;\r\n    }\r\n\r\n    /*\r\n    // 處理definition內部的巢狀$ref的schema問題\r\n    buildSchema(schema, layer = 1) {\r\n        // console.log(`buildSchema layer `, layer);\r\n        if (layer > 3) {\r\n            console.error(`buildSchema over 3 layer`); // 不能超過3層\r\n            return schema;\r\n        }\r\n        const vm = this;\r\n\r\n        if (schema.type !== 'object') {\r\n            return schema;\r\n        }\r\n\r\n        if (!schema.properties) {\r\n            return schema;\r\n        }\r\n\r\n        // 將properties物件整個換新\r\n        schema.properties = Object.assign({}, schema.properties);\r\n\r\n        Object.keys(schema.properties).forEach((key) => {\r\n\r\n            // console.log(`check layer ${layer} - ${key}`);\r\n\r\n            const propData = schema.properties[key];\r\n            if (typeof propData === 'object') {\r\n                if (propData['$ref']) {\r\n                    // 代表還有巢狀schema要往下走\r\n\r\n                    // console.log(`definition $ref `, propData['$ref']);\r\n                    const defKey = vm.getDefKey(propData['$ref']);\r\n\r\n                    // console.log(`definition defKey `, defKey);\r\n\r\n                    const definitionData = vm.getDefinitionData(defKey);\r\n\r\n                    // console.log(`definitionData `, definitionData);\r\n\r\n                    if (definitionData) {\r\n                        // 代表有成功抓到definitionData，才可以往下一層走\r\n                        schema.properties[key] = vm.buildSchema(definitionData, layer + 1);\r\n                    } else {\r\n                        console.error(`definition ${defKey} not exist`);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return schema;\r\n    }*/\r\n\r\n    getDefinitionData(defKey) {\r\n        return this.definitionMap[defKey];\r\n    }\r\n\r\n    getDefKey(ref) {\r\n        if (!/^\\#\\/definitions\\//.test(ref)) {\r\n            // definition識別失敗\r\n            console.error(`definition ref validate fail, unknown $ref ${ref}`);\r\n            return;\r\n        }\r\n\r\n        const defKey = ref.replace(/^\\#\\/definitions\\//, \"\");\r\n        return defKey;\r\n    }\r\n\r\n    // 跑指定的項目\r\n    buildParameters(parameters, callback, paramIn = 'body') { // , attributeCallback\r\n        const vm = this;\r\n        if (!parameters) {\r\n            return undefined;\r\n        }\r\n\r\n        if (!Array.isArray(parameters)) {\r\n            console.log(`apiData.parameters not is array`);\r\n            return;\r\n        }\r\n        return parameters.map((parameterItem) => {\r\n\r\n            if (parameterItem.in === paramIn) {\r\n                parameterItem = callback(parameterItem);\r\n            }\r\n            return parameterItem;\r\n        });\r\n    }\r\n\r\n    buildApiData(apiData) {\r\n        const vm = this;\r\n        /* apiData: {\r\n            parameters: [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"description\": \"Account id\",\r\n                    \"name\": \"id\",\r\n                    \"in\": \"path\",\r\n                    \"required\": true\r\n                },\r\n                {\r\n                    \"description\": \"payload\",\r\n                    \"name\": \"Body\",\r\n                    \"in\": \"body\",\r\n                    \"required\": true,\r\n                    \"schema\": {\r\n                        \"$ref\": \"#/definitions/service.AccountWrap\"\r\n                        // ==> 這個要將definition替代進去\r\n                    }\r\n                    ====> 替換後的schema物件\r\n                    \"schema\": {\r\n                        type: \"object\"\r\n                        attributes: [{..}], // 這個是自己額外增加的\r\n                    }\r\n                }\r\n            ],\r\n            responses: {\r\n                200: {\r\n                    description: \"OK(200回應的描述)\"\r\n                    schema: {\r\n                        allOf: [{\r\n                            $ref: \"#/definitions/app.Response\"\r\n                        }, {\r\n                            type: \"object\"\r\n                            data: {\r\n                                $ref: \"#/definitions/models.Account\"\r\n                            }\r\n                        }] // ==> 這個要將definition替代進去\r\n                    }\r\n                }\r\n                500: {\r\n                    description: \"Internal Server Error\"\r\n                    schema: {\r\n                        $ref: \"#/definitions/app.Response\"\r\n                        // ==> 這個要將definition替代進去\r\n                    }\r\n                }\r\n            }\r\n        } */\r\n\r\n        apiData = Object.assign({}, apiData);\r\n        // 處理parameter，將實際的parameters參數組建出來-------------------------------------\r\n\r\n        apiData.parameters = this.buildParameters(apiData.parameters, function (parameterItem) {\r\n            // 要判斷是否有$ref欄位\r\n            const apiSchema = new ApiSchema(parameterItem.schema, vm.definitionMap)\r\n            parameterItem.schema = apiSchema.getSchema();\r\n            return parameterItem;\r\n        }, 'body');\r\n\r\n        // 跑每個response\r\n        const responses = apiData.responses || {};\r\n        Object.keys(responses).forEach((code) => {\r\n            // code: '200'\r\n\r\n            const responseItem = apiData.responses[code];\r\n            responseItem.schema = new ApiSchema(responseItem.schema, vm.definitionMap).getSchema();\r\n\r\n            // 將所有response的schema更新\r\n            apiData.responses[code] = responseItem;\r\n        });\r\n\r\n        return apiData;\r\n    }\r\n\r\n    buildResponse(json) {\r\n\r\n    }\r\n}\r\n\r\nexport default class ApiConnectModel extends StateModel {\r\n    data(initObj = {}) {\r\n        return {\r\n            docJson: null,\r\n            tagList: [],\r\n            jumpTagList: [], // 右邊側邊欄用來生成連結用的\r\n            pageMode: initObj.pageMode || '',\r\n        }\r\n    }\r\n\r\n    pageUnitAuth(unitKey) { // 取得元件權限\r\n        const unitAuthMap = {\r\n            // <unitKey>: <pageMode>\r\n            addTagButton: 'edit', // 新增tag按鈕\r\n            removeTagButton: 'edit', // 移除tag按鈕\r\n            titleExtend: 'edit',\r\n        }\r\n\r\n        const unitAuth = unitAuthMap[unitKey];\r\n        if (!unitAuth) {\r\n            return false;\r\n        }\r\n\r\n        const pageMode = this.getState('pageMode');\r\n\r\n        return unitAuth === pageMode;\r\n    }\r\n\r\n    saveApiDoc(json, docType) {\r\n\r\n        if (docType === 'swagger2') {\r\n            this.setState('docJson', json);\r\n\r\n            // console.log('saveApiDoc json', json)\r\n\r\n            const tagList = this.buildTagBlockDataList(new ApiConnectComposition(json));\r\n\r\n            console.log('tagList', JSON.stringify(tagList));\r\n\r\n            this.setState('tagList', tagList);\r\n\r\n            this.buildJumpLinkList(tagList);\r\n        } else {\r\n            // console.error(`saveApiDoc: not support docType ${docType}`);\r\n\r\n            // 從這裡開始，前端對json的parse進行分支，分支出openapi3.0的版本\r\n            const apiBuildObj = new ApiBuild(json, docType);\r\n            const tagList = apiBuildObj.getTagList();\r\n\r\n            // console.log('tagList', JSON.stringify(tagList));\r\n\r\n            this.setState('tagList', tagList);\r\n            this.buildJumpLinkList(tagList);\r\n        }\r\n    }\r\n    buildJumpLinkList(tagList) {\r\n        tagList = tagList.map(val => val);\r\n\r\n        this.setState('jumpTagList', tagList);\r\n    }\r\n    buildTagBlockDataList(apiCompConnectData) {\r\n        if (!(apiCompConnectData instanceof ApiConnectComposition)) {\r\n            console.error(`buildTagBlockDataList: apiCompConnectData not ApiConnectComposition`);\r\n            return;\r\n        }\r\n\r\n        const json = apiCompConnectData.getJson();\r\n\r\n        const apiMap = this.buildApiMapFromJson(apiCompConnectData);\r\n\r\n        /* apiMap: {\r\n            <tag>: [ <apiInfo>, <apiInfo2>... ]\r\n        } \r\n        <apiInfo> : {\r\n            path: \"/accounts/{id}/sub-accounts\"\r\n            apiType: \"post\"\r\n            apiData: <apiData>\r\n        } */\r\n        const getApiList = function (tagName) {\r\n            return apiMap[tagName] || [];\r\n        }\r\n\r\n        const tags = json.tags || [];\r\n\r\n        return tags.map((tagData) => {\r\n            /* tagData: {\r\n                \"name\": \"accounts\",\r\n                \"description\": \"Crossbot account-entities\",\r\n                \"externalDocs\": {\r\n                    \"description\": \"Find out more about our store\",\r\n                    \"url\": \"http://swagger.io\"\r\n                },\r\n                \"groupName\": \"1.帳號\"\r\n            } */\r\n\r\n            tagData = Object.assign({}, tagData);\r\n            // 加入apiList，從path當中找出所有登記在此Tag的API\r\n            tagData.apiList = getApiList(tagData.name);\r\n            return tagData;\r\n        });\r\n    }\r\n    buildApiMapFromJson(apiCompConnectData) {\r\n        const apiMap = {};\r\n        if (!(apiCompConnectData instanceof ApiConnectComposition)) {\r\n            console.error(`buildApiMapFromJson: apiCompConnectData not ApiConnectComposition`);\r\n            return apiMap;\r\n        }\r\n        const json = apiCompConnectData.getJson();\r\n\r\n        const vm = this;\r\n        /* json: {\r\n            \"info\": {}\r\n            \"tags\": []\r\n            \"paths\": {\r\n                \"/accounts/{id}/sub-accounts\": {\r\n                    \"post\": <API資料>\r\n                }\r\n            }\r\n        }*/\r\n\r\n        if (!json.paths) {\r\n            console.error(`json.paths not exist`);\r\n            return apiMap;\r\n        }\r\n        /* apiMap: {\r\n            <tag>: [ <apiInfo>, <apiInfo2>... ]\r\n        } \r\n        <apiInfo> : {\r\n            path: \"/accounts/{id}/sub-accounts\"\r\n            apiType: \"post\"\r\n            apiData: <apiData>\r\n        } */\r\n        const registApiDataInTag = function (tag, path, apiType, apiData) {\r\n            if (!apiMap[tag]) {\r\n                apiMap[tag] = [];\r\n            }\r\n\r\n            apiMap[tag].push({\r\n                path,\r\n                apiType,\r\n                apiData: apiCompConnectData.buildApiData(apiData),\r\n            });\r\n        }\r\n\r\n        // each path\r\n        Object.keys(json.paths).forEach((path) => {\r\n            // each apiType(post)\r\n            Object.keys(json.paths[path]).forEach((apiType) => {\r\n                const apiData = json.paths[path][apiType];\r\n                if (!apiData.tags) {\r\n                    console.error(`api [${apiType}] ${path} not have tags`);\r\n                    return;\r\n                }\r\n                apiData.tags.forEach((tag) => {\r\n                    registApiDataInTag(tag, path, apiType, apiData);\r\n                });\r\n            });\r\n        });\r\n\r\n        return apiMap;\r\n    }\r\n}","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrMinus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M480,288H32c-17.673,0-32-14.327-32-32s14.327-32,32-32h448c17.673,0,32,14.327,32,32S497.673,288,480,288z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrMinus);\nexport default __webpack_public_path__ + \"static/media/br-minus.e075aa0f1c16ef8fc67f0455b9949a1e.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M480,224H288V32c0-17.673-14.327-32-32-32s-32,14.327-32,32v192H32c-17.673,0-32,14.327-32,32s14.327,32,32,32h192v192   c0,17.673,14.327,32,32,32s32-14.327,32-32V288h192c17.673,0,32-14.327,32-32S497.673,224,480,224z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrPlus);\nexport default __webpack_public_path__ + \"static/media/br-plus.4f0248a93bbc2dfb648c2fb334d15f1b.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStarSign(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Filled\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.327,12.4,4.887,15,3.535,19.187A3.178,3.178,0,0,0,4.719,22.8a3.177,3.177,0,0,0,3.8-.019L12,20.219l3.482,2.559a3.227,3.227,0,0,0,4.983-3.591L19.113,15l3.56-2.6a3.227,3.227,0,0,0-1.9-5.832H16.4L15.073,2.432a3.227,3.227,0,0,0-6.146,0L7.6,6.568H3.231a3.227,3.227,0,0,0-1.9,5.832Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStarSign);\nexport default __webpack_public_path__ + \"static/media/star-sign.c65c00f718e1dd9b105a05a078d0bfcc.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24,8.154v9c0,3.032-2.468,5.5-5.5,5.5-1.971-.034-1.972-2.966,0-3,1.379,0,2.5-1.121,2.5-2.5V8.154c0-.171-.018-.339-.051-.5H3v9.5c0,1.379,1.122,2.5,2.5,2.5,1.971,.033,1.972,2.967,0,3C2.468,22.654,0,20.186,0,17.154V6.154C0,3.122,2.468,.654,5.5,.654h2.528c.541,0,1.082,.128,1.565,.369l3.156,1.577c.071,.036,.146,.054,.224,.054h5.527c3.032,0,5.5,2.468,5.5,5.5Zm-8.836,9.5h-1.664v-5.501c-.034-1.972-2.967-1.971-3,0v5.501h-1.663c-.891,0-1.337,1.077-.707,1.707l3.163,3.163c.391,.391,1.024,.391,1.414,0l3.163-3.163c.63-.63,.184-1.707-.707-1.707Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderDownload);\nexport default __webpack_public_path__ + \"static/media/folder-download.f187b744b90db67b85c92edb9b4d3e02.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFolderUpload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.899,7H0v-1C0,3.243,2.243,1,5,1h2.528c.463,0,.927,.109,1.341,.316l3.156,1.578c.138,.069,.293,.105,.447,.105h6.528c2.414,0,4.434,1.721,4.899,4Zm.101,2v9c0,2.757-2.243,5-5,5H5c-2.757,0-5-2.243-5-5V9H24Zm-8.293,4.48l-1.613-1.613c-1.154-1.154-3.033-1.154-4.187,0l-1.614,1.613c-.921,.929,.486,2.335,1.414,1.414l1.293-1.293v6.398c.006,1.308,1.995,1.307,2,0v-6.398l1.293,1.293c.929,.921,2.335-.486,1.414-1.414Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolderUpload);\nexport default __webpack_public_path__ + \"static/media/folder-upload.9aeaa0c6c0de490b4ebd780b66ab1806.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrBrowser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    height: 512,\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5 11.5a1.5 1.5 0 0 1 1.5-1.5h11a1.5 1.5 0 0 1 0 3h-11a1.5 1.5 0 0 1 -1.5-1.5zm1.5 6.5h7a1.5 1.5 0 0 0 0-3h-7a1.5 1.5 0 0 0 0 3zm17.5-11.5v11a5.506 5.506 0 0 1 -5.5 5.5h-13a5.506 5.506 0 0 1 -5.5-5.5v-11a5.506 5.506 0 0 1 5.5-5.5h13a5.506 5.506 0 0 1 5.5 5.5zm-16-2a1.5 1.5 0 1 0 1.5-1.5 1.5 1.5 0 0 0 -1.5 1.5zm-5 0a1.5 1.5 0 1 0 1.5-1.5 1.5 1.5 0 0 0 -1.5 1.5zm18 3.5h-18v9.5a2.5 2.5 0 0 0 2.5 2.5h13a2.5 2.5 0 0 0 2.5-2.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrBrowser);\nexport default __webpack_public_path__ + \"static/media/br-browser.77311093a6d748224b24a7b40319a2b3.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSrSquareRoot(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    height: 512,\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m16.04 4a3.009 3.009 0 0 0 -2.891 2.2l-4.049 14.568a1.678 1.678 0 0 1 -1.6 1.232 1.747 1.747 0 0 1 -1.622-1.159l-2.793-7.68a3.461 3.461 0 0 0 -2.312-2.189 1 1 0 0 1 .471-1.944 5.434 5.434 0 0 1 3.721 3.45l2.474 6.8 3.784-13.616a5.015 5.015 0 0 1 4.817-3.662h6.96a1 1 0 0 1 0 2zm7.56 8.2a1 1 0 0 0 -1.4.2l-2.2 2.933-2.2-2.933a1 1 0 0 0 -1.6 1.2l2.55 3.4-2.55 3.4a1 1 0 1 0 1.6 1.2l2.2-2.933 2.2 2.933a1 1 0 1 0 1.6-1.2l-2.55-3.4 2.55-3.4a1 1 0 0 0 -.2-1.4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSrSquareRoot);\nexport default __webpack_public_path__ + \"static/media/sr-square-root.82005ef534b6bcfa00dd225aa649f5f1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBookBookmark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,0H7C4.243,0,2,2.243,2,5v15c0,2.206,1.794,4,4,4h11c2.757,0,5-2.243,5-5V5c0-2.757-2.243-5-5-5Zm3,5v11H8V2h4V10.347c0,.623,.791,.89,1.169,.395l1.331-1.743,1.331,1.743c.378,.495,1.169,.228,1.169-.395V2c1.654,0,3,1.346,3,3ZM6,2.184v13.816c-.732,0-1.409,.212-2,.556V5c0-1.302,.839-2.402,2-2.816Zm11,19.816H6c-2.629-.047-2.627-3.954,0-4h14v1c0,1.654-1.346,3-3,3Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBookBookmark);\nexport default __webpack_public_path__ + \"static/media/book-bookmark.51d9304233249ebd75c17e4aed4f6b2f.svg\";\nexport { ForwardRef as ReactComponent };","import StateModel from \"model/StateModel\";\n// const { format: formatJSON } = require('json-string-formatter');\nimport { format as formatJSON } from \"json-string-formatter\";\n\nexport default class ApiJsonModel extends StateModel {\n    data() {\n        return {\n            json: '',\n            searchKeywordFunc: null,\n        };\n    }\n    saveJsonDoc(jsonObj) {\n        const jsonStr = JSON.stringify(jsonObj);\n        this.setState('json', formatJSON(jsonStr));\n    }\n}","export default class ParameterTypeEnum {\n    static query = 'query';\n    static header = 'header';\n    static path = 'path';\n    static body = 'body';\n\n    static getOptionList(mode) {\n        const convertToOptionList = function (enumList) {\n            return enumList.map(val => ({ label: val, value: val }));\n        }\n\n        if (mode === 'urlQuery') {\n            return convertToOptionList([ParameterTypeEnum.query, ParameterTypeEnum.path]);\n        }\n        return [];\n    }\n}","export default class SwaggerPropertyTypeEnum {\n    static string = 'string';\n    static integer = 'integer';\n    static getOptionList(mode) {\n        const convertToOptionList = function (enumList) {\n            return enumList.map(val => ({ label: val, value: val }));\n        }\n\n        if (mode === 'urlQuery') {\n            return convertToOptionList([SwaggerPropertyTypeEnum.string]); // , SwaggerPropertyTypeEnum.integer\n        }\n        return [];\n    }\n}","import ParameterTypeEnum from \"enum/apiConnect/ParameterType\";\nimport SwaggerPropertyTypeEnum from \"enum/apiConnect/SwaggerPropertyType\";\nimport StateModel from \"model/StateModel\";\n\nexport default class ApiManageModel extends StateModel {\n    data(initObj = {}) {\n        return {\n            viewMode: 'board',\n            // ModalRef----------------------------------------\n            addTagModalRef: null,\n            addApiModalRef: null,\n            addBodyModalRef: null,\n            editTagModalRef: null,\n            addResModalRef: null,\n            editAttrModalRef: null,\n            addApiDocModalRef: null,\n            addQueryModalRef: null,\n            addSecurityRef: null,\n            apiSettingModalRef: null,\n            addExampleModalRef: null,\n            addAttrModalRef: null,\n            removeAttrModalRef: null,\n            // json config-----------------------------------------\n            fileName: '',\n            jsonPath: '', // 'http://localhost:5050/apiDoc/api-creator.json'\n            docType: '', // 'swagger2', 'openapi3'\n        }\n    }\n    bindModalRef(srcKey, ref) {\n        // srcKey: 'addTagModal'\n        const vm = this;\n\n        // console.log('bindModalRef', ref)\n\n        if (srcKey === 'addTagModal') {\n            vm.setState('addTagModalRef', ref);\n        }\n    }\n}\n\nexport class AddTagModel extends StateModel {\n    data(initObj = {}) {\n        return {\n            // AddTagModal----------------------------------------\n            name: '',\n            description: '',\n            // groupName: '',\n        }\n    }\n}\n\nexport class AddApiModel extends StateModel {\n    data(initObj = {}) {\n        return {\n            summary: '', // API名稱\n            apiRoute: '', // API路徑\n            tags: [], // 標籤\n            apiType: '', // request類別\n            // \"apiRoute\": \"/api/friend\",\n            // \"apiType\": \"get\",\n            // \"tags\": [\"friend\"],\n            // \"summary\": \"1-1.list friend\"\n            apiTypeOptionList: [{\n                label: 'POST',\n                value: 'post',\n            }, {\n                label: 'GET',\n                value: 'get',\n            }, {\n                label: 'PUT',\n                value: 'put',\n            }, {\n                label: 'DELETE',\n                value: 'delete',\n            }, {\n                label: 'PATCH',\n                value: 'patch',\n            }],\n        }\n    }\n}\n\n\nexport class AddBodyModel extends StateModel {\n    data(initObj = {}) {\n        return {\n            apiRoute: '',\n            apiType: '',\n            rootType: '',\n            schema: '',\n            // aside--------------------------\n            gqlJsonSrc: '',\n        }\n    }\n    // filter() {\n    //     return {\n    //         schema: function (val) {\n    //             // console.log('schema filter', val);\n    //             // return val + 'C';\n\n    //             if (/[(\\r\\n|\\r|\\n)]{2}/g.test(val)) {\n    //                 val = val.replace(/[(\\r\\n|\\r|\\n)]{2}/g, \"\\r\\n   \\r\\n\");\n    //                 console.log('rep', val);\n    //             }\n\n    //             return val;\n    //         }\n    //     }\n    // }\n}\n\nexport class EditTagModel extends StateModel {\n    data(initObj = {}) {\n        return {\n            tagName: '',\n            summary: '',\n        };\n    }\n}\n\n\nexport class AddResModel extends StateModel {\n    data(initObj = {}) {\n\n        // \"fileName\": \"qore-plus-api\",\n        // \"apiRoute\": \"/api/friend\",\n        // \"apiType\": \"post\",\n        // \"rootType\": \"SYSTEM_FRIEND\",\n        // \"schema\": null,\n        // \"resType\": \"200\",\n        // \"description\": null\n\n        return {\n            apiRoute: '',\n            apiType: '',\n            rootType: '',\n            schema: '',\n            resType: '200',\n            description: '',\n            // -------------------------\n            resTypeOptionList: [{\n                label: '200',\n                value: '200',\n            }, {\n                label: '500',\n                value: '500'\n            }],\n            // aside--------------------------\n            gqlJsonSrc: '',\n        };\n    }\n}\n\nexport class EditAttrModel extends StateModel {\n    data() {\n        return {\n            // 判別參數類型\n            paramType: '',\n            // 查詢參數\n            apiType: '',\n            apiRoute: '',\n            tags: [],\n            attrName: '',\n            layerPath: [],\n            attrSrc: '',\n            // 可修改的項目\n            newAttrName: '',\n            defaultValue: '',\n            valueType: '',\n            valueTypeOptionList: [{\n                value: 'string',\n                label: 'String',\n            }, {\n                value: 'integer',\n                label: 'Int',\n            }, {\n                value: 'boolean',\n                label: 'Boolean',\n            }],\n            description: '',\n            required: 'true',\n            requiredOptionList: [{\n                label: 'true',\n                value: 'true'\n            }, {\n                label: 'false',\n                value: 'false'\n            }],\n            // 原始參數\n            originAttrName: '',\n            originDefaultValue: '',\n            originValueType: '',\n            originDescription: '',\n            originRequired: '',\n        }\n    }\n}\n\nexport class AddApiDocModel extends StateModel {\n    data() {\n        return {\n            fileName: '',\n            title: '',\n            host: '',\n            docType: 'openapi3',\n            docTypeOptionList: [{\n                label: 'OpenAPI 3.0',\n                value: 'openapi3'\n            }, {\n                label: 'Swagger 2.0',\n                value: 'swagger2'\n            }]\n        }\n    }\n}\n\nexport class AddQueryModel extends StateModel {\n    data() {\n        return {\n            apiRoute: '',\n            apiType: '',\n            //swagger-------------------------------\n            type: SwaggerPropertyTypeEnum.string,\n            name: '',\n            in: ParameterTypeEnum.query,\n            default: '',\n            description: '',\n            enum: '',\n        }\n    }\n}\n\n\n\nexport class AddSecurityModel extends StateModel {\n    data() {\n        return {\n            securityKey: '', // scheme field name\n            key: '', // data key\n            type: 'apiKey', // 'apiKey'    other: 'http'\n            in: 'header', // 'header'\n            description: '',\n            securityTypeOptionList: [{\n                label: 'apiKey',\n                value: 'apiKey',\n            }],\n            securityInOptionList: [{\n                label: 'header',\n                value: 'header',\n            }],\n        }\n    }\n}\n\n\nexport class ApiSettingModel extends StateModel {\n    data() {\n        return {\n            apiRoute: '',\n            apiType: '',\n            summary: '', // API名稱\n            securityKey: '', // scheme field name\n            securityKeyOptionList: [{\n                label: 'Token',\n                value: 'Token',\n            }],\n            apiRouteVar: '',\n            apiTypeVar: '',\n        }\n    }\n    setSecurityKey(securityList) {\n        // this.setState('securityKeyOptionList', json);\n        /* securityList: [{\n            // <securityKey>: []\n            Token: []\n        }] */\n        if (!securityList) {\n            this.setState('securityKey', '');\n            return;\n        }\n\n        if (securityList.length !== 1) {\n            this.setState('securityKey', '');\n            return;\n        }\n\n        const obj = securityList[0];\n\n        const keyList = Object.keys(obj);\n        if (keyList.length !== 1) {\n            this.setState('securityKey', '');\n            return;\n        }\n        const securityKey = keyList[0];\n\n        // console.log('securityKey', securityKey);\n\n        this.setState('securityKey', securityKey);\n    }\n\n    setSecurityOptionList(securityList) {\n        console.log('setSecurityOptionList', securityList);\n        /* securityList: [{\n            \"type\": \"apiKey\",\n            \"name\": \"authorization\",\n            \"in\": \"header\",\n            \"description\": \"login取得的token\"\n        }] */\n\n        const securityKeyOptionList = securityList.map((obj) => {\n            return {\n                label: obj.securityKey,\n                value: obj.securityKey,\n            }\n        });\n\n        this.setState('securityKeyOptionList', securityKeyOptionList);\n    }\n}\n\n\n\nexport class AddExampleModel extends StateModel {\n    data() {\n        return {\n            mode: '',\n            apiRoute: '',\n            apiType: '',\n            name: '',\n            schema: '',\n            // --------------\n            exampleShowKey: '',\n            exampleOptionList: [],\n            exampleMap: {},\n            exampleSchemaJson: '',\n        }\n    }\n    getExample(exampleKey) {\n        const exampleMap = this.getState('exampleMap');\n\n        return exampleMap[exampleKey];\n    }\n    // sight() { // 用來設定watch可存取的範圍\n    //     return {\n    //         exampleShowKey: {\n    //             // removeBtnDisabled: true,\n    //         }\n    //     }\n    // }\n    // watch() {\n    //     return {\n    //         exampleShowKey: function (exampleKey) {\n    //             console.log('exampleKey', exampleKey)\n    //         }\n    //     }\n    // }\n}\n\nexport class AddAttrModel extends StateModel {\n    data() {\n        return {\n            // 查詢參數\n            apiType: '',\n            apiRoute: '',\n            layerPath: [], // [ \"data\", \"list\" ]\n            name: '', // \"auth\"\n            attrSrc: '',\n\n            // 數值參數\n            add_name: '',\n            add_defaultValue: '',\n            add_valueType: 'string',\n            add_description: '',\n            add_required: 'false',\n\n            addPositionDescription: '',\n            valueTypeOptionList: [{\n                value: 'string',\n                label: 'String',\n            }, {\n                value: 'integer',\n                label: 'Int',\n            }, {\n                value: 'boolean',\n                label: 'Boolean',\n            }, {\n                value: 'object',\n                label: 'Object',\n            }],\n            requiredOptionList: [{\n                label: 'true',\n                value: 'true'\n            }, {\n                label: 'false',\n                value: 'false'\n            }],\n        };\n    }\n}\n\nexport class RemoveAttrModel extends StateModel {\n    data() {\n        return {\n            // // 判別參數類型\n            // paramType: '',\n            // // 查詢參數\n            // apiType: '',\n            // apiRoute: '',\n            // tags: [],\n        };\n    }\n}","import ApiSender, { ApiError } from \"apiSender\";\nimport Control from \"control/Control\";\nimport ApiConnectModel from \"fragment/ApiConnect\";\nimport ApiJsonModel from \"fragment/ApiJson\";\nimport ApiManageModel, { AddApiDocModel, AddApiModel, AddAttrModel, AddBodyModel, AddExampleModel, AddQueryModel, AddResModel, AddSecurityModel, AddTagModel, ApiSettingModel, EditAttrModel, EditTagModel, RemoveAttrModel } from \"fragment/ApiManage\";\nimport FileSaver from 'file-saver';\nimport uniqid from 'uniqid';\nimport { format as formatJSON } from \"json-string-formatter\";\n\nexport class ApiManageControl extends Control {\n    circuit() {\n        return {\n            confirm: true,\n            tip: true,\n            notify: true,\n        }\n    }\n\n    frame() {\n        return {\n            apiDoc: ApiConnectModel.name,\n            apiManage: ApiManageModel.name,\n            addTag: AddTagModel.name,\n            addApi: AddApiModel.name,\n            editTag: EditTagModel.name,\n            addBody: AddBodyModel.name,\n            addRes: AddResModel.name,\n            editAttr: EditAttrModel.name,\n            addApiDoc: AddApiDocModel.name,\n            apiJson: ApiJsonModel.name,\n            addQuery: AddQueryModel.name,\n            addSecu: AddSecurityModel.name,\n            apiSetting: ApiSettingModel.name,\n            addExample: AddExampleModel.name,\n            addAttr: AddAttrModel.name,\n            removeAttr: RemoveAttrModel.name,\n        }\n    }\n\n    fetchJson() {\n        const vm = this;\n\n        const jsonPath = this.fetchModel('apiManage').getState('jsonPath');\n        // console.log('jsonPath', jsonPath);\n        return fetch(jsonPath)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(\"HTTP error \" + response.status);\n                }\n                return response.json();\n            })\n            .then(json => {\n\n                const docType = vm.fetchModel('apiManage').getState('docType');\n\n                vm.fetchModel('apiJson').saveJsonDoc(json); // ps.順序要在前面，否則因為saveApiDoc的程序，會把attributes等欄位塞進去，導致多出不必要的欄位\n                vm.fetchModel('apiDoc').saveApiDoc(json, docType);\n            })\n            .catch(new ApiError(function (error, next) {\n                console.error(error);\n                next(`apiDoc json fetch fail`);\n            }).catchErrorMsg());\n    }\n\n    onClickAddTag() {\n        console.log('onClickAddTag');\n\n        // const tagList = this.fetchModel('apiDoc').getState('tagList');\n        // tagList.push({\n\n        // });\n\n        const addTagModalRef = this.fetchModel('apiManage').getState('addTagModalRef');\n        // console.log('addTagModalRef', addTagModalRef)\n        if (addTagModalRef) {\n            addTagModalRef.openModal();\n        }\n    }\n\n\n    onCancelAddTag() {\n        const addTagModalRef = this.fetchModel('apiManage').getState('addTagModalRef');\n        // console.log('addTagModalRef', addTagModalRef)\n        if (addTagModalRef) {\n            addTagModalRef.closeModal();\n        }\n    }\n\n    async onConfirmAddTag() {\n        const vm = this;\n        const addTagModel = this.fetchModel('addTag');\n\n        const apiParam = {\n            name: addTagModel.getState('name'),\n            description: addTagModel.getState('description'),\n            // groupName: addTagModel.getState('groupName'),\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n        };\n\n        await ApiSender.sendApi(`[post]/tag/add`, apiParam).catch(new ApiError().catchAlertMsg())\n\n        const addTagModalRef = this.fetchModel('apiManage').getState('addTagModalRef');\n\n        if (addTagModalRef) {\n            addTagModalRef.closeModal();\n        }\n\n        vm.fetchJson();\n    }\n\n    onClickRemoveTag(tagName) {\n        console.log('onClickRemoveTag', tagName);\n        const vm = this;\n\n        const apiParam = {\n            fileName: vm.fetchModel('apiManage').getState('fileName'),\n            name: tagName,\n        };\n\n        this.fetchControl('confirm').confirm(`是否刪除 ${tagName} 標籤？`).then((action) => {\n\n            if (action === 'confirm') {\n                ApiSender.sendApi('[post]/tag/remove', apiParam).then(() => {\n                    return vm.fetchControl('tip').tip('刪除成功');\n                }).then(() => {\n                    vm.fetchJson();\n                }).catch(new ApiError().catchAlertMsg());\n            }\n        });\n    }\n\n    onClickTagEdit(tagData) {\n        console.log(`onClickTagEdit`, tagData);\n        /* tagData: {\n            apiList: [{…}, {…}, {…}, {…}]\n            description: \"friend description\"\n            groupName: \"friend groupName\"\n            name: \"friend\"\n        } */\n\n        this.fetchModel('editTag').setState('tagName', tagData.name);\n        this.fetchModel('editTag').setState('summary', tagData.description);\n\n        const editTagModalRef = this.fetchModel('apiManage').getState('editTagModalRef');\n        if (editTagModalRef) {\n            editTagModalRef.openModal();\n        }\n    }\n    onCancelEditTag() {\n        const editTagModalRef = this.fetchModel('apiManage').getState('editTagModalRef');\n        if (editTagModalRef) {\n            editTagModalRef.closeModal();\n        }\n    }\n    onConfirmEditTag() {\n        const vm = this;\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            tagName: this.fetchModel('editTag').getState('tagName'),\n            // edit---------------------------------------\n            summary: this.fetchModel('editTag').getState('summary'),\n        }\n\n        ApiSender.sendApi('[post]/tag/edit', apiParam).then(() => {\n\n            const editTagModalRef = vm.fetchModel('apiManage').getState('editTagModalRef');\n            if (editTagModalRef) {\n                editTagModalRef.closeModal();\n            }\n\n            vm.fetchJson();\n        }).catch(new ApiError().catchAlertMsg());\n    }\n\n    onEditTagName() {\n        const vm = this;\n\n    }\n\n\n    onClickAddApi(tagData) {\n        // console.log('onClickAddApi', JSON.stringify(tagData))\n        /* tagData: {\n            \"name\": \"friend\",\n            \"description\": \"friend description\",\n            \"groupName\": \"friend groupName\",\n            \"apiList\": [ .. ]\n        } */\n\n        // console.log('onClickAddApi tag', [tagData.name])\n        this.fetchModel('addApi').setState('tags', [tagData.name])\n\n        const addApiModalRef = this.fetchModel('apiManage').getState('addApiModalRef');\n        if (addApiModalRef) {\n            addApiModalRef.openModal();\n        }\n    }\n\n    onCancelAddApi() {\n        const addApiModalRef = this.fetchModel('apiManage').getState('addApiModalRef');\n\n        if (addApiModalRef) {\n            addApiModalRef.closeModal();\n        }\n    }\n\n    async onConfirmAddApi() {\n        const vm = this;\n        const addApiModel = this.fetchModel('addApi');\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            summary: addApiModel.getState('summary'),\n            apiRoute: addApiModel.getState('apiRoute'),\n            apiType: addApiModel.getState('apiType'),\n            tags: addApiModel.getState('tags'),\n        };\n\n        // console.log('apiParam', apiParam)\n\n        await ApiSender.sendApi(`[post]/api/addApi`, apiParam).catch(new ApiError().catchAlertMsg())\n\n        const addApiModalRef = this.fetchModel('apiManage').getState('addApiModalRef');\n\n        if (addApiModalRef) {\n            addApiModalRef.closeModal();\n        }\n\n        vm.fetchJson();\n    }\n\n    /* 暫不使用: 因無法逆向把body轉成gql格式\n    getBody(apiData) {\n        console.log('parameters', apiData.apiData.parameters);\n\n        let bodyObj = '';\n        if (apiData.apiData.parameters) {\n            const bodyPayload = apiData.apiData.parameters.find(paramObj => (paramObj.in === 'body'));\n\n            if (bodyPayload) {\n                console.log('bodyPayload', JSON.stringify(bodyPayload));\n\n                bodyObj = bodyPayload.schema;\n                //  {\n                //     \"description\": \"Payload\",\n                //     \"name\": \"Body\",\n                //     \"in\": \"body\",\n                //     \"required\": true,\n                //     \"schema\": {\n                //         \"type\": \"object\",\n                //         \"properties\": {\n                //         \"id\": {\n                //             \"type\": \"integer\",\n                //             \"description\": \"\"\n                //         },\n                //         \"enabled\": {\n                //             \"type\": \"boolean\",\n                //             \"description\": \"\",\n                //             \"default\": true\n                //         },\n                //         \"name\": {\n                //             \"type\": \"string\",\n                //             \"description\": \"\"\n                //         },\n                //         \"email\": {\n                //             \"type\": \"string\",\n                //             \"description\": \"\"\n                //         },\n                //         \"like\": {\n                //             \"type\": \"float\",\n                //             \"description\": \"\",\n                //             \"default\": 1.5\n                //         }\n                //         },\n                //         \"required\": [\n                //             \"id\",\n                //             \"enabled\"\n                //         ],\n                //         \"attributes\": [\n                //             {\n                //                 \"type\": \"integer\",\n                //                 \"description\": \"\",\n                //                 \"name\": \"id\",\n                //                 \"required\": false\n                //             },\n                //             {\n                //                 \"type\": \"boolean\",\n                //                 \"description\": \"\",\n                //                 \"default\": true,\n                //                 \"name\": \"enabled\",\n                //                 \"required\": false\n                //             },\n                //             {\n                //                 \"type\": \"string\",\n                //                 \"description\": \"\",\n                //                 \"name\": \"name\",\n                //                 \"required\": false\n                //             },\n                //             {\n                //                 \"type\": \"string\",\n                //                 \"description\": \"\",\n                //                 \"name\": \"email\",\n                //                 \"required\": false\n                //             },\n                //             {\n                //                 \"type\": \"float\",\n                //                 \"description\": \"\",\n                //                 \"default\": 1.5,\n                //                 \"name\": \"like\",\n                //                 \"required\": false\n                //             }\n                //         ]\n                //     }\n            }\n        }\n\n        return bodyObj;\n    } */\n\n\n    async onClickApiSetting(apiData) {\n\n        // const vm = this;\n        const apiSettingModel = this.fetchModel('apiSetting');\n\n        console.log('onClickApiSetting', apiData)\n\n        // 載入apiRoute, apiType-------------------------------------\n\n        apiSettingModel.setState('apiRoute', apiData.path); // const參數\n        apiSettingModel.setState('apiType', apiData.apiType); // const參數\n        apiSettingModel.setState('summary', apiData.apiData.summary);\n\n        apiSettingModel.setState('apiRouteVar', apiData.path); // variable參數\n        apiSettingModel.setState('apiTypeVar', apiData.apiType); // variable參數\n\n        // 載入securityKey-------------------------------------\n\n        // 畫蛇添足了，不需要用API抓，之後刪\n        // const apiParam = {\n        //     fileName: this.fetchModel('apiManage').getState('fileName'),\n        //     apiRoute: apiData.path,\n        //     apiType: apiData.apiType,\n        // };\n        // const apiRes = await ApiSender.sendApi('[post]/api/loadApiSetting', apiParam).catch(new ApiError().catchAlertMsg());\n        // apiSettingModel.setSecurityKey(apiRes.data.security);\n\n        apiSettingModel.setSecurityKey(apiData.apiData.security);\n\n        // 載入securityOptionList-------------------------------------\n\n        const apiParamLoadSecurity = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n        };\n\n        const apiResLoadSecurity = await ApiSender.sendApi('[post]/doc/loadSecurity', apiParamLoadSecurity).catch(new ApiError().catchAlertMsg());\n\n        apiSettingModel.setSecurityOptionList(apiResLoadSecurity.data.security);\n\n        const apiSettingModalRef = this.fetchModel('apiManage').getState('apiSettingModalRef');\n\n        if (apiSettingModalRef) {\n            apiSettingModalRef.openModal();\n        }\n    }\n    async onCancelApiSetting() {\n        const apiSettingModalRef = this.fetchModel('apiManage').getState('apiSettingModalRef');\n\n        if (apiSettingModalRef) {\n            apiSettingModalRef.closeModal();\n        }\n    }\n    async onSaveApiSetting(apiData) {\n        console.log('apiData', apiData);\n\n        const vm = this;\n        const apiSettingModel = this.fetchModel('apiSetting');\n\n        const apiRoute = apiSettingModel.getState('apiRoute');\n        const apiType = apiSettingModel.getState('apiType');\n\n        let apiRouteVar = apiSettingModel.getState('apiRouteVar');\n        let apiTypeVar = apiSettingModel.getState('apiTypeVar');\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            // apiRoute: addBodyModel.getState('apiRoute'),\n            // apiType: addBodyModel.getState('apiType'),\n            // rootType: addBodyModel.getState('rootType').trim(), // 避免兩旁出現空白字元\n            // schema: addBodyModel.getState('schema'),\n            apiRoute: apiRoute,\n            apiType: apiType,\n            summary: apiSettingModel.getState('summary'),\n            securityKey: apiSettingModel.getState('securityKey'),\n\n            // 若參數沒異動，則傳null\n            apiRouteVar: apiRouteVar !== apiRoute ? apiRouteVar : null,\n            apiTypeVar: apiTypeVar !== apiType ? apiTypeVar : null,\n        };\n\n        console.log('onSaveApiSetting apiParam', apiParam)\n\n        await ApiSender.sendApi(`[post]/api/setApiSetting`, apiParam).catch(new ApiError().catchAlertMsg());\n\n        const apiSettingModalRef = this.fetchModel('apiManage').getState('apiSettingModalRef');\n\n        if (apiSettingModalRef) {\n            apiSettingModalRef.closeModal();\n        }\n\n        vm.fetchJson();\n    }\n\n    onClickAddBody(apiData) {\n        // console.log('onClickAddBody apiData', JSON.stringify(apiData))\n        /* apiData: {\n            \"path\": \"/api/friend\",\n            \"apiType\": \"put\",\n            \"apiData\": {\n                \"produces\": [\n                \"application/json\"\n                ],\n                \"tags\": [\n                \"friend\"\n                ],\n                \"summary\": \"1-2.Edit Friend\",\n                \"parameters\": [\n\n                ],\n                \"responses\": {\n\n                }\n            }\n        } */\n\n\n        this.fetchModel('addBody').setState('apiRoute', apiData.path);\n        this.fetchModel('addBody').setState('apiType', apiData.apiType);\n\n        const addBodyModalRef = this.fetchModel('apiManage').getState('addBodyModalRef');\n        if (addBodyModalRef) {\n            addBodyModalRef.openModal();\n        }\n    }\n\n    onCancelAddBody() {\n        const addBodyModalRef = this.fetchModel('apiManage').getState('addBodyModalRef');\n\n        if (addBodyModalRef) {\n            addBodyModalRef.closeModal();\n        }\n    }\n\n    async onConfirmAddBody() {\n        const vm = this;\n        const addBodyModel = this.fetchModel('addBody');\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiRoute: addBodyModel.getState('apiRoute'),\n            apiType: addBodyModel.getState('apiType'),\n            rootType: addBodyModel.getState('rootType').trim(), // 避免兩旁出現空白字元\n            schema: addBodyModel.getState('schema'),\n        };\n\n        // console.log('onConfirmAddBody apiParam', apiParam)\n\n        await ApiSender.sendApi(`[post]/api/addReqBody`, apiParam).catch(new ApiError().catchAlertMsg())\n\n        const addBodyModalRef = this.fetchModel('apiManage').getState('addBodyModalRef');\n\n        if (addBodyModalRef) {\n            addBodyModalRef.closeModal();\n        }\n\n        vm.fetchJson();\n    }\n\n    onGqlJsonSrcUpdate(json, bodyType) {\n        // bodyType=\"requestBody\" , \"responseBody\"\n        console.log('onGqlJsonSrcUpdate', bodyType)\n\n        let jsonObj;\n        try {\n            jsonObj = JSON.parse(json);\n        } catch (e) {\n            // 代表json parse失敗\n            console.error(e);\n            return;\n        }\n\n        // const addBodyModel = this.fetchModel('addBody');\n\n        const convertGql = function (jsonObj) {\n\n            const qid = uniqid().toUpperCase();\n\n            let json = `input TYPE_${qid} {\\n`;\n            Object.keys(jsonObj).forEach((key) => {\n                const val = jsonObj[key];\n\n                // const typeMap = {\n                //     // <js type>: <gql type>\n                //     'string': 'String',\n                //     'Int'\n                //     ''\n                // };\n\n                // 只有 requestBody 預設是必填\n                const requiredSign = bodyType === 'requestBody' ? '!' : '';\n\n                let valType = typeof val;\n                let fieldType;\n                if (valType === 'string') {\n                    fieldType = 'String';\n                } else if (valType === 'number' && Number.isInteger(val)) {\n                    fieldType = 'Int';\n                } else if (valType === 'boolean') {\n                    fieldType = 'Boolean';\n                } else {\n                    fieldType = 'Unknown';\n                }\n\n                // const defaultValueDef = `\"user\"`\n                let defaultValueDef = '';\n                if (fieldType === 'String') {\n                    defaultValueDef = ` = \\\"${val}\\\"`;\n                } else if (fieldType === 'Int') {\n                    defaultValueDef = ` = ${val}`;\n                } else if (fieldType === 'Boolean') {\n                    defaultValueDef = ` = ${val}`;\n                } else if (fieldType === 'Unknown') {\n                }\n\n                json += `   ${key}: ${fieldType}${requiredSign}${defaultValueDef}\\n`;\n            });\n            json += '}';\n            return json;\n        };\n\n        // 不儲存，直接回傳數值\n        return convertGql(jsonObj);\n        // addBodyModel.setState('schema', convertGql(jsonObj) + addBodyModel.getState('schema'));\n    }\n\n\n    onAddGqlToAddBody(gqlStr) {\n        // console.log('onAddGqlToAddBody', gqlStr);\n\n        const addBodyModel = this.fetchModel('addBody');\n        addBodyModel.setState('schema', gqlStr + addBodyModel.getState('schema'));\n    }\n\n    onAddGqlToAddRes(gqlStr) {\n        const model = this.fetchModel('addRes');\n        model.setState('schema', gqlStr + model.getState('schema'));\n    }\n\n    onClickAddQueryParam(apiData) {\n        // console.log('onClickAddQueryParam', apiData)\n\n        this.fetchModel('addQuery').setState('apiRoute', apiData.path);\n        this.fetchModel('addQuery').setState('apiType', apiData.apiType);\n\n        const addQueryModalRef = this.fetchModel('apiManage').getState('addQueryModalRef');\n        if (addQueryModalRef) {\n            addQueryModalRef.openModal();\n        }\n    }\n\n    onCancelAddQuery() {\n        const addQueryModalRef = this.fetchModel('apiManage').getState('addQueryModalRef');\n\n        if (addQueryModalRef) {\n            addQueryModalRef.closeModal();\n        }\n    }\n\n    async onConfirmAddQuery() {\n        console.log('onConfirmAddQuery');\n\n        const addQueryModel = this.fetchModel('addQuery');\n\n        let isErr = false;\n\n        // const enumStr = addQueryModel.getState('enum');\n        // let enumVal;\n        // if (enumStr) {\n        //     try {\n        //         enumVal = JSON.parse(enumStr);\n        //     } catch (e) {\n        //         console.error('onConfirmAddQuery: enum is not json');\n        //         console.error(e);\n        //         isErr = true;\n        //     }\n        // }\n        // if (isErr) return;\n\n        const paramIn = addQueryModel.getState('in');\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiRoute: addQueryModel.getState('apiRoute'),\n            apiType: addQueryModel.getState('apiType'),\n            type: addQueryModel.getState('type'),\n            name: addQueryModel.getState('name'),\n            in: addQueryModel.getState('in'),\n            default: addQueryModel.getState('default'),\n            description: addQueryModel.getState('description'),\n            enum: addQueryModel.getState('enum'),\n            // enum: enumVal,\n        };\n\n        console.log('onConfirmAddQuery paramIn', paramIn)\n\n\n        if (paramIn === 'query') {\n            await ApiSender.sendApi('[post]/attribute/add/query', apiParam).catch(new ApiError(function (err, next) {\n                isErr = true;\n                next(err);\n            }).catchAlertMsg());\n            if (isErr) return;\n        } else if (paramIn === 'path') {\n            await ApiSender.sendApi('[post]/attribute/add/path', apiParam).catch(new ApiError(function (err, next) {\n                isErr = true;\n                next(err);\n            }).catchAlertMsg());\n            if (isErr) return;\n        } else {\n            console.error('onConfirmAddQuery: unknown paramIn', paramIn);\n            isErr = true;\n            return;\n        }\n\n\n\n\n\n\n        this.fetchJson();\n\n        const addQueryModalRef = this.fetchModel('apiManage').getState('addQueryModalRef');\n\n        if (addQueryModalRef) {\n            addQueryModalRef.closeModal();\n        }\n    }\n\n    onClickAddRes(apiData) {\n        // console.log('onClickAddBody apiData', JSON.stringify(apiData))\n        /* apiData: {\n            \"path\": \"/api/friend\",\n            \"apiType\": \"put\",\n            \"apiData\": {\n                \"produces\": [\n                \"application/json\"\n                ],\n                \"tags\": [\n                \"friend\"\n                ],\n                \"summary\": \"1-2.Edit Friend\",\n                \"parameters\": [\n    \n                ],\n                \"responses\": {\n    \n                }\n            }\n        } */\n\n        console.log('this.onClickAddRes', apiData)\n\n\n        this.fetchModel('addRes').setState('apiRoute', apiData.path);\n        this.fetchModel('addRes').setState('apiType', apiData.apiType);\n\n        const addResModalRef = this.fetchModel('apiManage').getState('addResModalRef');\n        if (addResModalRef) {\n            addResModalRef.openModal();\n        }\n    }\n\n    onCancelAddRes() {\n        const addResModalRef = this.fetchModel('apiManage').getState('addResModalRef');\n\n        if (addResModalRef) {\n            addResModalRef.closeModal();\n        }\n    }\n\n    async onConfirmAddRes() {\n        const vm = this;\n        const addResModel = this.fetchModel('addRes');\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiRoute: addResModel.getState('apiRoute'),\n            apiType: addResModel.getState('apiType'),\n            rootType: addResModel.getState('rootType'),\n            schema: addResModel.getState('schema'),\n            resType: addResModel.getState('resType'),\n            description: addResModel.getState('description'),\n        };\n\n        console.log('onConfirmAddBody apiParam', apiParam)\n\n        await ApiSender.sendApi(`[post]/api/addResBody`, apiParam).catch(new ApiError().catchAlertMsg())\n\n        const addResModalRef = this.fetchModel('apiManage').getState('addResModalRef');\n        if (addResModalRef) {\n            addResModalRef.closeModal();\n        }\n\n        vm.fetchJson();\n    }\n\n    // 在該欄位底下，新增新的欄位\n    onClickAddAttr(apiData, attributeData, attrSrc) {\n        const addAttrModel = this.fetchModel('addAttr');\n\n        console.log('onClickAddAttr', apiData, attributeData, attrSrc);\n        /* attributeData: {\n            \"type\": \"integer\",\n            \"description\": \"\",\n            \"default\": \"2\",\n            \"name\": \"auth\",\n            \"attrRequired\": false,\n            \"layerPath\": [\n                \"data\",\n                \"list\"\n            ]\n        } */\n\n        addAttrModel.setState('apiType', apiData.apiType);\n        addAttrModel.setState('apiRoute', apiData.path);\n        addAttrModel.setState('layerPath', attributeData.layerPath);\n        addAttrModel.setState('name', attributeData.name);\n        addAttrModel.setState('attrSrc', attrSrc);\n\n        addAttrModel.setState('addPositionDescription', `加在 '${attributeData.name}'(欄位key) 之後`);\n\n        const addAttrModalRef = this.fetchModel('apiManage').getState('addAttrModalRef');\n        if (addAttrModalRef) {\n            addAttrModalRef.openModal();\n        }\n\n        // 寫到這裡: 要繼續支援url query param\n    }\n\n    onCancelAddAttr() {\n        const addAttrModalRef = this.fetchModel('apiManage').getState('addAttrModalRef');\n        if (addAttrModalRef) {\n            addAttrModalRef.closeModal();\n        }\n    }\n    onConfirmAddAttr() {\n        const vm = this;\n        const addAttrModel = this.fetchModel('addAttr');\n        console.log('onConfirmAddAttr');\n\n        const attrName = addAttrModel.getState('add_name');\n        const attrDefault = addAttrModel.getState('add_defaultValue');\n        const attrValueType = addAttrModel.getState('add_valueType');\n        const attrDescription = addAttrModel.getState('add_description');\n        const attrRequired = addAttrModel.getState('add_required');\n\n        const attrData = {\n            name: attrName,\n            default: attrDefault,\n            valueType: attrValueType,\n            description: attrDescription,\n            required: attrRequired === 'true',\n        }\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiType: addAttrModel.getState('apiType'),\n            apiRoute: addAttrModel.getState('apiRoute'),\n            attrSrc: addAttrModel.getState('attrSrc'),\n            layerPath: addAttrModel.getState('layerPath'),\n            name: addAttrModel.getState('name'),\n            attrData,\n        }\n\n        ApiSender.sendApi('[post]/attribute/add', apiParam).then(() => {\n            return vm.fetchControl('tip').tip('新增成功');\n        }).then(() => {\n            vm.fetchJson();\n            const addAttrModalRef = vm.fetchModel('apiManage').getState('addAttrModalRef');\n            if (addAttrModalRef) {\n                addAttrModalRef.closeModal();\n            }\n        }).catch(new ApiError().catchAlertMsg());\n    }\n\n    // 刪除該欄位\n    onClickRemoveAttr(apiData, attributeData, attrSrc) {\n        const vm = this;\n\n        /* attributeData: {\n            \"type\": \"integer\",\n            \"description\": \"\",\n            \"default\": \"2\",\n            \"name\": \"auth\",\n            \"attrRequired\": false,\n            \"layerPath\": [\n                \"data\",\n                \"list\"\n            ]\n        } */\n\n        this.fetchControl('confirm').confirm(`是否刪除欄位？`).then((action) => {\n\n            if (action === 'confirm') {\n                const apiParam = {\n                    fileName: vm.fetchModel('apiManage').getState('fileName'),\n                    apiType: apiData.apiType,\n                    apiRoute: apiData.path,\n                    attrSrc: attrSrc,\n                    layerPath: attributeData.layerPath,\n                    name: attributeData.name,\n                };\n\n                // console.log('attributeData', attributeData)\n                // console.log('attrSrc', attrSrc)\n\n                ApiSender.sendApi('[post]/attribute/remove', apiParam).then(() => {\n                    return vm.fetchControl('tip').tip('刪除成功');\n                }).then(() => {\n                    vm.fetchJson();\n                }).catch(new ApiError().catchAlertMsg());\n            }\n        });\n    }\n\n\n    onClickEditAttr(apiData, attributeData, attrSrc) {\n        // console.log('onClickEditAttributeDescription attributeData', attributeData);\n        /* attributeData: { // 代表是一般的body上的參數\n            default: 0\n            description: \"好友ID\"\n            name: \"id\"\n            required: false\n            type: \"integer\"\n            layerPath: ['error', 'path', 'path']\n            attrRequired: false,\n        }*/\n\n        /* attributeData: { // paramType === 'urlQuery'\n            default: \"10\"\n            description: \"\"\n            in: \"query\" // 代表是URL上的query參數\n            name: \"pageSize\"\n            type: \"string\"\n\n            ===>缺以下2個參數\n            layerPath\n            attrRequired\n        } */\n\n        // console.log('apiData', apiData, attributeData, attrSrc)\n\n        const getBoolean = function (value) {\n            if (typeof value !== 'boolean') {\n                return 'false';\n            }\n\n            return value ? 'true' : 'false';\n        }\n\n        const editAttrModel = this.fetchModel('editAttr');\n\n        // console.log('attributeData.in', attributeData.in);\n\n        if (!attributeData.in) { // 預設undefined為json\n            editAttrModel.setState('paramType', 'bodyJson');\n        } else if (attributeData.in === 'query') { // URL query參數的情況\n            editAttrModel.setState('paramType', 'urlQuery');\n        } else if (attributeData.in === 'path') { // 設在 path 裡\n            editAttrModel.setState('paramType', 'pathParam');\n        } else {\n            console.error(`unknown paramIn type`); // 不明型態\n            editAttrModel.setState('paramType', attributeData.in);\n        }\n\n        // console.log('editAttr', attributeData);\n\n        // 查詢參數\n        editAttrModel.setState('apiType', apiData.apiType);\n        editAttrModel.setState('apiRoute', apiData.path);\n        editAttrModel.setState('tags', apiData.apiData.tags);\n        editAttrModel.setState('attrName', attributeData.name);\n        editAttrModel.setState('layerPath', attributeData.layerPath);\n        editAttrModel.setState('attrSrc', attrSrc);\n\n        // 修改參數\n        editAttrModel.setState('newAttrName', attributeData.name || '');\n        editAttrModel.setState('defaultValue', attributeData.default || '');\n        editAttrModel.setState('valueType', attributeData.type || '');\n        editAttrModel.setState('description', attributeData.description || '');\n        editAttrModel.setState('required', getBoolean(attributeData.attrRequired));\n\n        // 原始參數\n        editAttrModel.setState('originAttrName', attributeData.name || '');\n        editAttrModel.setState('originDefaultValue', attributeData.default || '');\n        editAttrModel.setState('originValueType', attributeData.type || '');\n        editAttrModel.setState('originDescription', attributeData.description || '');\n        editAttrModel.setState('originRequired', getBoolean(attributeData.attrRequired));\n\n        // console.log('requ', editAttrModel.getState('required'), editAttrModel.getState('originRequired'))\n        // console.log('rrrr', attributeData.required)\n\n\n        const editAttrModalRef = this.fetchModel('apiManage').getState('editAttrModalRef');\n        if (editAttrModalRef) {\n            editAttrModalRef.openModal();\n        }\n    }\n    async onConfirmEditAttr() {\n\n        const editAttrModel = this.fetchModel('editAttr');\n\n\n        const noUpdateCheck = function (val, originKey) {\n            // 與原始數值相同\n            return val === editAttrModel.getState(originKey);\n        }\n        const getNoUpdateCheckVal = function (key, originKey) {\n            let value = editAttrModel.getState(key);\n            if (noUpdateCheck(description, originKey)) {\n                value = null;\n            }\n            return value;\n        }\n\n        let attrName = editAttrModel.getState('newAttrName');\n        if (noUpdateCheck(attrName, 'originAttrName')) {\n            attrName = null;\n        }\n\n        let defaultValue = editAttrModel.getState('defaultValue');\n        if (noUpdateCheck(defaultValue, 'originDefaultValue')) {\n            defaultValue = null;\n        }\n\n        let valueType = editAttrModel.getState('valueType');\n        if (noUpdateCheck(valueType, 'originValueType')) {\n            valueType = null;\n        }\n\n        let description = editAttrModel.getState('description');\n        if (noUpdateCheck(description, 'originDescription')) {\n            description = null;\n        }\n\n        // console.log('required bb', editAttrModel.getState('required'), editAttrModel.getState('originRequired'));\n\n        let required = getNoUpdateCheckVal('required', 'originRequired');\n\n        // console.log('required cc', required)\n\n        required = required === 'true'; // 將字串轉回boolean\n\n\n        if (defaultValue !== null) {\n            const nowValueType = editAttrModel.getState('valueType');\n            if (nowValueType === 'integer') {\n                defaultValue = Number(defaultValue);\n            } else if (nowValueType === 'boolean') {\n                defaultValue = defaultValue === 'true';\n            }\n        }\n\n        // console.log(`attrName`, editAttrModel.getState('attrName'));\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiType: editAttrModel.getState('apiType'),\n            apiRoute: editAttrModel.getState('apiRoute'),\n            tags: editAttrModel.getState('tags'),\n            attrName: editAttrModel.getState('attrName'),\n            layerPath: editAttrModel.getState('layerPath'),\n            attrSrc: editAttrModel.getState('attrSrc'),\n            // -----------------------------------------------\n            attrData: {\n                attrName: attrName,\n                defaultValue: defaultValue,\n                valueType: valueType,\n                description: description,\n                required: required,\n            },\n        };\n\n        const paramType = editAttrModel.getState('paramType');\n        if (paramType === 'urlQuery') {\n            await ApiSender.sendApi(`[put]/attribute/edit/query`, apiParam).catch(new ApiError().catchAlertMsg())\n        } else if (paramType === 'bodyJson') {\n            await ApiSender.sendApi(`[post]/attribute/edit`, apiParam).catch(new ApiError().catchAlertMsg());\n        } else if (paramType === 'pathParam') {\n            await ApiSender.sendApi(`[post]/attribute/edit/path`, apiParam).catch(new ApiError().catchAlertMsg());\n        } else {\n            console.error(`unknown paramType`, paramType);\n        }\n\n        const editAttrModalRef = this.fetchModel('apiManage').getState('editAttrModalRef');\n        if (editAttrModalRef) {\n            editAttrModalRef.closeModal();\n        }\n\n        this.fetchJson();\n    }\n    onCancelEditAttr() {\n        const editAttrModalRef = this.fetchModel('apiManage').getState('editAttrModalRef');\n        if (editAttrModalRef) {\n            editAttrModalRef.closeModal();\n        }\n    }\n\n    onClickCreateApiDoc() {\n        console.log('onClickCreateApiDoc');\n\n        const addApiDocModalRef = this.fetchModel('apiManage').getState('addApiDocModalRef');\n        if (addApiDocModalRef) {\n            addApiDocModalRef.openModal();\n        }\n    }\n\n    onClickAddSecuritySchemes() {\n        const addSecurityRef = this.fetchModel('apiManage').getState('addSecurityRef');\n        if (addSecurityRef) {\n            addSecurityRef.openModal();\n        }\n    }\n\n    onCancelAddApiDoc() {\n\n        const addApiDocModalRef = this.fetchModel('apiManage').getState('addApiDocModalRef');\n        if (addApiDocModalRef) {\n            addApiDocModalRef.closeModal();\n        }\n    }\n    async onConfirmAddApiDoc() {\n        let error;\n\n        const addApiDocModel = this.fetchModel('addApiDoc');\n\n        // LocalAccessor.setItem('apiDocList', [{\n        //     fileName: addApiDocModel.getState('fileName'),\n        // }]);\n\n        const apiParam = {\n            fileName: addApiDocModel.getState('fileName'),\n            title: addApiDocModel.getState('title'),\n            host: addApiDocModel.getState('host'),\n            docType: addApiDocModel.getState('docType'),\n        }\n\n        await ApiSender.sendApi('[post]/doc/createJson', apiParam).catch(err => (error = err));\n        if (error) return Promise.reject(error);\n\n        const addApiDocModalRef = this.fetchModel('apiManage').getState('addApiDocModalRef');\n        if (addApiDocModalRef) {\n            addApiDocModalRef.closeModal();\n        }\n    }\n\n    onCancelAddSecurity() {\n        const addSecurityRef = this.fetchModel('apiManage').getState('addSecurityRef');\n        if (addSecurityRef) {\n            addSecurityRef.closeModal();\n        }\n    }\n\n    async onConfirmAddSecurity() {\n        const addSecurityModel = this.fetchModel('addSecu');\n\n        // LocalAccessor.setItem('apiDocList', [{\n        //     fileName: addApiDocModel.getState('fileName'),\n        // }]);\n\n        const apiParam = {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            securityKey: addSecurityModel.getState('securityKey'),\n            key: addSecurityModel.getState('key'),\n            type: addSecurityModel.getState('type'),\n            in: addSecurityModel.getState('in'),\n            description: addSecurityModel.getState('description'),\n        }\n\n        console.log('apiParam', apiParam);\n\n        let error;\n        await ApiSender.sendApi('[post]/doc/addSecurity', apiParam).catch(err => (error = err));\n        if (error) return Promise.reject(error);\n\n        const addSecurityRef = this.fetchModel('apiManage').getState('addSecurityRef');\n        if (addSecurityRef) {\n            addSecurityRef.closeModal();\n        }\n    }\n\n    async onClickClientSaveJsonFile() {\n        // console.log('onClickClientSaveJsonFile');\n\n        const jsonStr = this.fetchModel('apiJson').getState('json')\n        var blob = new Blob([jsonStr], { type: \"text/plain;charset=utf-8\" });\n\n        let fileName = this.fetchModel('apiManage').getState('fileName') || 'swagger';\n        fileName = `${fileName}.json`;\n\n        await this.saveFile(blob, fileName);\n    }\n    async onClickUpdateJsonFile() {\n        const vm = this;\n        const jsonStr = this.fetchModel('apiJson').getState('json');\n\n        let fileName = this.fetchModel('apiManage').getState('fileName');\n\n        if (!fileName) {\n            console.error(`onClickUpdateJsonFile: no fileName`);\n            return;\n        }\n\n        console.log(`onClickUpdateJsonFile`, fileName);\n\n        try {\n            JSON.parse(jsonStr);\n        } catch (error) {\n            console.error(`onClickUpdateJsonFile error`, error);\n            new ApiError().runErrorAlert(`json parse fail`);\n\n            return Promise.reject(error);\n        }\n\n        ApiSender.sendApi('[post]/doc/updateJson', {\n            fileName: fileName,\n            json: jsonStr,\n        }).then(() => {\n            this.fetchJson();\n            return vm.fetchControl('notify').notify('json has update');\n        }).catch(new ApiError().catchAlertMsg())\n    }\n\n\n    saveFile(blob, fileFullName) {\n        FileSaver.saveAs(blob, fileFullName);\n        console.log(`saveFile: Document ${fileFullName} has been saved!`);\n\n        return Promise.resolve();\n        // https://www.npmjs.com/package/file-saver\n\n        // 文字檔\n        // var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\n        // FileSaver.saveAs(blob, \"hello world.txt\");\n\n        // 儲存canvas快照\n        // var canvas = document.getElementById(\"my-canvas\");\n        // canvas.toBlob(function(blob) {\n        //     saveAs(blob, \"pretty image.png\");\n        // });\n    }\n\n    onClickAddExample(apiData, mode) {\n        // mode: 'reqBody', 'resBody'\n        const addExampleModel = this.fetchModel('addExample');\n        addExampleModel.setState('mode', mode);\n\n        const apiRoute = apiData.path;\n        const apiType = apiData.apiType;\n        addExampleModel.setState('apiRoute', apiRoute);\n        addExampleModel.setState('apiType', apiType);\n\n\n        // Load exmaple optionList -------------------------------\n\n        ApiSender.sendApi('[post]/example/list', {\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiRoute,\n            apiType,\n            mode,\n        }).then((apiRes) => {\n            // console.log('example list', apiRes.data.list);\n\n            const exampleMap = {};\n            const exampleOptionList = apiRes.data.list.map((exampleItem) => {\n                exampleMap[exampleItem.name] = exampleItem.value;\n\n                return {\n                    label: exampleItem.name,\n                    value: exampleItem.name,\n                    // obj: exampleItem.value,\n                }\n            });\n            addExampleModel.setState('exampleMap', exampleMap);\n            addExampleModel.setState('exampleOptionList', exampleOptionList);\n\n            if (exampleOptionList.length === 0) {\n                return;\n            }\n            const exampleKey = exampleOptionList[0].value;\n\n            const exampleObj = exampleMap[exampleKey];\n            const exampleSchemaJson = JSON.stringify(exampleObj);\n            let fJson = formatJSON(exampleSchemaJson);\n            fJson = fJson.replace(/\\t/g, \"  \");\n            addExampleModel.setState('exampleShowKey', exampleKey);\n            addExampleModel.setState('exampleSchemaJson', fJson);\n        });\n\n        const addExampleModalRef = this.fetchModel('apiManage').getState('addExampleModalRef');\n        if (addExampleModalRef) {\n            addExampleModalRef.openModal();\n        }\n    }\n\n    onCancelAddExample() {\n        const addExampleModalRef = this.fetchModel('apiManage').getState('addExampleModalRef');\n        if (addExampleModalRef) {\n            addExampleModalRef.closeModal();\n        }\n    }\n\n    onChangeShowExample(exampleKey) {\n        const addExampleModel = this.fetchModel('addExample');\n        addExampleModel.setState('exampleShowKey', exampleKey);\n\n        const exampleObj = addExampleModel.getExample(exampleKey);\n        const exampleSchemaJson = JSON.stringify(exampleObj);\n        let fJson = formatJSON(exampleSchemaJson);\n        fJson = fJson.replace(/\\t/g, \"  \");\n        addExampleModel.setState('exampleSchemaJson', fJson);\n    }\n\n    async onConfirmAddExample() {\n        const addExampleModel = this.fetchModel('addExample');\n\n        const mode = addExampleModel.getState('mode');\n\n        const schema = addExampleModel.getState('schema');\n\n        let jsonSchema;\n        try {\n            jsonSchema = JSON.parse(schema);\n        } catch (err) {\n            // 代表json parse失敗\n            console.error(`onConfirmAddExample json parse fail:`, err);\n            new ApiError().runErrorAlert(`json parse fail`);\n            return;\n        }\n\n        const apiParam = {\n            // mode: addExampleModel.getState('mode'),// 'reqBody', 'resBody'\n            fileName: this.fetchModel('apiManage').getState('fileName'),\n            apiType: addExampleModel.getState('apiType'),\n            apiRoute: addExampleModel.getState('apiRoute'),\n            name: addExampleModel.getState('name'),\n            schema: schema,\n        };\n        await ApiSender.sendApi(`[post]/example/add/{mode}`, apiParam, {\n            apiInnerData: {\n                mode: mode\n            }\n        }).catch(new ApiError().catchAlertMsg());\n\n        const addExampleModalRef = this.fetchModel('apiManage').getState('addExampleModalRef');\n        if (addExampleModalRef) {\n            addExampleModalRef.closeModal();\n        }\n    }\n}","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { datePicker as datePickerThemeObject } from 'theme/reas'\r\n\r\nimport LayerMixin from 'util/LayerMixin'\r\n\r\nimport ThemeMixin, { fetchImportStyle, fetchTheme } from 'util/ThemeMixin';\r\nimport InputText from './InputText'\r\n\r\nimport { ReactComponent as AngleLeftSvg } from 'assets/svg/br-angle-left.svg'\r\nimport { ReactComponent as AngleRightSvg } from 'assets/svg/br-angle-right.svg'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Ref from 'model/Ref'\r\n\r\nconst datePickerTheme = new ThemeMixin(datePickerThemeObject);\r\n\r\nconst gridWidth = '2.5rem';\r\n\r\nconst DefaultDatePickerStyled = styled.div`\r\nposition: relative;\r\n    & .date-picker-container {\r\n        display: none;\r\n\r\n        position: absolute;\r\n\r\n        /* left: -100px; // 測試用 */\r\n\r\n        z-index: ${() => LayerMixin.datePicker};\r\n        \r\n        background-color: ${fetchTheme('datePicker', '#c7c7c7')};\r\n        color: ${fetchTheme('datePickerText', '#c7c7c7')};\r\n\r\n        border-radius: ${fetchTheme('datePickerRadius', '#c7c7c7')};\r\n\r\n        box-shadow: 3px 3px 7px ${fetchTheme('datePickerShadow', '#111e1a')};\r\n\r\n        /* width: 320px; // 280 */\r\n        /* height: 309px; // 308 */\r\n        min-width: 300px;\r\n        min-height: 309px;\r\n\r\n        overflow: auto;\r\n\r\n        & .panel {\r\n            padding: 1rem 0.55rem;\r\n\r\n            & .header-row {\r\n                margin: 0.25rem 0.45rem;\r\n            }\r\n        }\r\n\r\n        & .date-picker-panel {\r\n            display: none;\r\n\r\n            width: 300px;\r\n\r\n            & .title-row {\r\n                display: flex;\r\n                justify-content: space-between;\r\n\r\n                & .title-block {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n\r\n                    cursor: pointer;\r\n                    user-select: none;\r\n\r\n                    & .title-block {\r\n                        padding: 0 3px;\r\n                    }\r\n\r\n                    & .icon-block {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n\r\n                        width: 30px;\r\n                        height: 30px;\r\n                        \r\n                        border-radius: 50px;\r\n\r\n                        & .arrow-icon {\r\n                            display: flex;\r\n\r\n                            width: 13px;\r\n                            height: 13px;\r\n\r\n                            margin: 0 3px;\r\n\r\n                            z-index: 26;\r\n                        }\r\n                    }\r\n                    & .icon-block:hover {\r\n                        background-color: #94c2b5;\r\n                        box-shadow: 0 0 6px #94c2b5;\r\n                    }\r\n                }\r\n            }\r\n\r\n            & .week-title-row {\r\n                display: flex;\r\n                justify-content: space-around;\r\n\r\n                & .week-title-item {\r\n                    display: flex;\r\n\r\n                    justify-content: center;\r\n                    align-items: center;\r\n\r\n                    width: ${gridWidth};\r\n                    height: 2.5rem;\r\n\r\n                    cursor: default;\r\n                    user-select: none;\r\n                }\r\n            }\r\n            & .date-block {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: space-around;\r\n\r\n                flex-grow: 1; // 下方多餘的空間都給它\r\n\r\n                & .week-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: space-around;\r\n\r\n                    & .date-grid {\r\n                        display: flex;\r\n                        /* flex-shrink: 0; */\r\n\r\n                        justify-content: center;\r\n                        align-items: center;\r\n\r\n                        width: ${gridWidth};\r\n                        height: 2.5rem;\r\n\r\n                        user-select: none;\r\n                        cursor: pointer;\r\n                    }\r\n                    & .date-grid.blank {\r\n                        cursor: default;\r\n                    }\r\n                    & .date-grid.blank:hover {\r\n                        background-color: transparent; // 空白的沒有hover\r\n                        box-shadow: none;\r\n                    }\r\n                    & .date-grid:hover {\r\n                        background-color: ${fetchTheme('dateGridHover', '#b5b3b3')};\r\n                        border-radius: ${fetchTheme('dateGridHoverRadius', '3px')};\r\n                        box-shadow: 0 0 5px ${fetchTheme('dateGridHoverShadow', '#38b793')};\r\n                    }\r\n                    & .date-grid.active {\r\n                        background-color: ${fetchTheme('dateGridHover', '#b5b3b3')};\r\n                        border-radius: ${fetchTheme('dateGridHoverRadius', '3px')};\r\n                        box-shadow: 0 0 5px ${fetchTheme('dateGridHoverShadow', '#38b793')};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        & .date-picker-panel.show {\r\n            display: block;\r\n        }\r\n\r\n        & .time-picker-panel {\r\n            /* display: none; */\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            justify-content: center;\r\n\r\n            width: 300px;\r\n\r\n            padding-left: 5px;\r\n            padding-right: 20px;\r\n\r\n            & .time-input-block {\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                justify-content: space-around;\r\n                align-items: center;\r\n\r\n                & .colon-block {\r\n                    font-size: 35px;\r\n                    color: #e1e1e1;\r\n                    font-weight: bold;\r\n\r\n                    transform: translateY(-5px);\r\n\r\n                    padding: 0 5px;\r\n                }\r\n            }\r\n        }\r\n        & .time-picker-panel.show {\r\n            display: flex;\r\n        }\r\n\r\n        & .month-picker-panel {\r\n            display: none;\r\n\r\n            /* height: 300px; */\r\n            width: 300px;\r\n\r\n            & .year-title-row {\r\n                display: flex;\r\n                justify-content: space-between;\r\n\r\n                & .icon-block {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    \r\n                    width: 1.8rem;\r\n                    height: 1.8rem;\r\n\r\n                    cursor: pointer;\r\n\r\n                    & .arrow-icon {\r\n                        width: 1rem;\r\n                        height: 1rem;\r\n                    }\r\n                }\r\n\r\n                & .year-title {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n\r\n            & .month-block {\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n                justify-content: space-around;\r\n\r\n                flex-grow: 1;\r\n\r\n                & .month-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: space-around;\r\n                    \r\n                    width: 100%;\r\n\r\n                    & .month-item {\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n\r\n                        cursor: pointer;\r\n                        user-select: none;\r\n\r\n                        width: 5rem;\r\n                        height: 1.8rem;\r\n                        padding-bottom: 0.15rem;\r\n                    }\r\n                    & .month-item.active {\r\n                        background-color: ${fetchTheme('dateGridHover', '#b5b3b3')};\r\n                        border-radius: ${fetchTheme('dateGridHoverRadius', '3px')};\r\n                        box-shadow: 0 0 5px ${fetchTheme('dateGridHoverShadow', '#38b793')};\r\n                    }\r\n                    & .month-item:hover {\r\n                        background-color: ${fetchTheme('dateGridHover', '#b5b3b3')};\r\n                        border-radius: ${fetchTheme('dateGridHoverRadius', '3px')};\r\n                        box-shadow: 0 0 5px ${fetchTheme('dateGridHoverShadow', '#38b793')};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        & .month-picker-panel.show {\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        & .year-picker-panel {\r\n            display: none;\r\n            width: 300px;\r\n\r\n            padding: 0 15px;\r\n\r\n            & .page-jump-block {\r\n                display: flex;\r\n\r\n                align-items: center;\r\n\r\n                /* position: relative; */\r\n                \r\n                & .icon-block {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n\r\n                    width: 30px;\r\n                    height: 30px;\r\n                    \r\n                    border-radius: 50px;\r\n\r\n                    cursor: pointer;\r\n                    user-select: none;\r\n\r\n                    & .arrow-icon {\r\n                        display: flex;\r\n\r\n                        width: 13px;\r\n                        height: 13px;\r\n\r\n                        margin: 0 3px;\r\n\r\n                        z-index: 26;\r\n                    }\r\n                }\r\n                & .icon-block:hover {\r\n                    background-color: #94c2b5;\r\n                    box-shadow: 0 0 6px #94c2b5;\r\n                }\r\n            }\r\n\r\n            & .year-list-block {\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n                flex-grow: 1;\r\n\r\n                & .year-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: space-between;\r\n\r\n                    margin: 14px 0;\r\n\r\n                    cursor: pointer;\r\n                    & .year-item {\r\n                        display: flex;\r\n\r\n                        padding: 5px 15px;\r\n                    }\r\n                    & .year-item:hover {\r\n                        background-color: ${fetchTheme('dateGridHover', '#b5b3b3')};\r\n                        border-radius: ${fetchTheme('dateGridHoverRadius', '3px')};\r\n                        box-shadow: 0 0 5px ${fetchTheme('dateGridHoverShadow', '#38b793')};\r\n                    }\r\n                }\r\n            }\r\n\r\n            \r\n        }\r\n        .year-picker-panel.show {\r\n            display: flex;\r\n            flex-direction: row;\r\n        }\r\n    }\r\n    & .date-picker-container.show {\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n`\r\n\r\n\r\nconst DateWeekPanel = ({ nowYear, nowMonth, nowDate, nowValue, onDatePick }) => {\r\n    // 之後要串參數\r\n\r\n    const d = new Date();\r\n    d.setFullYear(nowYear);\r\n    d.setMonth(nowMonth);\r\n    d.setDate(nowDate);\r\n\r\n    let activeDateNum = -99;\r\n\r\n    if (nowValue) {\r\n        // 有nowValue才處理日期高亮\r\n        const valueYear = nowValue.getFullYear();\r\n        const valueMonth = nowValue.getMonth();\r\n\r\n        if (valueYear === nowYear && valueMonth === nowMonth) {\r\n            activeDateNum = nowDate;\r\n        }\r\n    }\r\n\r\n\r\n    // 取得該月起始日\r\n    let startDate = d;\r\n    startDate.setDate(1);\r\n\r\n    // 起始日星期幾\r\n    let startDay = startDate.getDay(); // 7/1(五)=>5\r\n\r\n    // 取得該月最後一天\r\n    const lastDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0); // data: 0 代表前一個月最後一天\r\n\r\n    // 該月總天數\r\n    const dayAmount = lastDate.getDate(); // 7月=>31\r\n\r\n    let monthGrid = [];\r\n    let weekRow = [];\r\n\r\n    let dayNum = 0; // 0: 星期天 ===> 6: 星期六\r\n    let weekNum = 0; // 週數\r\n\r\n    const getGridClassName = (dateNum) => {\r\n        // console.log(`getGridClassName nowDate`, nowDate)\r\n        return `date-grid ${dateNum <= 0 ? 'blank' : ''} ${activeDateNum === dateNum ? 'active' : ''}`;\r\n    }\r\n\r\n    const onDateGridClick = dateNum => () => {\r\n        if (onDatePick) {\r\n            onDatePick(dateNum);\r\n        }\r\n    }\r\n\r\n    // 跑該月...空白startDay天 + N天\r\n    for (let dateNum = 1 - startDay; dateNum <= dayAmount; dateNum += 1) {\r\n        if (dayNum === 0) {\r\n            // 代表是星期天，又是新一周的開始，生出新的一列\r\n            weekRow = [];\r\n        }\r\n        weekRow.push(<div className={getGridClassName(dateNum)} key={dateNum}\r\n            onClick={onDateGridClick(dateNum)}>{dateNum > 0 ? dateNum : ''}</div>);\r\n        // className=\"date-grid blank active\" (全貌)\r\n        // onClick={this.onDateGridClick.bind(this, dateNum)}\r\n\r\n        if (dayNum === 6) {\r\n            // 代表已是星期六，要將該列塞入\r\n            monthGrid.push(\r\n                (\r\n                    <div className=\"week-row\" key={`w${weekNum}`}>\r\n                        {weekRow}\r\n                    </div>\r\n                )\r\n            );\r\n            weekNum += 1;\r\n        } else if (dateNum === dayAmount) {\r\n            // 代表已是該月最後一天，直接塞入該周\r\n\r\n            if (weekRow.length < 7) {\r\n\r\n                const remainBlankNum = 7 - weekRow.length;\r\n\r\n                // 代表該周還沒湊滿7格，直接塞到滿\r\n                for (let i = 1; i <= remainBlankNum; i += 1) {\r\n                    // console.log(`remain i: ${i} dateNum:${dateNum + i}`);\r\n                    weekRow.push(\r\n                        <div className=\"date-grid blank\" key={dateNum + i}></div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            monthGrid.push(\r\n                (\r\n                    <div className=\"week-row\" key={`w${weekNum}`}>\r\n                        {weekRow}\r\n                    </div>\r\n                )\r\n            );\r\n            weekNum += 1;\r\n        }\r\n\r\n        dayNum += 1;\r\n        dayNum %= 7;\r\n    }\r\n\r\n    return (<div className=\"date-block\">{monthGrid}</div>);\r\n}\r\n\r\nconst DatePickerPanel = ({ show, nowYear, nowMonth, nowDate, headerRowSlot, nowValue, onDatePick }) => {\r\n\r\n    return (\r\n        <div className={`panel date-picker-panel ${show ? 'show' : ''}`}>\r\n            {headerRowSlot}\r\n            {/* <div className=\"header-row title-row\">\r\n                <div className=\"title-block\">\r\n                    <div className=\"icon-block\">\r\n                        <AngleLeftSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                    </div>\r\n                    <div className=\"title-block\">\r\n                        October\r\n                    </div>\r\n                    <div className=\"icon-block\">\r\n                        <AngleRightSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"title-block\">\r\n                    <div className=\"icon-block\">\r\n                        <AngleLeftSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                    </div>\r\n                    <div className=\"title-block\">\r\n                        2022\r\n                    </div>\r\n                    <div className=\"icon-block\">\r\n                        <AngleRightSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"week-title-row\">\r\n                <div className=\"week-title-item\">\r\n                    S\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    M\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    T\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    W\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    T\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    F\r\n                </div>\r\n                <div className=\"week-title-item\">\r\n                    S\r\n                </div>\r\n            </div>\r\n            {/* {this.genWeek()} */}\r\n            <DateWeekPanel nowYear={nowYear} nowMonth={nowMonth} nowDate={nowDate}\r\n                nowValue={nowValue} onDatePick={onDatePick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MonthPickerPanel = ({ show, nowMonth = -1, onMonthChange }) => {\r\n\r\n    const getMonthStr = function (month, shortMode) {\r\n        const fullMonthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const shortMonthList = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        let monthList = shortMode ? shortMonthList : fullMonthList;\r\n\r\n        return monthList[month];\r\n    }\r\n\r\n    const onMonthClick = (month) => () => {\r\n        if (onMonthChange) {\r\n            onMonthChange(month);\r\n        }\r\n    }\r\n\r\n\r\n    const getMonthItemClass = function (monthNum) {\r\n        return `month-item ${nowMonth === monthNum ? 'active' : ''}`\r\n    }\r\n\r\n    return (\r\n        <div className={`panel month-picker-panel ${show ? 'show' : ''}`} >\r\n            {/* <div className=\"header-row year-title-row\">\r\n                <div className=\"icon-block\" >\r\n                    <AngleLeftSvg className=\"arrow-icon\"></AngleLeftSvg>\r\n                </div>\r\n                <div className=\"year-title\">\r\n                    2022\r\n                </div>\r\n                <div className=\"icon-block\" >\r\n                    <AngleRightSvg className=\"arrow-icon\"></AngleRightSvg>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"month-block\">\r\n                <div className='month-row'>\r\n                    <div className={getMonthItemClass(0)} onClick={onMonthClick(0)}>{getMonthStr(0, true)}</div>\r\n                    <div className={getMonthItemClass(1)} onClick={onMonthClick(1)}>{getMonthStr(1, true)}</div>\r\n                    <div className={getMonthItemClass(2)} onClick={onMonthClick(2)}>{getMonthStr(2, true)}</div>\r\n                </div>\r\n                <div className='month-row'>\r\n                    <div className={getMonthItemClass(3)} onClick={onMonthClick(3)}>{getMonthStr(3, true)}</div>\r\n                    <div className={getMonthItemClass(4)} onClick={onMonthClick(4)}>{getMonthStr(4, true)}</div>\r\n                    <div className={getMonthItemClass(5)} onClick={onMonthClick(5)}>{getMonthStr(5, true)}</div>\r\n                </div>\r\n                <div className='month-row'>\r\n                    <div className={getMonthItemClass(6)} onClick={onMonthClick(6)}>{getMonthStr(6, true)}</div>\r\n                    <div className={getMonthItemClass(7)} onClick={onMonthClick(7)}>{getMonthStr(7, true)}</div>\r\n                    <div className={getMonthItemClass(8)} onClick={onMonthClick(8)}>{getMonthStr(8, true)}</div>\r\n                </div>\r\n                <div className='month-row'>\r\n                    <div className={getMonthItemClass(9)} onClick={onMonthClick(9)}>{getMonthStr(9, true)}</div>\r\n                    <div className={getMonthItemClass(10)} onClick={onMonthClick(10)}>{getMonthStr(10, true)}</div>\r\n                    <div className={getMonthItemClass(11)} onClick={onMonthClick(11)}>{getMonthStr(11, true)}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst YearPickerPanel = ({ show, baseYear = 2022, onYearChange }) => {\r\n\r\n    const [startYear, setStartYear] = useState(baseYear - 9);\r\n\r\n    const yearRowListDom = [];\r\n\r\n    const getYear = function (year, rowIndex, colIndex) {\r\n        return year + (rowIndex * 3) + colIndex;\r\n    }\r\n\r\n    const onYearItemClick = year => () => {\r\n        if (onYearChange) {\r\n            onYearChange(year)\r\n        }\r\n    }\r\n\r\n    const onYearPageChagne = (offset) => () => {\r\n        setStartYear(startYear + (offset * 18));\r\n    }\r\n\r\n    for (let i = 0; i < 6; i += 1) {\r\n\r\n        const yearA = getYear(startYear, i, 0);\r\n        const yearB = getYear(startYear, i, 1);\r\n        const yearC = getYear(startYear, i, 2);\r\n\r\n        yearRowListDom.push(\r\n            (\r\n                <div className=\"year-row\" key={`yearRow_${i}`}>\r\n                    <div className=\"year-item\" onClick={onYearItemClick(yearA)}>\r\n                        {yearA}\r\n                    </div>\r\n                    <div className=\"year-item\" onClick={onYearItemClick(yearB)}>\r\n                        {yearB}\r\n                    </div>\r\n                    <div className=\"year-item\" onClick={onYearItemClick(yearC)}>\r\n                        {yearC}\r\n                    </div>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`year-picker-panel ${show ? 'show' : ''}`}>\r\n            <div className=\"page-jump-block\">\r\n                <div className=\"icon-block\" onClick={onYearPageChagne(-1)}>\r\n                    <AngleLeftSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"year-list-block\">\r\n                {yearRowListDom}\r\n                {/* <div className=\"year-row\" >\r\n                    <div className=\"year-item\">\r\n                        2019\r\n                    </div>\r\n                    <div className=\"year-item\">\r\n                        2019\r\n                    </div>\r\n                    <div className=\"year-item\">\r\n                        2019\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"page-jump-block\">\r\n                <div className=\"icon-block\" onClick={onYearPageChagne(1)}>\r\n                    <AngleRightSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst InputStyled = styled.input`\r\n    height: 60px;\r\n    width: 100px;\r\n    \r\n    background-color: ${fetchTheme('inputBox', '#5e9aaf')};\r\n    color: ${fetchTheme('inputBoxText', '#5d5d5d')};\r\n\r\n    outline: none; // 關閉亮起的外框\r\n    /* outline: #e1e1e15b solid 3px; */\r\n    box-shadow: 0 0 10px 5px #e6f5f0c1;\r\n    \r\n    border-radius: 3px;\r\n    border: none;\r\n\r\n    font-size: 35px;\r\n    color: #e1e1e1;\r\n    /* text-align: right;\r\n    padding-right: 30px; */\r\n    text-align: center;\r\n\r\n    box-sizing: border-box; // 會自動讓padding寬度是往內計算，不會導致padding和border使寬度莫名其妙變長\r\n\r\n    /* user-select: none; */\r\n\r\n    &.focus {\r\n        outline: none; // 關閉亮起的外框\r\n    }\r\n\r\n    &::placeholder {\r\n        color: ${fetchTheme('inputBoxPlaceholder', '#5d5d5d')};\r\n    }\r\n    &:disabled {\r\n        background-color: ${fetchTheme('inputBoxDisabled', '#d4c1c1')};\r\n        cursor: not-allowed;\r\n    }\r\n    &::selection {\r\n        background: #4d786c; //背景修改為綠色\r\n        color: #e1e1e1; //文字修改為白色\r\n    }\r\n`;\r\n\r\nconst InputTimeNumber = ({ max, value, onChange }) => {\r\n\r\n    const maxNum = max ? Number(max) : 100;\r\n    const minNum = 0;\r\n\r\n    // console.log('value', value)\r\n    let defaultValue = value !== undefined ? `${value}` : '0';\r\n\r\n    // console.log('defaultValue', defaultValue)\r\n    const [inputNum, setInputNum] = useState(defaultValue);\r\n\r\n    const actInputNum = val => {\r\n        setInputNum(val);\r\n        if (onChange) {\r\n            onChange(val);\r\n        }\r\n    }\r\n\r\n    const onTimeNumberChange = () => e => {\r\n        // console.log('e', e);\r\n        const str = e.target.value;\r\n        // console.log('str', str);\r\n\r\n        if (str === '') {\r\n            actInputNum('0');\r\n            return;\r\n        }\r\n        if (!/^\\d+$/.test(str)) {\r\n            return; // 代表不是數字\r\n        }\r\n        const val = Number(str);\r\n        if (isNaN(val)) {\r\n            return; // 數字解析失敗\r\n        }\r\n        if (val > maxNum) {\r\n            return; // 超出最大值\r\n        }\r\n        if (val < minNum) {\r\n            return; // 低於最小值\r\n        }\r\n        actInputNum(val);\r\n    }\r\n\r\n    return (<InputStyled theme={datePickerThemeObject}\r\n        value={inputNum} onChange={onTimeNumberChange()}\r\n    ></InputStyled>);\r\n}\r\n\r\nconst TimePickerPanel = ({ hour, minute, onHourChange, onMinuteChange }) => {\r\n    // hour: 3\r\n    // minute: 15\r\n\r\n    const handleChangeHour = () => val => {\r\n        if (onHourChange) {\r\n            onHourChange(val);\r\n        }\r\n    }\r\n    const handleChangeMinute = () => val => {\r\n        if (onMinuteChange) {\r\n            onMinuteChange(val);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"time-picker-panel\">\r\n            <div className=\"time-input-block\">\r\n                <InputTimeNumber max=\"23\" value={hour} onChange={handleChangeHour()}></InputTimeNumber>\r\n                <div className=\"colon-block\">：</div>\r\n                <InputTimeNumber max=\"59\" value={minute} onChange={handleChangeMinute()}></InputTimeNumber>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeaderRowPanel = ({ onChangePanel, year, month, onChangeMonth, onChangeYear }) => {\r\n\r\n    const handleChangePanel = mode => () => {\r\n        if (onChangePanel) {\r\n            onChangePanel(mode);\r\n        }\r\n    }\r\n\r\n    const getMonthStr = month => {\r\n        const fullMonthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        // const shortMonthList = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        // let monthList = shortMode ? shortMonthList : fullMonthList;\r\n\r\n        return fullMonthList[month];\r\n    }\r\n\r\n    const onClickMonthChange = (offset) => () => {\r\n        const newMonth = month + offset;\r\n        // if (newMonth < 0) {\r\n        //     return;\r\n        // }\r\n        // if (newMonth > 11) {\r\n        //     return;\r\n        // }\r\n\r\n        if (onChangeMonth) {\r\n            onChangeMonth(newMonth);\r\n        }\r\n    }\r\n\r\n    const onClickYearChange = (offset) => () => {\r\n        const newYear = year + offset;\r\n        if (newYear <= 1970) { // 已低於Date數值低限\r\n            return;\r\n        }\r\n\r\n        if (onChangeYear) {\r\n            onChangeYear(newYear);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-row title-row\">\r\n            <div className=\"title-block\">\r\n                <div className=\"icon-block\" onClick={onClickMonthChange(-1)}>\r\n                    <AngleLeftSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n                <div className=\"title-block\" onClick={handleChangePanel('month')}>\r\n                    {/* October */}\r\n                    {getMonthStr(month)}\r\n                </div>\r\n                <div className=\"icon-block\" onClick={onClickMonthChange(1)}>\r\n                    <AngleRightSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"title-block\">\r\n                <div className=\"icon-block\" onClick={onClickYearChange(-1)}>\r\n                    <AngleLeftSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n                <div className=\"title-block\" onClick={handleChangePanel('year')}>\r\n                    {year}\r\n                </div>\r\n                <div className=\"icon-block\" onClick={onClickYearChange(1)}>\r\n                    <AngleRightSvg className=\"arrow-icon\" fill={datePickerTheme.getTheme('arrowIcon', '#2e2e2e',)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DefaultDateTimePicker = ({ value, onChange, srcKey = \"DefaultDateTimePicker_temp\" }) => {\r\n    // console.log('DefaultDateTimePicker value', value);\r\n\r\n    let refValueType;\r\n    if (value instanceof Ref) {\r\n        refValueType = typeof value.getValue();\r\n    }\r\n\r\n    const convertDateValue = function (value) {\r\n\r\n        let refVal;\r\n        if (!value) {\r\n            return new Date();\r\n        } else if (value instanceof Date) {\r\n            return value;\r\n        } else if (value instanceof Ref) {\r\n            refVal = value.getValue();\r\n        } else {\r\n            console.error(`DefaultDateTimePicker: value not support`);\r\n            return new Date();\r\n        }\r\n\r\n        if (typeof refVal === 'string') { // 支援文字格式的ref\r\n\r\n            if (!refVal) {\r\n                return new Date();\r\n            }\r\n            // 解析字串\r\n            const dateVal = new Date(refVal);\r\n            const testDate = dateVal.getDate();\r\n            if (isNaN(testDate)) {\r\n                console.error(`DefaultDateTimePicker: refVal parse fail`);\r\n                return new Date();\r\n            }\r\n            return dateVal;\r\n        } else {\r\n            console.error(`DefaultDateTimePicker: Ref value format error`);\r\n            return new Date();\r\n        }\r\n    }\r\n\r\n    const [panelShow, setPanelShow] = useState(false);\r\n\r\n    const [nowValue, setNowValue] = useState(convertDateValue(value));\r\n    // let actNowValue = setNowValue;\r\n    // if (value instanceof Ref) {\r\n    //     actNowValue = value.reactive(srcKey, setNowValue);\r\n    // }\r\n\r\n    const [year, setYear] = useState(nowValue.getFullYear());\r\n    const [month, setMonth] = useState(nowValue.getMonth());\r\n    const [date, setDate] = useState(nowValue.getDate());\r\n\r\n    const [hour, setHour] = useState(nowValue.getHours());\r\n    const [minute, setMinute] = useState(nowValue.getMinutes());\r\n\r\n    const [datePickerMode, setDatePickerMode] = useState('date'); // 'month', 'year'\r\n\r\n    const [dateShow, setDateShow] = useState(false);\r\n    const [monthShow, setMonthShow] = useState(false);\r\n    const [yearShow, setYearShow] = useState(false);\r\n    useEffect(function () {\r\n        if (datePickerMode === 'date') {\r\n            setDateShow(true);\r\n            setMonthShow(false);\r\n            setYearShow(false);\r\n        } else if (datePickerMode === 'month') {\r\n            setDateShow(false);\r\n            setMonthShow(true);\r\n            setYearShow(false);\r\n        } else if (datePickerMode === 'year') {\r\n            setDateShow(false);\r\n            setMonthShow(false);\r\n            setYearShow(true);\r\n        }\r\n    }, [datePickerMode]);\r\n\r\n    const onChangePanel = mode => {\r\n        setDatePickerMode(mode);\r\n    }\r\n\r\n    const onHeaderMonthChange = () => newMonth => {\r\n        if (newMonth > 11) {\r\n            newMonth = 0;\r\n            setYear(year + 1);\r\n        } else if (newMonth < 0) {\r\n            newMonth = 11;\r\n            setYear(year - 1);\r\n        }\r\n        setMonth(newMonth);\r\n    }\r\n\r\n    const headerRowSlot = (\r\n        <HeaderRowPanel year={year} month={month} onChangePanel={onChangePanel}\r\n            onChangeYear={setYear} onChangeMonth={onHeaderMonthChange()}></HeaderRowPanel>\r\n    )\r\n\r\n    const onMonthChange = month => {\r\n        // console.log('onMonthChange', month);\r\n        setMonth(month);\r\n        setDatePickerMode('date');\r\n    }\r\n\r\n    const onYearChange = year => {\r\n        // console.log('onYearChange', year);\r\n        setYear(year);\r\n        setDatePickerMode('date');\r\n    }\r\n\r\n    const onHourChange = val => {\r\n        setHour(val);\r\n    }\r\n    const onMinuteChange = val => {\r\n        setMinute(val);\r\n    }\r\n\r\n    let outputValue;\r\n    if (value instanceof Ref) {\r\n        outputValue = value.reactive(srcKey);\r\n    }\r\n    const onDatePick = () => dateNum => {\r\n\r\n        // console.log('onDatePick dateNum', dateNum);\r\n\r\n        const d = new Date();\r\n        d.setFullYear(year);\r\n        d.setMonth(month);\r\n        d.setDate(dateNum);\r\n        d.setHours(hour);\r\n        d.setMinutes(minute);\r\n        d.setSeconds(0);\r\n\r\n        // 改變內部的nowValue\r\n        setNowValue(d);\r\n\r\n        // console.log('onDatePick', d.toLocaleString());\r\n        if (onChange) { // 丟出事件\r\n            onChange(d);\r\n        }\r\n\r\n        if (value instanceof Ref) { // 代表是Ref格式\r\n            // 輸出參數到ref\r\n            if (refValueType === 'string') {\r\n                // 代表逆向設定回去，要轉成string格式\r\n                outputValue(d.toISOString());\r\n            } else {\r\n                outputValue(d);\r\n            }\r\n        }\r\n\r\n        // 關閉Panel\r\n        setPanelShow(false);\r\n    }\r\n    // let showDateStr = `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}`;\r\n\r\n    const onInputClick = () => () => {\r\n        setPanelShow(!panelShow);\r\n    }\r\n\r\n    const convertShowDateStr = function (d) {\r\n        return `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()} ${d.getHours()}:${d.getMinutes()}`;\r\n    }\r\n    const [inputBoxValue, setInputBoxValue] = useState(convertShowDateStr(nowValue));\r\n    useEffect(function () {\r\n        console.log('sensor aaaa', convertShowDateStr(nowValue));\r\n        setInputBoxValue(convertShowDateStr(nowValue));\r\n    }, [nowValue]);\r\n\r\n    return (\r\n        <DefaultDatePickerStyled theme={datePickerThemeObject}>\r\n            {/* placeholder=\"開始日期\" */}\r\n            <InputText value={inputBoxValue}\r\n                importClass=\"date-picker-box\" onClick={onInputClick()} />\r\n            <div className={`date-picker-container ${panelShow ? 'show' : ''}`} style={{\r\n                left: '-180px', // 暫用\r\n            }}>\r\n                <DatePickerPanel show={dateShow} nowYear={year} nowMonth={month} nowDate={date}\r\n                    nowValue={nowValue} headerRowSlot={headerRowSlot} onDatePick={onDatePick()}></DatePickerPanel>\r\n                <MonthPickerPanel show={monthShow} nowMonth={month} onMonthChange={onMonthChange}></MonthPickerPanel>\r\n                <YearPickerPanel show={yearShow} baseYear={year} onYearChange={onYearChange}></YearPickerPanel>\r\n                <TimePickerPanel hour={hour} minute={minute} onHourChange={onHourChange}\r\n                    onMinuteChange={onMinuteChange} ></TimePickerPanel>\r\n            </div>\r\n        </DefaultDatePickerStyled>\r\n    )\r\n}\r\n\r\nexport default function DateTimePicker({ value, onChange, srcKey }) {\r\n    // importStyle, placeholder, onUpdate, pattern, value\r\n\r\n    return (<DefaultDateTimePicker value={value} onChange={onChange}\r\n        srcKey={srcKey}></DefaultDateTimePicker>)\r\n\r\n    // return (<DefaultDateTimePicker importStyle={importStyle}\r\n    //     placeholder={placeholder} onUpdate={onUpdate} pattern={pattern}\r\n    //     value={value}></DefaultDateTimePicker>)\r\n}","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { fetchTheme, fetchImportStyle } from 'util/ThemeMixin'\r\nimport { textArea as textAreaThemeObject } from 'theme/reas'\r\nimport { useEffect, useState } from 'react'\r\nimport Ref from 'model/Ref'\r\nimport { useRef } from 'react'\r\n\r\nconst lineHeight = 19.6; // 行高 19.6 = 16.8(1.05rem) * 1.166\r\n\r\nconst TextareaStyled = styled.textarea`\r\n    /* width: ${fetchImportStyle('width', '18rem')}; */\r\n    /* height: 2.3rem; */\r\n    /* height: ${fetchImportStyle('height', '4.6rem')}; */\r\n\r\n    width: ${props => props.width || '18rem'};\r\n    height: ${props => props.height || '4.6rem'};\r\n\r\n    /* border-width: 0; // 無外框版 */\r\n    \r\n    background-color: ${fetchTheme('inputBox', '#5e9aaf')};\r\n    color: ${fetchTheme('inputBoxText', '#5d5d5d')};\r\n\r\n    outline: none; // 關閉亮起的外框\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-color: ${fetchTheme('inputBoxBorder', '#cacaca')};\r\n    border-radius: ${fetchTheme('inputBoxRaduis', '3px')};\r\n\r\n\r\n    font-size: 1.05rem; // ${lineHeight}px; // 1.05rem\r\n    line-height: ${lineHeight}px;\r\n    text-align: left;\r\n    padding-left: 0.7rem;\r\n    padding-right: 0.7rem;\r\n    box-sizing: border-box; // 會自動讓padding寬度是往內計算，不會導致padding和border使寬度莫名其妙變長\r\n\r\n    margin-left: ${fetchImportStyle('marginLeft', '0px')};\r\n    margin-right: ${fetchImportStyle('marginRight', '0px')};\r\n    margin-top: ${fetchImportStyle('marginTop', '0px')};\r\n    margin-bottom: ${fetchImportStyle('marginBottom', '0px')};\r\n\r\n    resize: none;\r\n\r\n    /* margin-top: 20px; */\r\n\r\n    /* ${props => props.importStyle} */\r\n\r\n    &.focus {\r\n        outline: none; // 關閉亮起的外框\r\n    }\r\n\r\n    &::placeholder {\r\n        color: ${fetchTheme('inputBoxPlaceholder', '#5d5d5d')};\r\n        /* opacity: 1; */\r\n    }\r\n    &:disabled {\r\n        background-color: ${fetchTheme('inputBoxDisabled', '#d4c1c1')};\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    &::selection {\r\n        background: #437567; //背景修改為綠色\r\n        color: #f8f8f8; //文字修改為白色\r\n    }\r\n`\r\n\r\nexport default function TextArea({ width, height, value, onUpdate, srcKey = 'TextArea', nowrap = false, importStyle, searchTrigger, disabled = false }) {\r\n\r\n    const isRefMode = value instanceof Ref;\r\n\r\n    const convertValue = function (value) {\r\n        let initInputText = '';\r\n        if (typeof value === 'string') {\r\n            initInputText = value;\r\n        } else if (isRefMode) {\r\n            initInputText = value.getValue();\r\n        }\r\n        return initInputText;\r\n    }\r\n    const [nowValue, setNowValue] = useState(convertValue(value));\r\n\r\n    // const mutTextArea = function (val) {\r\n    //     setNowValue(val);\r\n    // }\r\n    let actTextArea = setNowValue;\r\n    if (isRefMode) { // 綁定value\r\n        actTextArea = value.reactive(srcKey, actTextArea);\r\n    }\r\n\r\n    // event----------------------------------------\r\n\r\n    const handleChange = () => e => {\r\n        // console.log('handleChange value', e.target.value)\r\n        // console.log('handleChange nowValue', nowValue)\r\n\r\n        if (isRefMode) {\r\n\r\n            // console.log('actTextArea', e.target.value)\r\n\r\n            // 代表是ref雙向綁定模式\r\n            actTextArea(e.target.value);\r\n        } else if (onUpdate) {\r\n            // 非雙向綁定模式: 若有onUpdate即丟出事件\r\n            onUpdate(e.target.value);\r\n        }\r\n    }\r\n\r\n    // useEffect(function () {\r\n    //     if (!isRefMode) {\r\n    //         // 代表為直接綁定模式\r\n\r\n    //         if (value !== nowValue) {\r\n    //             // 代表上層有將字串重新處理過\r\n    //             console.log('eeeee', value, nowValue)\r\n    //         }\r\n    //     }\r\n    // }, [value]);\r\n    if (nowrap) {\r\n\r\n        importStyle = { // 不換行的設定\r\n            whiteSpace: 'pre',\r\n            overflowWrap: 'normal',\r\n            overflowX: 'scroll',\r\n        }\r\n        // white-space: pre;\r\n        // overflow-wrap: normal;\r\n        // overflow-x: scroll;\r\n    }\r\n\r\n    let bindValue;\r\n    if (isRefMode) { // 如果是ref，要從value接收參數異動\r\n        bindValue = nowValue;\r\n    }\r\n\r\n    // 測試textarea的光標設定功能\r\n    /*\r\n        const inputRef = useRef();\r\n    \r\n        const test = () => () => {\r\n            console.log('test')\r\n            // const index = 5;\r\n            // var textarea = document.getElementById(\"textarea_test\");\r\n            // console.log('textarea', textarea)\r\n            // textarea.focus();\r\n            // textarea.setSelectionRange(index, index + 8);\r\n            // var val = textarea.value;\r\n            // const text = 'aaa';\r\n            // var start = textarea.selectionStart;\r\n            // const end = textarea.selectionEnd;\r\n    \r\n            // textarea.value = val.slice(0, start) + text + val.slice(end);\r\n            // console.log('textarea.value', JSON.stringify(textarea.value))\r\n            // textarea.focus();\r\n            // textarea.setSelectionRange(1, 1 + 8);\r\n    \r\n            inputRef.current.focus();\r\n        }\r\n    \r\n        \r\n        return (<div onClick={test()}>CCCC</div>\r\n        <textarea\r\n            id=\"textarea_test\" ref={inputRef}></textarea>)\r\n    */\r\n\r\n    const textareaRef = useRef();\r\n\r\n    const searchKeyword = (keyword, selectionStartOffset = 0, selectionEndOffset = 0) => {\r\n        // selectionStartOffset: 關鍵字的\r\n        // selectionEndOffset: \r\n        if (!keyword) {\r\n            return;\r\n        }\r\n        if (typeof keyword !== 'string') {\r\n            return;\r\n        }\r\n        if (keyword === '') {\r\n            return;\r\n        }\r\n\r\n        const convertToPxNum = function (val) {\r\n            if (typeof val === 'number') {\r\n                return val;\r\n            } else if (typeof val === 'string' && val !== '') {\r\n                const pxStrIndex = val.search(/px/g);\r\n                if (/px$/.test(val)) {\r\n                    return Number(val.slice(0, pxStrIndex));\r\n                } else {\r\n                    return 0; // 代表有可能是rem之類的單位，無法解析\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        let textareaHeight = convertToPxNum(height); // textarea 高度\r\n        const halfTextareaHeight = textareaHeight / 2; // 一半高度\r\n\r\n\r\n\r\n        const value = textareaRef.current.value;\r\n\r\n        const textPos = value.indexOf(keyword);\r\n        // console.log('textPos', textPos); // 關鍵字位置索引值\r\n\r\n        // 1.選取該關鍵字\r\n        textareaRef.current.focus();\r\n        textareaRef.current.setSelectionRange(textPos + selectionStartOffset, textPos + keyword.length + selectionEndOffset);\r\n\r\n        const prefixStr = value.slice(0, textPos);\r\n\r\n        const matchResult = prefixStr.match(/(\\r\\n|\\r|\\n)/g);\r\n        const lineNum = matchResult.length;\r\n        // console.log('lineNum', lineNum) // 該關鍵字行數\r\n\r\n        const scrollTop = lineNum * lineHeight; // 捲動的高度\r\n\r\n        // 2.捲到該位置(置中顯示)\r\n        textareaRef.current.scrollTop = scrollTop - halfTextareaHeight;\r\n\r\n        // textareaRef.current.scrollTop = scrollTop * 1.166; // 1.166: BUG (漏掉的行高係數)\r\n        return;\r\n    };\r\n    if (searchTrigger) {\r\n        searchTrigger(searchKeyword);\r\n    }\r\n\r\n    return (\r\n        <TextareaStyled\r\n            id=\"textarea_test\"\r\n            width={width} height={height} theme={textAreaThemeObject}\r\n            value={bindValue} onChange={handleChange()}\r\n            style={importStyle}\r\n            ref={textareaRef}\r\n            disabled={disabled}\r\n        ></TextareaStyled>\r\n    );\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <div onClick={test()}>CCCC</div>\r\n    //         <TextareaStyled\r\n    //             id=\"textarea_test\"\r\n    //             width={width} height={height} theme={textAreaThemeObject}\r\n    //             value={bindValue} onChange={handleChange()}\r\n    //             style={importStyle}\r\n    //             ref={textareaRef}\r\n    //         ></TextareaStyled>\r\n    //     </div>\r\n    // )\r\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBrSensorAlert(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24,5.5v6c0,.829-.672,1.5-1.5,1.5s-1.5-.671-1.5-1.5V5.5c0-1.378-1.121-2.5-2.5-2.5H5.5c-1.378,0-2.5,1.122-2.5,2.5v13c0,1.378,1.122,2.5,2.5,2.5,.829,0,1.5,.671,1.5,1.5s-.671,1.5-1.5,1.5c-3.033,0-5.5-2.467-5.5-5.5V5.5C0,2.467,2.467,0,5.5,0h13c3.032,0,5.5,2.467,5.5,5.5Zm-.264,15.486c.349,.636,.351,1.384,.012,2.011s-.946,1.003-1.626,1.003H10.878c-.679,0-1.287-.375-1.625-1.003-.339-.628-.336-1.376,.006-2.002l5.627-10.014c.336-.611,.941-.981,1.615-.981s1.279,.37,1.619,.991l5.617,9.995Zm-5.737-.486c0-.828-.672-1.5-1.5-1.5s-1.5,.672-1.5,1.5,.672,1.5,1.5,1.5,1.5-.672,1.5-1.5Zm0-6c0-.829-.672-1.5-1.5-1.5s-1.5,.671-1.5,1.5v2c0,.829,.672,1.5,1.5,1.5s1.5-.671,1.5-1.5v-2ZM6.5,5c-.828,0-1.5,.672-1.5,1.5s.672,1.5,1.5,1.5,1.5-.672,1.5-1.5-.672-1.5-1.5-1.5Zm6.5,1.5c0-.828-.672-1.5-1.5-1.5s-1.5,.672-1.5,1.5,.672,1.5,1.5,1.5,1.5-.672,1.5-1.5Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBrSensorAlert);\nexport default __webpack_public_path__ + \"static/media/br-sensor-alert.d82168aa3ac4327fb1ec7c6b0fc6f012.svg\";\nexport { ForwardRef as ReactComponent };","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\nimport Ref from 'model/Ref';\r\nimport { useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport DatePicker from './DatePicker';\r\nimport DateTimePicker from './DateTimePicker';\r\nimport InputText from './InputText';\r\nimport Modal from './Modal';\r\nimport Select from './Select';\r\nimport TextArea from './TextArea';\r\nimport ToggleSwitch from './ToggleSwitch';\r\n\r\n\r\n\r\nconst FormModalStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    min-width: ${props => props.modalWidth ? `${props.modalWidth}px` : '700px'};\r\n    min-height: ${props => props.modalHeight ? `${props.modalHeight}px` : '660px'};\r\n    \r\n`\r\n\r\nconst FromModalTitleStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n\r\n    & .title-block {\r\n        display: flex;\r\n        margin: 1rem 1.5rem;\r\n    }\r\n    \r\n    /* margin-top: 0.5rem; */\r\n`\r\n\r\nconst FormModalTitleRow = ({ children }) => {\r\n    return (\r\n        <FromModalTitleStyled>\r\n            <div className=\"title-block\">\r\n                {children}\r\n            </div>\r\n        </FromModalTitleStyled>\r\n    )\r\n};\r\n\r\nconst FormAreaStyled = styled.div`\r\n    width: 100%;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    margin-top: 1.5rem;\r\n\r\n    & .form-block {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n\r\n        /* margin: 1rem 1.5rem; */\r\n\r\n        /* width: ${props => props.modalWidth ? `calc(${props.modalWidth}px - 10rem)` : '100%'}; */\r\n        width: ${props => props.formWidth ? props.formWidth : 'auto'};\r\n    }\r\n`\r\n\r\nconst FormArea = ({ children, modalWidth, formWidth }) => {\r\n    // modalWidth={modalWidth}\r\n    return (\r\n        <FormAreaStyled formWidth={formWidth}>\r\n            <div className=\"FormArea form-block\">\r\n                {children}\r\n            </div>\r\n        </FormAreaStyled>\r\n    )\r\n}\r\n\r\nexport const FooterArea = styled.div`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    flex-grow: 1;\r\n    \r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\n\r\nconst FormItemRowStyled = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\n\r\nwidth: 100%;\r\n\r\nmargin-bottom: 1.2rem;\r\nposition: relative;\r\n\r\n    & .item-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        /* justify-content: flex-start;\r\n        align-items: center; */\r\n\r\n        flex-grow: 1;\r\n\r\n        /* & .item-comment {\r\n\r\n        } */\r\n    }\r\n`\r\n\r\nconst ItemCommentStyled = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nwidth: 100%;\r\n`\r\n\r\nconst InputButtonRowStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    height: 2.3rem;\r\n    width: 100%;\r\n    max-width: 400px;\r\n\r\n    position: relative;\r\n\r\n    & .input-text-block {\r\n        display: flex;\r\n        flex-direction: row;\r\n        \r\n        justify-content: flex-start;\r\n        align-items: center;\r\n\r\n        height: 100%;\r\n\r\n        /* flex-grow: 1; */\r\n\r\n        width: ${props => props.textWidth ? props.textWidth : 'auto'};\r\n\r\n        flex-grow: ${props => props.textWidth ? 'auto' : '1'};\r\n    }\r\n\r\n    & .input-button-block { // non-flex\r\n        /* position: absolute;\r\n        top: 3px;\r\n        right: 45px; */\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n    \r\n`\r\n\r\nconst InputButtonRow = ({ formItem = {}, srcKey = 'InputButtonRow' }) => {\r\n    /* formItem: {\r\n        label: t('upperCategory'), // 上級分類\r\n        type: 'inputButton', // 可輸入字串的按鈕\r\n        buttonLabel: t('input'),\r\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\r\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\r\n        filter: new TextLimitFilter(15, 10),\r\n        onButtonClick: control.bindAct('onUpperCategoryButtonClick'),\r\n    } */\r\n\r\n    let initInputText = '';\r\n    if (typeof formItem.inputText === 'string') {\r\n\r\n        initInputText = formItem.inputText;\r\n        if (formItem.filter) {\r\n            // 代表有需要使用filter\r\n            initInputText = formItem.filter.filt(initInputText);\r\n        }\r\n    } else if (formItem.inputText instanceof Ref) {\r\n        initInputText = formItem.inputText.getValue();\r\n    }\r\n\r\n    const [inputText, setInputText] = useState(initInputText);\r\n\r\n    const mutInputText = function (val) {\r\n        if (formItem.filter) {\r\n            val = formItem.filter.filt(val);\r\n        }\r\n        // console.log('mutInputText', val);\r\n        setInputText(val);\r\n    }\r\n\r\n    let actInputText = mutInputText;\r\n    if (formItem.inputText instanceof Ref) {\r\n        actInputText = formItem.inputText.reactive(srcKey, mutInputText);\r\n    }\r\n    const onInputButtonRowClick = () => () => {\r\n        if (formItem.onButtonClick) {\r\n            formItem.onButtonClick();\r\n        }\r\n    }\r\n\r\n    // let lockBlockDom;\r\n    // // console.log('formItem.lock', formItem.lock)\r\n    // if (formItem.lock !== undefined) {\r\n    //     // console.log('lockBlockDom', formItem.lock)\r\n    //     lockBlockDom = (<LockBlock lock={formItem.lock} srcKey={srcKey}></LockBlock>)\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <InputButtonRowStyled textWidth={formItem.textWidth}>\r\n            <div className=\"input-text-block\">\r\n                {inputText}\r\n            </div>\r\n            <div className=\"input-button-block\">\r\n                <Button type=\"fill\" pattern=\"formModal\" onClick={onInputButtonRowClick()}>{formItem.buttonLabel || ''}</Button>\r\n            </div>\r\n            {/* {lockBlockDom} */}\r\n        </InputButtonRowStyled>\r\n    );\r\n}\r\n\r\n// const LockBlockStyled = styled.div`\r\n// position: absolute;\r\n// left: 0;\r\n// top: 0;\r\n// width: 100%;\r\n// height: 50px;\r\n\r\n// background-color: #00000040;\r\n// `\r\n\r\n\r\n// const LockBlock = ({ lock: lockItem, srcKey, children }) => {\r\n//     // console.log('lockItem', lockItem)\r\n\r\n//     // lock---------------------------------------\r\n\r\n//     let initLock = false;\r\n//     if (typeof lockItem === 'boolean') {\r\n//         initLock = lockItem;\r\n//     } else if (lockItem instanceof Ref) {\r\n//         initLock = lockItem.getValue();\r\n//     }\r\n//     const [lock, setLock] = useState(initLock);\r\n\r\n//     const mutLock = function (val) {\r\n//         console.log('mutLock', val);\r\n//         setLock(val)\r\n//     }\r\n\r\n//     let actLock = mutLock;\r\n//     if (lockItem instanceof Ref) {\r\n//         console.log(`bind lock reactive`)\r\n//         actLock = lockItem.reactive(srcKey, actLock);\r\n//     }\r\n\r\n//     if (!lock) {\r\n//         return (\r\n//             <div></div>\r\n//         );\r\n//         // <button onClick={() => actLock(!lock)}>Lock</button>\r\n//     }\r\n\r\n//     return (\r\n//         <LockBlockStyled>\r\n//         </LockBlockStyled>\r\n//     )\r\n// }\r\n\r\nconst TextRow = ({ formItem, srcKey = 'TextRow' }) => {\r\n\r\n    // 支援使用Ref\r\n    const value = formItem.value;\r\n    const isRefMode = value instanceof Ref;\r\n\r\n    const convertValue = function (value) {\r\n        let initInputText = '';\r\n        if (typeof value === 'string') {\r\n            initInputText = value;\r\n        } else if (isRefMode) {\r\n            initInputText = value.getValue();\r\n        }\r\n        return initInputText;\r\n    }\r\n    const [nowValue, setNowValue] = useState(convertValue(value));\r\n\r\n    const mutText = function (val) {\r\n        if (formItem.filter) {\r\n            val = formItem.filter.filt(val);\r\n        }\r\n        setNowValue(val);\r\n    }\r\n    let actText = mutText;\r\n    if (isRefMode) { // 綁定value\r\n        actText = value.reactive(srcKey, actText);\r\n    }\r\n\r\n    return (\r\n        <div>{nowValue}</div>\r\n    )\r\n}\r\n\r\nconst TextAreaRow = ({ formItem, srcKey = 'TextAreaRow' }) => {\r\n\r\n    const height = formItem.height || '100px';\r\n\r\n    return (\r\n        <TextArea width={formItem.width} height={height} value={formItem.value}\r\n            onUpdate={formItem.onUpdate} srcKey={srcKey}></TextArea>\r\n    )\r\n}\r\n\r\nconst InputTextRow = ({ formItem, srcKey = 'InputTextRow' }) => {\r\n    /* formItem: {\r\n        label: t('tagCategoryZh'), // 標籤分類(中)\r\n        type: 'inputText',\r\n        value: model.fetchRef('tagCategoryZh', `CreateTagCategoryModal_tagCategoryZh`),\r\n    } */\r\n\r\n    if (formItem.value instanceof Ref) {\r\n        return (\r\n            <InputText value={formItem.value}\r\n                type={formItem.inputType} max={formItem.max} min={formItem.min}\r\n                placeholder={formItem.placeholder}></InputText>\r\n        )\r\n    }\r\n    // value是一般字串，純展示\r\n    const [value, setValue] = useState(formItem.value);\r\n\r\n    return (\r\n        <InputText value={value} onUpdate={setValue}\r\n            type={formItem.inputType}></InputText>\r\n    )\r\n}\r\n\r\nconst SelectRow = ({ formItem, srcKey }) => {\r\n    /* formItem: {\r\n        label: t('tagCreateMethod'), // 標籤建立方式\r\n        type: 'select',\r\n        optionList: CreateMethodEnum.getOptionList(t),\r\n        value: model.fetchRef('tagCreateMethod', `CreateTagCategoryModal_tagCreateMethod`),\r\n    } */\r\n\r\n    let initValue = '';\r\n    if (typeof formItem.value === 'string') {\r\n        initValue = formItem.value;\r\n    } else if (formItem.value instanceof Ref) {\r\n        initValue = formItem.value.getValue();\r\n    }\r\n    const [value, setValue] = useState(initValue);\r\n\r\n    const mutSelectValue = function (val) {\r\n        // 目前沒用到filter\r\n        // if (formItem.filter) {\r\n        //     val = formItem.filter.filt(val);\r\n        // }\r\n        // console.log('mutInputText', val);\r\n        setValue(val);\r\n    }\r\n\r\n    let actSelectValue = mutSelectValue;\r\n    if (formItem.value instanceof Ref) {\r\n        actSelectValue = formItem.value.reactive(srcKey, actSelectValue);\r\n    }\r\n\r\n    return (\r\n        <Select value={value} optionList={formItem.optionList} onUpdate={actSelectValue}\r\n            loading={formItem.loading} srcKey={srcKey} placeholder={formItem.placeholder}\r\n        ></Select>\r\n    )\r\n}\r\n\r\nconst ItemLabelStyled = styled.div`\r\n    /* & .item-label { */\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: center;\r\n\r\n/* min-width: 10rem; */\r\n/* flex-grow: 1;\r\nmax-width: 10rem; */\r\n`\r\n\r\n\r\nconst ItemLabel = ({ label, srcKey = 'ItemLabel', importStyle }) => {\r\n    const isRefMode = label instanceof Ref;\r\n\r\n    const convertLabel = function () {\r\n        if (isRefMode) {\r\n            return label.getValue();\r\n        } else {\r\n            return label || ''\r\n        }\r\n    }\r\n\r\n    const [nowLabel, setLabel] = useState(convertLabel(label));\r\n\r\n    if (isRefMode) { // 使用Ref: 單向綁定輸出\r\n        label.reactive(`${srcKey}_ItemLabel`, setLabel);\r\n    }\r\n    return (\r\n        <ItemLabelStyled style={importStyle}>\r\n            {nowLabel}\r\n        </ItemLabelStyled>\r\n    )\r\n}\r\n\r\n\r\nconst LabelToggleSwitchStyled = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nheight: 2.3rem;\r\n\r\n    & .boolean-label {\r\n        height: inherit;\r\n        display: flex;\r\n        \r\n        align-items: center;\r\n\r\n        padding: 0 1.5rem;\r\n    }\r\n\r\n`\r\n\r\nconst ToggleSwitchRow = ({ formItem, srcKey }) => {\r\n\r\n\r\n    if (formItem.trueLabel || formItem.falseLabel) {\r\n        return (\r\n            <LabelToggleSwitchStyled>\r\n                <div className=\"boolean-label\">{formItem.falseLabel}</div>\r\n                <ToggleSwitch value={formItem.value} srcKey={srcKey}\r\n                ></ToggleSwitch>\r\n                <div className=\"boolean-label\">{formItem.trueLabel}</div>\r\n            </LabelToggleSwitchStyled>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ToggleSwitch value={formItem.value} srcKey={srcKey}\r\n        ></ToggleSwitch>\r\n    )\r\n}\r\n\r\nconst DateTimePickerRow = ({ formItem, srcKey }) => {\r\n    // formItem.value\r\n\r\n    const onDateUpdate = () => val => {\r\n        console.log('onDateUpdate', val.toISOString())\r\n\r\n        // formItem.value\r\n    }\r\n\r\n    // 寫到這裡，要重寫DateTimePicker\r\n\r\n    return (\r\n        <div>\r\n            <DateTimePicker value={formItem.value} srcKey={srcKey}\r\n                onChange={onDateUpdate()}></DateTimePicker>\r\n        </div>\r\n    )\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <DatePicker placeholder=\"開始日期\" onUpdate={onDateUpdate()}></DatePicker>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nconst FormItemRow = ({ formItem, srcKey, itemLabelWidth = '10rem' }) => {\r\n\r\n    let itemContentDom;\r\n\r\n    if (formItem.type === 'inputText') {\r\n        itemContentDom = (\r\n            <InputTextRow formItem={formItem} srcKey={srcKey}></InputTextRow>\r\n        );\r\n    } else if (formItem.type === 'text') {\r\n        itemContentDom = (\r\n            <TextRow formItem={formItem} srcKey={srcKey}></TextRow>\r\n        );\r\n    } else if (formItem.type === 'textArea') {\r\n        itemContentDom = (\r\n            <TextAreaRow formItem={formItem} srcKey={srcKey}></TextAreaRow>\r\n        );\r\n    } else if (formItem.type === 'select') {\r\n        itemContentDom = (\r\n            <SelectRow formItem={formItem} srcKey={srcKey}></SelectRow>\r\n        )\r\n        /*  {\r\n            label: customDataT('srcSystem'), // 來源系統\r\n            type: 'select',\r\n            // 因為optionList的載入會有時間差，因此要丟Ref下去\r\n            optionList: fc.fetchModel('customData').fetchRef('srcSystemOptionList', 'CustomDataPage'),\r\n            loading: fc.fetchModel('customData').fetchRef('srcSystemOptionListLoading', 'CustomDataPage'),\r\n        } */\r\n    } else if (formItem.type === 'toggleSwitch') {\r\n        itemContentDom = (\r\n            <ToggleSwitchRow formItem={formItem} srcKey={srcKey}></ToggleSwitchRow>\r\n        )\r\n    } else if (formItem.type === 'inputButton') {\r\n        itemContentDom = (\r\n            <InputButtonRow formItem={formItem} srcKey={srcKey} />\r\n        );\r\n        /* {\r\n            label: t('upperCategory'), // 上級分類\r\n            type: 'inputButton', // 可輸入字串的按鈕\r\n            buttonLabel: t('input'),\r\n            inputText: '',\r\n        } */\r\n    } else if (formItem.type === 'dateTimePicker') {\r\n        itemContentDom = (\r\n            <DateTimePickerRow formItem={formItem} srcKey={srcKey} />\r\n        );\r\n    } else if (formItem.type === 'slot') {\r\n        itemContentDom = formItem.slot;\r\n    }\r\n\r\n    let itemCommentDom;\r\n\r\n    if (formItem.comment) {\r\n        itemCommentDom = (\r\n            <ItemCommentStyled>{formItem.comment}</ItemCommentStyled>\r\n        )\r\n    }\r\n\r\n\r\n    // hide---------------------------------------\r\n\r\n    let initHide = false;\r\n    if (typeof formItem.hide === 'boolean') {\r\n        initHide = formItem.hide;\r\n    } else if (formItem.hide instanceof Ref) {\r\n        initHide = formItem.hide.getValue();\r\n    }\r\n    const [hide, setHide] = useState(initHide);\r\n\r\n    let actHide = setHide;\r\n    if (formItem.hide instanceof Ref) {\r\n        // console.log(`regist srcKey ${srcKey} setter`);\r\n        actHide = formItem.hide.reactive(srcKey, actHide);\r\n    }\r\n\r\n    if (hide) {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FormItemRowStyled>\r\n            <ItemLabel label={formItem.label} srcKey={srcKey}\r\n                importStyle={{\r\n                    minWidth: itemLabelWidth,\r\n                }}></ItemLabel>\r\n            {/* <div className=\"item-label\">\r\n                {formItem.label}\r\n            </div> */}\r\n            <div className=\"item-container\">\r\n                {itemContentDom}\r\n                {itemCommentDom}\r\n            </div>\r\n        </FormItemRowStyled>\r\n    )\r\n\r\n    // return (\r\n    //     <FormItemRowStyled>\r\n    //         <div className=\"item-label\">\r\n    //             {formItem.label}\r\n    //         </div>\r\n    //         <div className=\"item-container\">\r\n    //             {itemContentDom}\r\n    //             {itemCommentDom}\r\n    //             {`${srcKey}`}\r\n    //             {`${hide}`}\r\n    //         </div>\r\n    //     </FormItemRowStyled>\r\n    // )\r\n}\r\n\r\nconst FormExpandArea = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\n`\r\n\r\nconst FormAside = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n\r\n`\r\n\r\nexport default function FormModal({ modalRef, modalWidth = 700, modalHeight = 660,\r\n    title = '', formItemList = [], footerSlot, srcKey = 'FormModal', formWidth,\r\n    asideSlot, itemLabelWidth }) {\r\n\r\n\r\n    const formItemListDom = formItemList.map((formItem, index) => {\r\n        /* formItem: {\r\n            label: 'aaaaa',\r\n        } */\r\n        return (\r\n            <FormItemRow formItem={formItem}\r\n                key={`FormItemRow_${index}`} srcKey={`${srcKey}_FormItemRow_${index}`}\r\n                itemLabelWidth={itemLabelWidth} />\r\n        )\r\n    });\r\n\r\n    const formAsidDom = asideSlot ? (\r\n        <FormAside>\r\n            {asideSlot}\r\n        </FormAside>\r\n    ) : undefined;\r\n\r\n    return (\r\n        <Modal childRef={modalRef}\r\n            modalWidth={modalWidth} modalHeight={modalHeight} >\r\n            <FormModalStyled modalWidth={modalWidth} modalHeight={modalHeight}>\r\n                <FormModalTitleRow>\r\n                    {title}\r\n                </FormModalTitleRow>\r\n                <FormExpandArea className=\"FormExpandArea\">\r\n                    <FormArea modalWidth={modalWidth} formWidth={formWidth}>\r\n                        {formItemListDom}\r\n                    </FormArea>\r\n                    {formAsidDom}\r\n                </FormExpandArea>\r\n                {footerSlot}\r\n                {/* {children} */}\r\n                {/* <FooterArea>\r\n                    \r\n                </FooterArea> */}\r\n            </FormModalStyled>\r\n        </Modal>\r\n    );\r\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function AddTagModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: '標籤key', // t('tagCategoryZh'),\n        type: 'inputText',\n        value: model.fetchRef('name', `AddTagModal`),\n        // }, {\n        //     label: '標籤標題',\n        //     type: 'inputText',\n        //     value: model.fetchRef('groupName', `AddTagModal`),\n    }, {\n        label: '標籤標題',\n        type: 'inputText',\n        value: model.fetchRef('description', `AddTagModal`),\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addTagModalRef', 'AddApiModal_ref')}\n            title=\"新增標籤\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddTagModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddTag')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddTag')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function AddApiModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n\n\n    // \"fileName\": \"qore-plus-api\",\n    // \"apiRoute\": \"/api/friend\",\n    // \"apiType\": \"get\",\n    // \"tags\": [\"friend\"],\n    // \"summary\": \"1-1.list friend\"\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: 'API名稱',\n        type: 'inputText',\n        value: model.fetchRef('summary', `AddApiModal`),\n    }, {\n        label: 'API路由',\n        type: 'inputText',\n        value: model.fetchRef('apiRoute', `AddApiModal`),\n    }, {\n        label: '類別',\n        type: 'select',\n        // value: model.fetchRef('apiType', `AddApiModal`),\n        optionList: model.fetchRef('apiTypeOptionList', `AddApiModal`),\n        value: model.fetchRef('apiType', `AddApiModal`),\n        // loading: model.fetchRef('schemaFieldOptionListLoading', `AddApiModal`),\n        // placeholder: t('plsSelectField'),\n        // hide: importSchemaLockRef,\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addApiModalRef', 'AddTagModal_ref')}\n            title=\"新增API\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddApi')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddApi')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nimport { ReactComponent as SensorAlertSvg } from 'assets/svg/br-sensor-alert.svg'\nimport Button from 'component/Button';\nimport TextArea from 'component/TextArea';\nimport { useEffect, useState } from 'react';\n\nconst AsideJsonInputStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & .aside-title-row {\n        display: flex;\n        flex-direction: row;\n\n        & .aside-title {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 0.5rem;\n            margin-right: 0.5rem;\n        }\n        & .icon {\n            width: 18px;\n            height: 18px;\n\n            transform: translateY(3px);\n        }\n    }\n\n    padding-right: 1rem;\n`\n\nexport default function BodyModalJsonAside({ model, control, onGqlOutput, bodyType }) {\n    // bodyType=\"requestBody\" , \"responseBody\"\n\n    const [debounceTimeout, setDebounceTimeout] = useState(null);\n    const [jsonValid, setJsonValid] = useState(false);\n\n    const [sensorAlertShow, setSensorAlertShow] = useState(false);\n    const [converBtnShow, setConverBtnShow] = useState(false);\n\n    useEffect(function () {\n        setSensorAlertShow(!jsonValid);\n        setConverBtnShow(jsonValid);\n    }, [jsonValid]);\n\n    const [json, setJson] = useState(model.getState('gqlJsonSrc'));\n    const actJson = model.reactive('gqlJsonSrc', 'AddBodyModal_sensor', setJson);\n\n    const debounce = function (callback) { // 防抖\n        clearTimeout(debounceTimeout); // 每次都清掉舊的timeout\n        setDebounceTimeout(null);\n\n        // 再創建一個新的timeout，就能確保第一次呼叫後的interval時間內，不會再次呼叫該函式\n        setDebounceTimeout(setTimeout(callback, 1500));\n    }\n\n    useEffect(function () {\n        // control.onGqlJsonSrcUpdate(json);\n\n        // setSensorAlertShow();\n\n        // console.log('json sensor')\n\n        debounce(function () {\n\n            // console.log('parse json');\n\n            let jsonObj;\n            let jsonValid = false;\n            try {\n                jsonObj = JSON.parse(json)\n                jsonValid = true;\n            } catch (e) {\n                // 代表json parse失敗\n                jsonValid = false;\n            }\n\n            // console.log('jsonValid', jsonValid)\n\n            setJsonValid(jsonValid);\n        });\n    }, [json]);\n\n    const handleConvertJson = () => () => {\n        console.log('handleConvertJson');\n        // control.onGqlJsonSrcUpdate(json); // 舊版的\n        if (onGqlOutput) {\n            onGqlOutput(control.onGqlJsonSrcUpdate(json, bodyType));\n        }\n    }\n\n    return (\n        <AsideJsonInputStyled>\n            <div className=\"aside-title-row\">\n                <div className=\"aside-title\">\n                    JSON\n                </div>\n                <SensorAlertSvg style={{\n                    display: sensorAlertShow ? 'block' : 'none',\n                }} className=\"icon\" fill=\"#ec564e\" />\n                <Button type=\"fill\" show={converBtnShow} pattern=\"small\"\n                    importStyle={{\n                        marginTop: '0px', marginRight: '0px',\n                        marginBottom: '0px', marginLeft: '0', paddingH: '0.25rem',\n                        height: '26px', fixHeight: '26px'\n                    }}\n                    onClick={handleConvertJson()}>\n                    Add TypeDef\n                </Button>\n            </div>\n            <TextArea width=\"300px\" height=\"300px\" value={model.fetchRef('gqlJsonSrc', 'AddBodyModal')}\n                srcKey=\"AddBodyModal\"></TextArea>\n            {/* onUpdate={control.bindAct('onGqlJsonSrcUpdate')} */}\n        </AsideJsonInputStyled>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport TextArea from 'component/TextArea';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BodyModalJsonAside from './BodyModalJsonAside';\n\n// import { ReactComponent as SensorAlertSvg } from 'assets/svg/br-sensor-alert.svg'\n\n// const AsideJsonInputStyled = styled.div`\n//     display: flex;\n//     flex-direction: column;\n\n//     & .aside-title-row {\n//         display: flex;\n//         flex-direction: row;\n\n//         & .aside-title {\n//             display: flex;\n//             justify-content: flex-start;\n//             margin-bottom: 0.5rem;\n//             margin-right: 0.5rem;\n//         }\n//         & .icon {\n//             width: 18px;\n//             height: 18px;\n\n//             transform: translateY(3px);\n//         }\n//     }\n\n//     padding-right: 1rem;\n// `\n\nexport default function AddBodyModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: 'rootType',\n        type: 'inputText',\n        value: model.fetchRef('rootType', `AddBodyModal`),\n    }, {\n        label: 'schema',\n        type: 'textArea',\n        width: '445px',\n        height: '250px',\n        // value: schema,\n        // onUpdate: updateSchema,\n        value: model.fetchRef('schema', 'AddBodyModal'),\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    // const [debounceTimeout, setDebounceTimeout] = useState(null);\n    // const [jsonValid, setJsonValid] = useState(false);\n\n    // const [sensorAlertShow, setSensorAlertShow] = useState(false);\n    // const [converBtnShow, setConverBtnShow] = useState(false);\n\n    // useEffect(function () {\n    //     setSensorAlertShow(!jsonValid);\n    //     setConverBtnShow(jsonValid);\n    // }, [jsonValid]);\n\n    // const [json, setJson] = useState(model.getState('gqlJsonSrc'));\n    // const actJson = model.reactive('gqlJsonSrc', 'AddBodyModal_sensor', setJson);\n\n    // const debounce = function (callback) { // 防抖\n    //     clearTimeout(debounceTimeout); // 每次都清掉舊的timeout\n    //     setDebounceTimeout(null);\n\n    //     // 再創建一個新的timeout，就能確保第一次呼叫後的interval時間內，不會再次呼叫該函式\n    //     setDebounceTimeout(setTimeout(callback, 1500));\n    // }\n\n\n    // useEffect(function () {\n    //     // control.onGqlJsonSrcUpdate(json);\n\n    //     // setSensorAlertShow();\n\n    //     console.log('json sensor')\n\n    //     debounce(function () {\n\n    //         console.log('parse json');\n\n    //         let jsonObj;\n    //         let jsonValid = false;\n    //         try {\n    //             jsonObj = JSON.parse(json)\n    //             jsonValid = true;\n    //         } catch (e) {\n    //             // 代表json parse失敗\n    //             jsonValid = false;\n    //         }\n\n    //         console.log('jsonValid', jsonValid)\n\n    //         setJsonValid(jsonValid);\n    //     });\n    // }, [json]);\n\n    // const handleConvertJson = () => () => {\n    //     control.onGqlJsonSrcUpdate(json);\n    // }\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addBodyModalRef', 'AddTagModal_ref')}\n            title=\"新增Body\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={900}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddBody')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddBody')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n            asideSlot={\n                <BodyModalJsonAside model={model} control={control} onGqlOutput={control.bindAct('onAddGqlToAddBody')} bodyType=\"requestBody\"/>\n            }\n            // asideSlot={\n            //     <AsideJsonInputStyled>\n            //         <div className=\"aside-title-row\">\n            //             <div className=\"aside-title\">\n            //                 JSON\n            //             </div>\n            //             <SensorAlertSvg style={{\n            //                 display: sensorAlertShow ? 'block' : 'none',\n            //             }} className=\"icon\" fill=\"#ec564e\" />\n            //             {/* #a1a1a1 */}\n            //             <Button type=\"fill\" show={converBtnShow} pattern=\"small\"\n            //                 importStyle={{\n            //                     marginTop: '0px', marginRight: '0px',\n            //                     marginBottom: '0px', marginLeft: '0', paddingH: '0.25rem',\n            //                     height: '26px', fixHeight: '26px'\n            //                 }}\n            //                 onClick={handleConvertJson()}>\n            //                 Add TypeDef\n            //             </Button>\n            //         </div>\n            //         <TextArea width=\"300px\" height=\"300px\" value={model.fetchRef('gqlJsonSrc', 'AddBodyModal')}\n            //             srcKey=\"AddBodyModal\"></TextArea>\n            //         {/* onUpdate={control.bindAct('onGqlJsonSrcUpdate')} */}\n            //     </AsideJsonInputStyled>\n            // }\n            itemLabelWidth=\"6rem\"\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function EditTagModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n\n\n    // \"fileName\": \"qore-plus-api\",\n    // \"apiRoute\": \"/api/friend\",\n    // \"apiType\": \"get\",\n    // \"tags\": [\"friend\"],\n    // \"summary\": \"1-1.list friend\"\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: '標籤名稱',\n        type: 'inputText',\n        value: model.fetchRef('summary', `EditTagModal`),\n        // }, {\n        //     label: 'schema',\n        //     type: 'textArea',\n        //     value: model.fetchRef('schema', 'AddBodyModal'),\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('editTagModalRef', 'EditTagModal_ref')}\n            title=\"修改標籤名稱\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelEditTag')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmEditTag')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\nimport BodyModalJsonAside from './BodyModalJsonAside';\n\n\nexport default function AddResponseModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n    // \"fileName\": \"qore-plus-api\",\n    // \"apiRoute\": \"/api/friend\",\n    // \"apiType\": \"get\",\n    // \"tags\": [\"friend\"],\n    // \"summary\": \"1-1.list friend\"\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: 'rootType',\n        type: 'inputText',\n        value: model.fetchRef('rootType', `AddResponseModal`),\n    }, {\n        label: 'schema',\n        type: 'textArea',\n        width: '335px',\n        height: '250px',\n        // value: schema,\n        // onUpdate: updateSchema,\n        value: model.fetchRef('schema', 'AddResponseModal'),\n    }, {\n        label: '回傳類型',\n        type: 'select',\n        // value: model.fetchRef('apiType', `AddApiModal`),\n        optionList: model.fetchRef('resTypeOptionList', `AddResponseModal`),\n        value: model.fetchRef('resType', `AddResponseModal`),\n    }, {\n        label: 'description',\n        type: 'inputText',\n        value: model.fetchRef('description', `AddResponseModal`),\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addResModalRef', 'EditTagModal_ref')}\n            title=\"加入Response\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={500}\n            srcKey=\"AddResModal\"\n            formWidth=\"450px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddRes')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddRes')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n            asideSlot={\n                <BodyModalJsonAside model={model} control={control} onGqlOutput={control.bindAct('onAddGqlToAddRes')} bodyType=\"responseBody\"/>\n            }\n            itemLabelWidth=\"6rem\"\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function EditAttrModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n    // \"fileName\": \"qore-plus-api\",\n    // \"apiRoute\": \"/api/friend\",\n    // \"apiType\": \"get\",\n    // \"tags\": [\"friend\"],\n    // \"summary\": \"1-1.list friend\"\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: '欄位key',\n        type: 'inputText',\n        value: model.fetchRef('newAttrName', `EditAttrModal`),\n    }, {\n        label: '預設值',\n        type: 'inputText',\n        value: model.fetchRef('defaultValue', `EditAttrModal`),\n    }, {\n        label: '數值型態',\n        type: 'select',\n        optionList: model.fetchRef('valueTypeOptionList', `EditAttrModal`),\n        value: model.fetchRef('valueType', `EditAttrModal`),\n    }, {\n        label: '描述',\n        type: 'inputText',\n        value: model.fetchRef('description', `EditAttrModal`),\n    }, {\n        label: '必填',\n        type: 'select',\n        optionList: model.fetchRef('requiredOptionList', `EditAttrModal`),\n        value: model.fetchRef('required', `EditAttrModal`),\n        // }, {\n        //     label: 'schema',\n        //     type: 'textArea',\n        //     value: model.fetchRef('schema', 'AddBodyModal'),\n        /*\n    }, {\n        label: t('tagCategoryEn'), // 標籤分類(英)\n        type: 'inputText',\n        value: model.fetchRef('tagCategoryEn', `CreateTagCategoryModal_tagCategoryEn`),\n    }, {\n        label: t('tagCreateMethod'), // 標籤建立方式\n        type: 'select',\n        optionList: CreateMethodEnum.getOptionList(t),\n        value: tagCreateMethodRef,\n        comment: t('tagCreateMethodComment'),\n    }, {\n        label: t('importSchema'), // 匯入資料表\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('importSchema', `CreateTagCategoryModal_importSchema`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onImportSchemaModalOpen'),\n        hide: importSchemaLockRef,\n        placeholder: t('plsSelectSchema'),\n        comment: t('importSchemaComment'),\n    }, {\n        label: t('schemaField'), // 資料表欄位\n        type: 'select',\n        optionList: model.fetchRef('schemaFieldOptionList', `CreateTagCategoryModal_schemaFieldOptionList`),\n        value: model.fetchRef('schemaField', `CreateTagCategoryModal_schemaField`),\n        loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        placeholder: t('plsSelectField'),\n        hide: importSchemaLockRef,\n    }, {\n        label: t('applyRange'), // 適用範圍\n        type: 'slot',\n        slot: (\n            <ApplyRange control={control} model={model}></ApplyRange>\n        ),\n    }, {\n        label: t('updateFrequency'), // 更新頻率\n        type: 'slot',\n        slot: (\n            <UpdateFrequency control={control} model={model}></UpdateFrequency>\n        ),\n    }, {\n        label: t('tagDecisionCondition'), // 標籤判斷條件\n        type: 'inputButton',\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('tagDecisionCondition', `CreateTagCategoryModal`),\n        // filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onTagDecisionConditionOpen'),\n        // hide: importSchemaLockRef,\n        // placeholder: t('plsSelectSchema'),\n        comment: t('tagDecisionConditionComment'),*/\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('editAttrModalRef', 'EditAttrModal_ref')}\n            title=\"修改欄位\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelEditAttr')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmEditAttr')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal';\nimport ParameterTypeEnum from 'enum/apiConnect/ParameterType';\nimport SwaggerPropertyTypeEnum from 'enum/apiConnect/SwaggerPropertyType';\nimport { useTranslation } from 'react-i18next';\n\nexport default function AddQueryModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{\n        label: '資料型態', // type\n        type: 'select',\n        optionList: SwaggerPropertyTypeEnum.getOptionList('urlQuery'),\n        value: model.fetchRef('type', `AddQueryModal`),\n        // comment: t('tagCreateMethodComment'),\n    }, {\n        label: '參數key', // name\n        type: 'inputText',\n        value: model.fetchRef('name', `AddQueryModal`),\n    }, {\n        label: '參數位置', // in\n        type: 'select',\n        optionList: ParameterTypeEnum.getOptionList('urlQuery'),\n        value: model.fetchRef('in', `AddQueryModal`),\n    }, {\n        label: '預設值', // default\n        type: 'inputText',\n        value: model.fetchRef('default', `AddQueryModal`),\n    }, {\n        label: '描述', // description\n        type: 'inputText',\n        value: model.fetchRef('description', `AddQueryModal`),\n    }, {\n        label: 'enum', // enum\n        type: 'inputText',\n        value: model.fetchRef('enum', `AddQueryModal`),\n        placeholder: 'key01,key02',\n    }];\n\n\n    /*\n    \"type\": \"string\",\n    \"name\": \"email\",\n    \"in\": \"query\",\n    \"default\": \"aaa@bbb.ccc\",\n    \"description\": \"用戶帳號\"\n\n    \"type\": \"string\",\n    \"format\": \"date\",\n    \"name\": \"endDate\",\n    \"in\": \"query\"\n\n    \"type\": \"string\",\n    \"name\": \"orderBy\",\n    \"in\": \"query\",\n    \"default\": \"asc\",\n    \"enum\": [\n      \"asc\",\n      \"desc\"\n    ],\n    \"description\": \"排序\"\n    */\n\n\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addQueryModalRef', 'EditTagModal_ref')}\n            title=\"新增URL Query參數\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddQueryModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddQuery')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddQuery')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function AddSecurityModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{\n        label: '安全欄位key',\n        type: 'inputText',\n        value: model.fetchRef('securityKey', `AddSecurityModal`),\n    }, {\n        label: '資料欄位key',\n        type: 'inputText',\n        value: model.fetchRef('key', `AddSecurityModal`),\n    }, {\n        label: '類型',\n        type: 'select',\n        optionList: model.fetchRef('securityTypeOptionList', `AddSecurityModal`),\n        value: model.fetchRef('type', `AddSecurityModal`),\n        // loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        // placeholder: t('plsSelectField'),\n        // hide: importSchemaLockRef,\n    }, {\n        label: '欄位位置',\n        type: 'select',\n        optionList: model.fetchRef('securityInOptionList', `AddSecurityModal`),\n        // `AddSecurityModal_typeOptionList`\n        value: model.fetchRef('in', `AddSecurityModal`),\n    }, {\n        label: '描述',\n        type: 'inputText',\n        value: model.fetchRef('description', `AddSecurityModal`),\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addSecurityRef', 'AddSecurityModal_ref')}\n            title=\"增加安全設定\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddSecurity')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddSecurity')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","export default class AttrSrc {\n    static reqBody = 'reqBody';\n    static resBody(status) {\n        return `resBody.${status}`;\n    }\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgForm(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    height: 512,\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m16 .3a4.968 4.968 0 0 1 1.879 1.164l1.656 1.658a4.954 4.954 0 0 1 1.165 1.878h-4.7zm-2 11.7h-4a1 1 0 0 0 0 2h4a1 1 0 0 0 0-2zm2-5a2 2 0 0 1 -2-2v-5h-6a5.006 5.006 0 0 0 -5 5v14a5.006 5.006 0 0 0 5 5h8a5.006 5.006 0 0 0 5-5v-12zm0 13h-8a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2zm-2-4h-4a3 3 0 0 1 0-6h4a3 3 0 0 1 0 6z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgForm);\nexport default __webpack_public_path__ + \"static/media/form.f2de6e0b6ade1cece023f1108f2d1528.svg\";\nexport { ForwardRef as ReactComponent };","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\nimport { ReactComponent as FormSvg } from \"assets/svg/form.svg\"\n\nconst IconStyled = styled.div`\n`\n\nexport default function DocxSave({ apiManageModel, docxControl }) {\n\n    return (\n        <Button type=\"fill\" pattern=\"small\" importStyle={{ marginTop: '0', marginBottom: '0' }}\n            onClick={docxControl.bindAct('onClickSave')}>\n            <FormSvg className=\"icon\" fill=\"#4c5e5a\" />\n        </Button>\n    );\n}","import Control from \"control/Control\";\r\nimport ApiConnectModel from \"fragment/ApiConnect\";\r\nimport ApiManageModel from \"fragment/ApiManage\";\r\n\r\nimport FileSaver from 'file-saver';\r\n\r\n// 前端不生成docx\r\n\r\nexport default class DocxControl extends Control {\r\n    frame() {\r\n        return {\r\n            apiManage: ApiManageModel.name,\r\n            apiDoc: ApiConnectModel.name,\r\n        }\r\n    }\r\n\r\n    err = null;\r\n\r\n    handleErr(err) {\r\n        this.err = err;\r\n        console.error(err);\r\n        return Promise.resolve();\r\n    }\r\n    checkErr() {\r\n        return this.err !== null;\r\n    }\r\n\r\n    async onClickSave() {\r\n        // console.log('onClickSave')\r\n\r\n        const apiDocModel = this.fetchModel('apiDoc');\r\n        const docJson = apiDocModel.getState('docJson');\r\n\r\n        // console.log('docJson', docJson)\r\n        // docJson.tags\r\n\r\n\r\n        // const blob = await this.generateDocSample().catch(this.handleErr);\r\n        // const blob = await this.generateTableSample().catch(this.handleErr);\r\n        // if (this.checkErr()) return;\r\n\r\n        // const fileName = this.fetchModel('apiManage').getState('fileName');\r\n        // await this.saveFile(blob, `${fileName}.docx`).catch(this.handleErr);\r\n        // if (this.checkErr()) return;\r\n    }\r\n\r\n    generateTableSample() {\r\n\r\n        // const table = new Table({\r\n        //     rows: [\r\n        //         new TableRow({\r\n        //             children: [\r\n        //                 new TableCell({\r\n        //                     children: [new Paragraph(\"hello\")],\r\n        //                 }),\r\n        //             ],\r\n        //         }),\r\n        //     ],\r\n        // });\r\n\r\n        // const doc = new Document({\r\n        //     sections: [{\r\n        //         children: [table],\r\n        //     }],\r\n        // });\r\n\r\n        // const doc = new Document({\r\n        //     title: \"Title\",\r\n        //     externalStyles: styles,\r\n        //     sections: [\r\n        //         {\r\n        //             children: [\r\n        //                 new Paragraph({\r\n        //                     text: \"Cool Heading Text\",\r\n        //                     heading: HeadingLevel.HEADING_1,\r\n        //                 }),\r\n        //                 new Paragraph({\r\n        //                     text: 'This is a custom named style from the template \"MyFancyStyle\"',\r\n        //                     style: \"MyFancyStyle\",\r\n        //                 }),\r\n        //                 new Paragraph(\"Some normal text\"),\r\n        //                 new Paragraph({\r\n        //                     text: \"MyFancyStyle again\",\r\n        //                     style: \"MyFancyStyle\",\r\n        //                 }),\r\n        //             ],\r\n        //         },\r\n        //     ],\r\n        // });\r\n\r\n        /*\r\n\r\n        const table3 = new Table({\r\n            width: {\r\n                size: '4535pt',\r\n                type: WidthType.DXA,\r\n            },\r\n            rows: [\r\n                new TableRow({\r\n                    children: [\r\n                        new TableCell({\r\n                            children: [new Paragraph(\"Hello\")],\r\n                        }),\r\n                        new TableCell({\r\n                            children: [],\r\n                        }),\r\n                    ],\r\n                }),\r\n                new TableRow({\r\n                    children: [\r\n                        new TableCell({\r\n                            children: [],\r\n                        }),\r\n                        new TableCell({\r\n                            children: [new Paragraph(\"World\")],\r\n                        }),\r\n                    ],\r\n                }),\r\n            ],\r\n        });\r\n\r\n        const doc = new Document({\r\n            sections: [\r\n                {\r\n                    children: [\r\n                        new Paragraph({ text: \"Table with skewed widths\" }),\r\n                        table3,\r\n                    ],\r\n                },\r\n            ],\r\n        });\r\n        */\r\n\r\n        // console.log('doc', doc)\r\n\r\n        // return Packer.toBlob(doc); // <Promise>\r\n    }\r\n\r\n    // 範例\r\n    generateDocSample() {\r\n        // // console.log('docx Document', Document)\r\n        // const doc = new Document({\r\n        //     sections: [\r\n        //         {\r\n        //             properties: {},\r\n        //             children: [\r\n        //                 new Paragraph({\r\n        //                     children: [\r\n        //                         new TextRun(\"Hello World\"),\r\n        //                         new TextRun({\r\n        //                             text: \"Thomas Wang\",\r\n        //                             bold: true\r\n        //                         }),\r\n        //                         new TextRun({\r\n        //                             text: \"\\tGitLab is better\",\r\n        //                             bold: true\r\n        //                         })\r\n        //                     ]\r\n        //                 })\r\n        //             ]\r\n        //         }\r\n        //     ]\r\n        // });\r\n\r\n        // return Packer.toBlob(doc); // <Promise>\r\n        // .then((blob) => {\r\n        //     // console.log(blob);\r\n        //     FileSaver.saveAs(blob, \"example.docx\");\r\n        //     console.log(\"Document created successfully\");\r\n        // });\r\n    }\r\n\r\n    saveFile(blob, fileFullName) {\r\n        FileSaver.saveAs(blob, fileFullName);\r\n        console.log(`saveFile: Document ${fileFullName} has been saved!`);\r\n\r\n        return Promise.resolve();\r\n        // https://www.npmjs.com/package/file-saver\r\n\r\n        // 文字檔\r\n        // var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n        // FileSaver.saveAs(blob, \"hello world.txt\");\r\n\r\n        // 儲存canvas快照\r\n        // var canvas = document.getElementById(\"my-canvas\");\r\n        // canvas.toBlob(function(blob) {\r\n        //     saveAs(blob, \"pretty image.png\");\r\n        // });\r\n    }\r\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function AddApiDocModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{\n        label: 'API文件key',\n        type: 'inputText',\n        value: model.fetchRef('fileName', `AddApiDocModal`),\n    }, {\n        label: '檔案格式',\n        type: 'select',\n        optionList: model.fetchRef('docTypeOptionList', `AddApiDocModal`),\n        value: model.fetchRef('docType', `AddApiDocModal`),\n    }, {\n        label: '文件標題',\n        type: 'inputText',\n        value: model.fetchRef('title', `AddApiDocModal`),\n    }, {\n        label: 'host/url',\n        type: 'inputText',\n        value: model.fetchRef('host', `AddApiDocModal`),\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addApiDocModalRef', 'EditTagModal_ref')}\n            title=\"新增API文件\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddApiDoc')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddApiDoc')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","import Control from \"control/Control\";\nimport ApiJsonModel from \"fragment/ApiJson\";\nimport ApiManageModel from \"fragment/ApiManage\";\n\nexport class ApiJsonControl extends Control {\n\n    // searchKeywordFunc = null;\n    frame() {\n        return {\n            apiJson: ApiJsonModel.name,\n            apiManage: ApiManageModel.name,\n        }\n    }\n    getViewMode() {\n        return this.fetchModel('apiManage').getState('viewMode');\n    }\n    onAsideLinkClick(tagGroupData, apiData) {\n        // console.log('onClickApiLink', tagGroupData, apiData)\n\n        /* apiData: {\n            apiData: {..}\n            apiType: \"post\",\n            path: \"/api/editTag\"\n        } */\n        // apiData.path\n\n        const searchKeywordFunc = this.fetchModel('apiJson').getState('searchKeywordFunc');\n        searchKeywordFunc(`\\\"${apiData.path}\\\"`, 1, -1);\n    }\n\n    receiveSearchKeyword(searchKeywordFunc) {\n        // this.searchKeywordFunc = searchKeywordFunc;\n        this.fetchModel('apiJson').setState('searchKeywordFunc', searchKeywordFunc);\n    }\n\n\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function ApiSettingModal({ control, apiManageModel, model }) {\n    // model: <ApiSettingModel>\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{\n        label: 'API路由',\n        // type: 'text',\n        // value: model.fetchRef('apiRoute', `ApiSettingModal`),\n        type: 'inputText',\n        value: model.fetchRef('apiRouteVar', `ApiSettingModal`),\n    }, {\n        label: 'API類型',\n        // type: 'text',\n        // value: model.fetchRef('apiType', `ApiSettingModal`),\n        type: 'inputText',\n        value: model.fetchRef('apiTypeVar', `ApiSettingModal`),\n    }, {\n        label: 'API名稱',\n        type: 'inputText',\n        value: model.fetchRef('summary', `ApiSettingModal`),\n    }, {\n        label: '安全欄位key',\n        type: 'select',\n        optionList: model.fetchRef('securityKeyOptionList', `ApiSettingModal`),\n        value: model.fetchRef('securityKey', `ApiSettingModal`),\n        // loading: model.fetchRef('schemaFieldOptionListLoading', `CreateTagCategoryModal_schemaFieldOptionListLoading`),\n        // placeholder: t('plsSelectField'),\n        // hide: importSchemaLockRef,\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('apiSettingModalRef', 'ApiSettingModal_ref')}\n            title=\"API設定\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelApiSetting')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onSaveApiSetting')}>{t('save')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport Select from 'component/Select';\nimport TextArea from 'component/TextArea';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BodyModalJsonAside from './BodyModalJsonAside';\n// import { format as formatJSON } from \"json-string-formatter\";\n\nconst AsideJsonInputStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & .aside-title-row {\n        display: flex;\n        flex-direction: row;\n\n        & .aside-title {\n            display: flex;\n            justify-content: flex-start;\n            margin-bottom: 0.5rem;\n            margin-right: 0.5rem;\n        }\n        & .icon {\n            width: 18px;\n            height: 18px;\n\n            transform: translateY(3px);\n        }\n    }\n\n    & .aside-select-row {\n        display: flex;\n        flex-direction: row;\n\n        margin-bottom: 1.5rem;\n    }\n\n    padding-right: 1rem;\n`\n\nexport default function AddExampleModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n    let formItemList = [{\n        label: 'API路由',\n        type: 'text',\n        // value: model.getState('apiRoute'),\n        value: model.fetchRef('apiRoute', `AddExampleModal`),\n    }, {\n        label: 'API類型',\n        type: 'text',\n        // value: model.getState('apiType'),\n        value: model.fetchRef('apiType', `AddExampleModal`),\n    }, {\n        label: 'name',\n        type: 'inputText',\n        value: model.fetchRef('name', `AddExampleModal`),\n    }, {\n        label: 'schema',\n        type: 'textArea',\n        width: '445px',\n        height: '250px',\n        // value: schema,\n        // onUpdate: updateSchema,\n        value: model.fetchRef('schema', 'AddExampleModal'),\n    }];\n\n    // const AsideComp = (\n    //     <AsideJsonInputStyled>\n    //         <div className=\"aside-title-row\">\n    //             <div className=\"aside-title\">\n    //                 JSON\n    //             </div>\n    //             {/* <SensorAlertSvg style={{\n    //                 display: sensorAlertShow ? 'block' : 'none',\n    //             }} className=\"icon\" fill=\"#ec564e\" />\n    //             <Button type=\"fill\" show={converBtnShow} pattern=\"small\"\n    //                 importStyle={{\n    //                     marginTop: '0px', marginRight: '0px',\n    //                     marginBottom: '0px', marginLeft: '0', paddingH: '0.25rem',\n    //                     height: '26px', fixHeight: '26px'\n    //                 }}\n    //                 onClick={handleConvertJson()}>\n    //                 Add TypeDef\n    //             </Button> */}\n    //         </div>\n    //         {/* <TextArea width=\"300px\" height=\"300px\" value=\"uuuuuuuuuu\"\n    //             srcKey=\"AddBodyModal\"></TextArea> */}\n    //         {/* model.fetchRef('gqlJsonSrc', 'AddBodyModal') */}\n    //     </AsideJsonInputStyled>\n    // )\n\n    // const [exampleKey, setExampleKey] = useState('');\n    // const [exampleOptionList, setExampleOptionList] = useState([]);\n\n    // const actExampleChange = function (val) {\n    //     console.log('actExampleChange', val)\n    //     // setExampleKey(val);\n    // }\n\n    // const [exampleJson, setExampleJson] = useState('');\n\n    // const actExampleJson = model.reactive('exampleSchemaJson', 'adfaeaefefawef', function (jsonStr) {\n    //     const fJson = formatJSON(jsonStr);\n    //     console.log('fJson', fJson)\n    //     setExampleJson(jsonStr);\n    // });\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addExampleModalRef', 'AddExampleModal_ref')}\n            title=\"新增example\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={900}\n            srcKey=\"AddExampleModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddExample')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddExample')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n            asideSlot={\n                <AsideJsonInputStyled>\n                    <div className=\"aside-title-row\">\n                        <div className=\"aside-title\">\n                            範例\n                        </div>\n                    </div>\n                    <div className=\"aside-select-row\">\n                        <Select\n                            value={model.fetchRef('exampleShowKey', `AddExampleModal`)}\n                            optionList={model.fetchRef('exampleOptionList', `AddExampleModal`)}\n                            srcKey=\"AddExampleShowSelect\"\n                            onUpdate={control.bindAct('onChangeShowExample')}></Select>\n                    </div>\n                    <div>\n                        {/* {exampleJson} */}\n                        <TextArea width=\"300px\" height=\"300px\" value={model.fetchRef('exampleSchemaJson', 'AddExampleModal')}\n                            srcKey=\"AddExampleModal\" disabled={true}></TextArea>\n                    </div>\n                </AsideJsonInputStyled>\n            }\n            itemLabelWidth=\"6rem\"\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from '@emotion/react'\n\nimport { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport Button from 'component/Button';\nimport FormModal, { FooterArea } from 'component/FormModal'\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function AddAttrModal({ control, apiManageModel, model }) {\n\n    const { t } = useTranslation('apiConnect', { keyPrefix: 'apiManage' })\n\n\n    // \"fileName\": \"qore-plus-api\",\n    // \"apiRoute\": \"/api/friend\",\n    // \"apiType\": \"get\",\n    // \"tags\": [\"friend\"],\n    // \"summary\": \"1-1.list friend\"\n\n    let formItemList = [{/*\n        label: t('upperCategory'), // 上級分類\n        type: 'inputButton', // 可輸入字串的按鈕\n        buttonLabel: t('input'),\n        inputText: model.fetchRef('upperCategory', `CreateTagCategoryModal_upperCategory`),\n        // inputText: '中文中文中文中文中文中文中文中文中文中文中文中文',\n        filter: new TextLimitFilter(15, 10),\n        onButtonClick: control.bindAct('onUpperCategoryModalOpen'),\n        textWidth: '210px',\n    }, {*/\n        label: '加入位置',\n        type: 'text',\n        value: model.fetchRef('addPositionDescription', `AddAttrModal`),\n    }, {\n        label: '欄位key',\n        type: 'inputText',\n        value: model.fetchRef('add_name', `AddAttrModal`),\n    }, {\n        label: '預設值',\n        type: 'inputText',\n        value: model.fetchRef('add_defaultValue', `EditAttrModal`),\n    }, {\n        label: '數值型態',\n        type: 'select',\n        optionList: model.fetchRef('valueTypeOptionList', `EditAttrModal`),\n        value: model.fetchRef('add_valueType', `EditAttrModal`),\n    }, {\n        label: '描述',\n        type: 'inputText',\n        value: model.fetchRef('add_description', `EditAttrModal`),\n    }, {\n        label: '必填',\n        type: 'select',\n        optionList: model.fetchRef('requiredOptionList', `EditAttrModal`),\n        value: model.fetchRef('add_required', `EditAttrModal`),\n        // }, {\n        //     label: 'schema',\n        //     type: 'textArea',\n        //     value: model.fetchRef('schema', 'AddBodyModal'),\n    }];\n\n    return (\n        <FormModal modalRef={apiManageModel.reactive('addAttrModalRef', 'AddAttrModal_ref')}\n            title=\"新增欄位(在下方)\" formItemList={formItemList}\n            modalHeight={620}\n            modalWidth={800}\n            srcKey=\"AddApiModal\"\n            formWidth=\"580px\"\n            footerSlot={\n                <FooterArea>\n                    <Button type=\"fill\" onClick={control.bindAct('onCancelAddAttr')}>{t('cancel')}</Button>\n                    <div style={{ width: '5rem' }}></div>\n                    <Button type=\"fill\" onClick={control.bindAct('onConfirmAddAttr')}>{t('confirm')}</Button>\n                </FooterArea>\n            }\n        ></FormModal>\n    )\n}","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from '@emotion/react'\r\n\r\nimport { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport LayoutMixin from 'util/LayoutMixin'\r\n\r\nimport ThemeMixin, { fetchTheme } from 'util/ThemeMixin'\r\nimport { apiDoc as apiDocThemeObject } from 'theme/reas'\r\n\r\nimport { PageTitle } from \"module/layout\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { useUrlQuery } from \"util/UrlQuery\";\r\n// import StateModel from 'model/StateModel';\r\nimport ApiConnectModel, { ApiComposition } from 'fragment/ApiConnect';\r\nimport FetchControl from 'control/FetchControl';\r\nimport Select from 'component/Select'\r\nimport SelectControl from 'control/SelectControl'\r\n\r\nimport { ReactComponent as AngleDownSvg } from 'assets/svg/sr-angle-down.svg'\r\nimport { ReactComponent as AngleUpSvg } from 'assets/svg/sr-angle-up.svg'\r\nimport { ReactComponent as TrashSvg } from \"assets/svg/br-trash.svg\"\r\nimport { ReactComponent as MinusSvg } from \"assets/svg/br-minus.svg\"\r\nimport { ReactComponent as PlusSvg } from \"assets/svg/br-plus.svg\"\r\nimport { ReactComponent as StarSvg } from \"assets/svg/star-sign.svg\"\r\nimport { ReactComponent as FolderDownloadSvg } from \"assets/svg/folder-download.svg\"\r\nimport { ReactComponent as FolderUploadSvg } from \"assets/svg/folder-upload.svg\"\r\nimport { ReactComponent as BrowserSvg } from \"assets/svg/br-browser.svg\"\r\nimport { ReactComponent as SquareRootSvg } from \"assets/svg/sr-square-root.svg\"\r\nimport { ReactComponent as GearSvg } from \"assets/svg/gear.svg\"\r\nimport { ReactComponent as BookmarkSvg } from \"assets/svg/book-bookmark.svg\"\r\n\r\nimport Button from 'component/Button'\r\nimport { ApiManageControl } from 'flow/apiManage'\r\n\r\nimport AddTagModal from 'element/ApiConnect/AddTagModal'\r\nimport AddApiModal from 'element/ApiConnect/AddApiModal'\r\nimport AddBodyModal from 'element/ApiConnect/AddBodyModal'\r\nimport EditApiModal from 'element/ApiConnect/EditTagModal'\r\n\r\nimport ApiManageModel, { AddApiDocModel, AddApiModel, AddBodyModel, AddQueryModel, AddResModel, AddTagModel, EditAttrModel, EditTagModel, AddSecurityModel, ApiSettingModel, AddExampleModel, AddAttrModel, RemoveAttrModel } from 'fragment/ApiManage'\r\n\r\nimport { ReactComponent as DocumentSvg } from 'assets/svg/document.svg'\r\nimport AddResponseModal from 'element/ApiConnect/AddResponseModal'\r\nimport EditAttrModal from 'element/ApiConnect/EditAttrModal'\r\nimport AddQueryModal from 'element/ApiConnect/AddQueryModal'\r\n\r\nimport AddSecurityModal from 'element/ApiConnect/AddSecurityModal'\r\n\r\nimport AttrSrc from 'enum/apiConnect/AttrSrc'\r\nimport DocxSave from 'element/ApiConnect/DocxSave'\r\nimport DocxControl from 'flow/docxControl'\r\nimport AddApiDocModal from 'element/ApiConnect/AddApiDocModal'\r\nimport LocalAccessor from 'localAccessor'\r\n\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport TextArea from 'component/TextArea'\r\nimport { ApiJsonControl } from 'flow/apiJsonControl'\r\nimport ApiJsonModel from 'fragment/ApiJson'\r\nimport ApiSettingModal from 'element/ApiConnect/ApiSettingModal'\r\nimport AddExampleModal from 'element/ApiConnect/AddExample'\r\nimport AddAttrModal from 'element/ApiConnect/AddAttrModal'\r\n\r\nconst apiDocTheme = new ThemeMixin(apiDocThemeObject);\r\n\r\nconst PRINT_LOG = true;\r\n\r\nconst quickPanelWidth = '320px';\r\nconst quickPanelRight = '35px';\r\n\r\n\r\nconst quickPanelHiddenMaxWidth = '1280px';\r\n\r\n\r\n\r\nconst TagBlockBoardStyled = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n/* margin-top: 1.5rem; */\r\nmargin-left: 1.5rem;\r\nmargin-right: 1.5rem;\r\nmargin-bottom: 1.5rem;\r\n\r\n// width: calc(100% - 8rem)\r\n/* width: ${() => LayoutMixin.getPageBoardWidth()}; */\r\n/* 'calc(100% - 4rem)' */\r\n\r\nbackground-color: ${fetchTheme('board', '#cba165')};\r\nborder-radius: ${fetchTheme('boardRadius', '5px')};\r\n\r\npadding-bottom: 1.5rem;\r\n\r\n\r\n    & .plus-icon {\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n\r\n    & .trash-icon {\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n    \r\n    & .tag-block-title-row {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n\r\n        font-size: 1.8rem;\r\n\r\n        margin: 0.75rem 1.75rem 0 1.75rem;\r\n\r\n        color: ${fetchTheme('groupTitle', '#1c7575')};\r\n\r\n        & .tag-block-title-left {\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n\r\n\r\n        }\r\n    }\r\n    /* & .tag-block-title-hr{\r\n\r\n    } */\r\n\r\n    & .tag-title-hr {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n\r\n        margin-top: 0.5rem;\r\n        & .hr-line {\r\n            width: 95%;\r\n            border-bottom: 1px solid #a7a7a7;\r\n        }\r\n    }\r\n\r\n    & .row {\r\n        margin: 0.65rem 1.75rem 0 1.75rem;\r\n    }\r\n    & .attr-row {\r\n        margin: 0 1.75rem 0 1.75rem;\r\n    }\r\n    /* & .h2-row {\r\n        margin: 0.65rem 1.75rem 0 1.75rem;\r\n    } */\r\n\r\n\r\n    & .row.api-title-row {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        \r\n        font-size: 1.18rem;\r\n        color: ${fetchTheme('apiTitle', '#1c7575')};\r\n\r\n        cursor: default;\r\n    }\r\n\r\n    & .row.api-path-row {\r\n        & .api-path-block {\r\n            /* margin: 0.5rem; */\r\n            background-color: ${fetchTheme('apiPathBlock', '#a7a7a7')};\r\n            border-radius: 5px;\r\n\r\n            padding: 0.35rem 0.5rem;\r\n\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: flex-start;\r\n            align-items: center;\r\n\r\n            color: ${fetchTheme('apiPath', '1f4b4b')};\r\n\r\n            cursor: pointer;\r\n\r\n            & .api-type-container {\r\n\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: flex-start;\r\n                align-items: center;\r\n\r\n                width: 5.6rem;\r\n\r\n                & .api-type {\r\n                    padding: 0.25rem 0rem;\r\n                    /* background-color: ${fetchTheme('apiTypeBlock', '#e8e8e8')}; */\r\n                    background-color: #e8e8e8; // 預設的顏色，不會顯示\r\n\r\n                    border-radius: 5px;\r\n\r\n                    /* margin-right: 0.85rem; */\r\n                    font-size: 1.09rem;\r\n\r\n                    width: 5rem;\r\n                    display: flex;\r\n                    justify-content: center;\r\n\r\n                    &.get {\r\n                        color: ${fetchTheme('apiTypeGet', '#3c3c3c')};\r\n                        background-color: ${fetchTheme('apiTypeBlockGet', '#e8e8e8')};\r\n                    }\r\n                    &.put {\r\n                        color: ${fetchTheme('apiTypePut', '#3c3c3c')};\r\n                        background-color: ${fetchTheme('apiTypeBlockPut', '#e8e8e8')};\r\n                    }\r\n                    &.post {\r\n                        color: ${fetchTheme('apiTypePost', '#3c3c3c')};\r\n                        background-color: ${fetchTheme('apiTypeBlockPost', '#e8e8e8')};\r\n                    }\r\n                    &.delete {\r\n                        color: ${fetchTheme('apiTypeDelete', '#3c3c3c')};\r\n                        background-color: ${fetchTheme('apiTypeBlockDelete', '#e8e8e8')};\r\n                    }\r\n                    &.patch {\r\n                        color: ${fetchTheme('apiTypePatch', '#3c3c3c')};\r\n                        background-color: ${fetchTheme('apiTypeBlockPatch', '#e8e8e8')};\r\n                    }\r\n                }\r\n            }\r\n\r\n            & .api-path {\r\n                font-size: 1.15rem;\r\n            }\r\n        }\r\n\r\n        /* cursor: pointer; */\r\n    }\r\n\r\n    & .row.api-description-row {\r\n        margin-left: 2.3rem;\r\n\r\n        /* color: #636363; */\r\n        color: ${fetchTheme('apiDescription', '#636363')};\r\n    }\r\n\r\n    & .request-title-row {\r\n        margin-top: 0.5rem;\r\n        margin-bottom: 0.5rem;\r\n        \r\n        padding-left: 0.75rem;\r\n\r\n        /* padding: 0.25rem 1.5rem; */\r\n\r\n        font-size: 1.25rem;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        justify-content: space-between;\r\n        & .title-block {\r\n            display: flex;\r\n            flex-direction: row;\r\n            & .title {\r\n                cursor: auto;\r\n\r\n                font-weight: 500;\r\n\r\n                color: ${fetchTheme('requestTitle', '#9f9f9f')};\r\n            }\r\n        }\r\n\r\n        & .content-type-block {\r\n            display: flex;\r\n            flex-direction: row;\r\n\r\n            font-size: 0.9rem;\r\n            & .title {\r\n                display: flex;\r\n                flex-direction: row;\r\n                align-items: center;\r\n\r\n                margin-right: 2rem;\r\n\r\n                color: ${fetchTheme('requestTitle', '#9f9f9f')};\r\n            }\r\n            & .content-type {\r\n                display: flex;\r\n                flex-direction: row;\r\n                align-items: center;\r\n\r\n                background-color: ${fetchTheme('contentTypeBlock', '#a7a7a7')};\r\n                border-radius: 5px;\r\n\r\n                padding: 0.25rem 1.5rem;\r\n\r\n                color: ${fetchTheme('contentType', '#a7a7a7')};\r\n            }\r\n        }\r\n    }\r\n\r\n    & .param-title-row {\r\n        /* margin-top: 0.5rem; */\r\n        /* background-color: #a7a7a7; */\r\n        color: ${fetchTheme('paramFormTitle', '#a7a7a7')};\r\n        background-color: ${fetchTheme('paramFormTitleBlock', '#a7a7a7')};\r\n\r\n        padding: 0.25rem 1.5rem;\r\n\r\n        font-size: 1.25rem;\r\n        font-weight: 500;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        & .title {\r\n            /* cursor: auto; */\r\n        }\r\n\r\n        cursor: pointer;\r\n    }\r\n\r\n    & .api-attribute-row {\r\n        background-color: ${fetchTheme('attributeRow', '#d3d3d3')};\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        & .parameter-row {\r\n            display: flex;\r\n            flex-direction: row;\r\n\r\n            border-bottom: 1px solid ${fetchTheme('attributeRowHr', '#9b9b9b')};\r\n\r\n            color: ${fetchTheme('attributeText', '#5f5f5f')};\r\n\r\n            height: 48px;\r\n\r\n            &.sub-parameter{\r\n                cursor: pointer;\r\n            }\r\n\r\n            &.tail {\r\n                border-bottom: none;\r\n            }\r\n\r\n            & .parameter-title-col {\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: flex-start;\r\n                align-items: center;\r\n\r\n                /* width: 10rem; 會切到*號 */\r\n                min-width: 10rem;\r\n                word-wrap: 'break-word';\r\n\r\n                & .title {\r\n                    margin: 0rem 0rem 0 1.5rem;\r\n                    font-size: 1.1rem;\r\n                    cursor: auto;\r\n                }\r\n\r\n                & .layer-icon-block {\r\n\r\n                    margin-left: 12px;\r\n                    & .layer-icon {\r\n                        width: 12px;\r\n                        height: 12px;\r\n                    }\r\n                }\r\n                \r\n                & .object-title {\r\n                    margin: 0.65rem 0.65rem 0.65rem 12px;\r\n                    font-size: 1.1rem;\r\n                    cursor: auto;\r\n                }\r\n                /* & .required {\r\n                    display: flex;\r\n\r\n                    margin: 0 1rem 0 1.5rem;\r\n                    font-size: 0.9rem;\r\n                    color: ${fetchTheme('attributeReuired', '#5f5f5f')};\r\n                    \r\n                    cursor: auto;\r\n                } */\r\n                & .required-icon {\r\n                    width: 12px;\r\n                    height: 12px;\r\n\r\n                    margin-left: 0.05rem;\r\n                    transform: translateY(-6px);\r\n                }\r\n            }\r\n\r\n            & .parameter-attribute-col {\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                height: inherit;\r\n\r\n                align-items: center;\r\n\r\n                margin-left: 15px;\r\n\r\n                flex-grow: 1;\r\n\r\n                & .attribute-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n\r\n                    /* flex-grow: 1; */\r\n\r\n                    transform: translateY(-1px);\r\n\r\n                    /* margin: 0.5rem 1.5rem; */\r\n\r\n                    & .attr-type {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: flex-start;\r\n\r\n                        /* margin-right: 1.5rem; */\r\n\r\n                        width: 6rem;\r\n                        & .text {\r\n                            cursor: auto;\r\n                        }\r\n                    }\r\n\r\n                    & .attr-default {\r\n                        background-color: ${fetchTheme('attributeQuoteBlock', '#9f9f9f')};\r\n                        color: ${fetchTheme('attributeQuote', '#9f9f9f')};\r\n\r\n                        padding: 0.15rem 1.2rem;\r\n                        border-radius: 3px;\r\n\r\n                        line-height: 1.5rem;\r\n\r\n                        max-width: 6.5rem;\r\n                        max-height: 1.5rem;\r\n                        overflow: hidden;\r\n                        & .text {\r\n                            cursor: auto;\r\n                        }\r\n\r\n                        &.input-select {\r\n                            padding: 0.15rem 3rem 0.15rem 1.2rem;\r\n                            cursor: pointer;\r\n\r\n                            position: relative;\r\n\r\n                            & .arrow-icon {\r\n                                width: 18px;\r\n                                height: 18px;\r\n\r\n                                position: absolute;\r\n                                top: 7px;\r\n                                right: 7px;\r\n\r\n                                &.angle-up {\r\n                                    top: 5px;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                & .description-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n\r\n                    margin-left: 1.5rem;\r\n                }\r\n                & .attribute-control-row {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n\r\n                    margin-left: 1.5rem;\r\n                    margin-right: 0.5rem;\r\n\r\n                    flex-grow: 1;\r\n\r\n                    justify-content: space-between;\r\n\r\n                    & .attribute-control-left {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                    }\r\n                    & .attribute-control-right {\r\n                        display: flex;\r\n                        flex-direction: row;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n`\r\n\r\nconst AttributeDefaultBlock = ({ attributeData }) => {\r\n\r\n    // const [valueState, setValueState] = useState('');\r\n    let valueState = '';\r\n    const getDefault = () => {\r\n        // { attributeData.default !== undefined ? `${attributeData.default}` : '' }\r\n\r\n        if (attributeData.default === undefined) {\r\n            return '';\r\n        }\r\n        if (attributeData.type === 'string') {\r\n            if (attributeData.default === '') {\r\n                return '';\r\n            }\r\n        }\r\n\r\n        return `${attributeData.default}`;\r\n    }\r\n\r\n    const checkDefaultExist = () => {\r\n\r\n        if (attributeData.default === undefined) {\r\n            return false;\r\n        }\r\n        if (attributeData.type === 'string') {\r\n            if (attributeData.default === '') {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return `${attributeData.default}`;\r\n    }\r\n\r\n    valueState = checkDefaultExist() ? 'default' : '';\r\n\r\n    if (attributeData.enum) {\r\n\r\n        const [enumLabel, setEnumLabel] = useState(getDefault());\r\n\r\n        const enumSelectControl = new SelectControl(useRef({\r\n            selectedLabel: getDefault(),\r\n            dropdownOpen: false,\r\n        }));\r\n        enumSelectControl.getStateModel().registSetter('selectedLabel', 'enumLabel', setEnumLabel);\r\n\r\n        const enumOptionList = attributeData.enum.map((value) => {\r\n            return {\r\n                value,\r\n                label: value,\r\n            };\r\n        });\r\n\r\n        // const onEnumSelectUpdate = () => val => {\r\n        //     // enumSelectControl.bindAct('onSelectChanged')\r\n        //     console.log(`onEnumSelectUpdate`, val)\r\n        // }\r\n        // onUpdate={onEnumSelectUpdate()}\r\n\r\n        //     let arrowIcon;\r\n        // if (dropdownOpen) {\r\n        //     arrowIcon = <AngleUpSvg className=\"arrow-icon\" fill={selectTheme.getTheme('arrowIcon', '#a1a1a1')} />\r\n        // } else {\r\n        //     arrowIcon = <AngleDownSvg className=\"arrow-icon\" fill={selectTheme.getTheme('arrowIcon', '#a1a1a1')} />\r\n        // }\r\n\r\n        const [dropdownOpen, setDropdownOpen] = useState(false);\r\n        // enumSelectControl.getStateModel().registSetter('dropdownOpen', 'enumLabel', setDropdownOpen);\r\n        const actDropdownOpen = enumSelectControl.getStateModel().reactive('dropdownOpen', 'enumLabel', setDropdownOpen)\r\n\r\n        let arrowIcon;\r\n        if (dropdownOpen) {\r\n            arrowIcon = <AngleUpSvg className=\"arrow-icon angle-up\" fill={apiDocTheme.getTheme('inputSelectArrowIcon', '#a1a1a1')} />\r\n        } else {\r\n            arrowIcon = <AngleDownSvg className=\"arrow-icon\" fill={apiDocTheme.getTheme('inputSelectArrowIcon', '#a1a1a1')} />\r\n        }\r\n\r\n        //         useEffect(function () {\r\n        // console.log('cccdropdownOpen', dropdownOpen)\r\n        //         }, [dropdownOpen]);\r\n\r\n        return (\r\n            <Select type=\"slot\" optionList={enumOptionList} control={enumSelectControl}>\r\n                <div className=\"attr-default input-select\" onClick={enumSelectControl.bindAct('actDropdown')}>\r\n                    {enumLabel}\r\n                    {arrowIcon}\r\n                    {/* <AngleUpSvg className=\"arrow-icon\"\r\n                        fill={apiDocTheme.getTheme('inputSelectArrowIcon', '#a1a1a1')} /> */}\r\n                </div>\r\n            </Select>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        (\r\n            <div>\r\n                <div className=\"attr-default\" style={{\r\n                    display: valueState === 'default' ? 'block' : 'none',\r\n                }}>\r\n                    {getDefault()}\r\n                </div>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\n// Object的折疊\r\nconst ApiAttributeObjectRow = ({ fetchControl, type = 'object', apiData, attributeData, isTail, layer, show, attrSrc }) => {\r\n\r\n    let indent = layer - 1;\r\n\r\n    const [subShow, setSubShow] = useState(false);\r\n\r\n    // useEffect(function () {\r\n    //     setSubShow(false);\r\n    // }, [show]);\r\n\r\n    if (!attributeData.attributes) {\r\n        console.error(`attributes not exist`, attributeData);\r\n        return (\r\n            (<div>attributes not exist</div>)\r\n        );\r\n    }\r\n    let subAttributeList = attributeData.attributes;\r\n\r\n    let subAttributeListDom = subAttributeList.map((subAttribute, index) => {\r\n        return (\r\n            (\r\n                <ApiAttributeRow key={`sub_ApiAttributeRow_${index}`}\r\n                    fetchControl={fetchControl}\r\n                    apiData={apiData}\r\n                    attributeData={subAttribute} layer={layer + 1}\r\n                    show={subShow} attrSrc={attrSrc}></ApiAttributeRow>\r\n            )\r\n        )\r\n    });\r\n\r\n    const onSubParameterClick = () => () => {\r\n        if (PRINT_LOG) {\r\n            if (apiData) {\r\n                console.log(`[${apiData.apiType}] ${apiData.path} attributeData`, attributeData)\r\n            } else {\r\n                console.error(`attributeData not have apiData`, attributeData)\r\n            }\r\n        }\r\n        setSubShow(!subShow);\r\n    }\r\n\r\n    const getAttributeType = () => {\r\n\r\n        if (attributeData.type === 'array') {\r\n            if (attributeData.items) {\r\n                if (attributeData.items.type === 'object') {\r\n                    return 'object-array';\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributeData.type || '';\r\n    }\r\n\r\n    let layerIconDom = subShow ?\r\n        (<MinusSvg className=\"layer-icon\" fill=\"#91c8c8\" />) :\r\n        (<PlusSvg className=\"layer-icon\" fill=\"#91c8c8\" />)\r\n\r\n    return (\r\n        <div className={`${indent === 0 ? 'attr-row' : ''} api-attribute-row`} style={{\r\n            display: show ? 'flex' : 'none',\r\n        }}>\r\n            <div className={`parameter-row sub-parameter ${(isTail && !subShow) ? 'tail' : ''}`} onClick={onSubParameterClick()}>\r\n                <div className=\"parameter-title-col\" style={{\r\n                    marginLeft: `${indent * 25}px`,\r\n                }}>\r\n                    <div className=\"layer-icon-block\">\r\n                        {layerIconDom}\r\n                        {/* {`${subShow}`} */}\r\n                        {/* <MinusSvg className=\"layer-icon\" fill=\"#91c8c8\" /> */}\r\n                    </div>\r\n                    <div className=\"object-title\">\r\n                        {attributeData.name || ''}\r\n                    </div>\r\n                </div>\r\n                <div className=\"parameter-attribute-col\">\r\n                    <div className=\"attribute-row\">\r\n                        <div className=\"attr-type\">\r\n                            <div className=\"text\">\r\n                                {getAttributeType()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {subAttributeListDom}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ApiAttributeRow = ({ fetchControl, apiData, attributeData, isTail = false, layer = 1, show = true, attrSrc }) => {\r\n    // apiData.apiData.attributes\r\n\r\n    let indent = layer - 1;\r\n\r\n    if (layer > 5) {\r\n        console.error(`out of max layer 5`);\r\n        return (\r\n            <div>out of max layer 5</div>\r\n        )\r\n    }\r\n\r\n    // console.log('attributeData', attributeData)\r\n\r\n    if (attributeData.type === 'object' ||\r\n        attributeData.type === 'array') {\r\n        // 使用物件模式render，全部參數都直接繼承\r\n        // type={'object'}\r\n        return (\r\n            <ApiAttributeObjectRow apiData={apiData} attributeData={attributeData} isTail={isTail} layer={layer}\r\n                show={show} fetchControl={fetchControl} attrSrc={attrSrc}></ApiAttributeObjectRow>\r\n        );\r\n    }\r\n\r\n\r\n    // 用來取得attributeData\r\n    // const onAttributeClick = () => () => {\r\n    //     console.log('attr src', attrSrc)\r\n    //     // if (PRINT_LOG) {\r\n    //     //     if (apiData) {\r\n    //     //         // console.log(`attributeData`, attributeData);\r\n    //     //         console.log(`[${apiData.apiType}] ${apiData.path} attributeData`, attributeData)\r\n    //     //     } else {\r\n    //     //         console.error(`attributeData not have apiData bbb`, attributeData)\r\n    //     //     }\r\n    //     // }\r\n    // }\r\n\r\n\r\n    let requiredTagDom;\r\n    if (attributeData.attrRequired) {\r\n        requiredTagDom = (\r\n            <StarSvg className=\"required-icon\" fill=\"#91c8c8\" />\r\n        )\r\n    }\r\n\r\n    // attributeData.in === 'query' || attributeData.in === 'path'\r\n    const attrIsNotBody = attributeData.in != null;\r\n\r\n    let addAttrPanelDom = attrIsNotBody ? ( // 'query', 'path'\r\n        <div className=\"attribute-control-right\">\r\n            {/* 刪除欄位 */}\r\n            <Button type=\"icon\"\r\n                importStyle={{ margin: '0 0 0 15px', backgroundColor: apiDocTheme.getTheme('removeAttributeButton', '#a1a1a1') }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickRemoveAttr', apiData, attributeData, attrSrc)}>\r\n                <MinusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n            </Button>\r\n            {/* 新增欄位(在底下) */}\r\n            {/* <Button type=\"icon\"\r\n                importStyle={{ margin: '0 0 0 15px' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickAddAttr', apiData, attributeData, attrSrc)}>\r\n                <PlusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n            </Button> */}\r\n        </div>\r\n    ) : (\r\n        <div className=\"attribute-control-right\">\r\n            {/* 刪除欄位 */}\r\n            <Button type=\"icon\"\r\n                importStyle={{ margin: '0 0 0 15px', backgroundColor: apiDocTheme.getTheme('removeAttributeButton', '#a1a1a1') }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickRemoveAttr', apiData, attributeData, attrSrc)}>\r\n                <MinusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n            </Button>\r\n            {/* 新增欄位(在底下) */}\r\n            <Button type=\"icon\"\r\n                importStyle={{ margin: '0 0 0 15px' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickAddAttr', apiData, attributeData, attrSrc)}>\r\n                <PlusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={`${indent === 0 ? 'attr-row' : ''} api-attribute-row`} style={{\r\n            display: show ? 'flex' : 'none',\r\n        }}>\r\n            {/* onClick={onAttributeClick()} Debug用，用來看attributeData */}\r\n            <div className={`parameter-row ${isTail ? 'tail' : ''}`}>\r\n                <div className=\"parameter-title-col\" style={{\r\n                    marginLeft: `${indent * 25}px`,\r\n                }}>\r\n                    <div className=\"title\">\r\n                        {/* activated */}\r\n                        {attributeData.name || ''}\r\n                    </div>\r\n                    {requiredTagDom}\r\n                    {/* <div className=\"required\">\r\n                        required\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"parameter-attribute-col\">\r\n                    <div className=\"attribute-row\">\r\n                        <div className=\"attr-type\">\r\n                            {/* boolean */}\r\n                            {attributeData.type || ''}\r\n                        </div>\r\n                        <AttributeDefaultBlock attributeData={attributeData}></AttributeDefaultBlock>\r\n                        {/* <div className=\"attr-default\" style={{\r\n                            display: checkDefaultExist() ? 'block' : 'none',\r\n                        }}>\r\n                            {getDefault()}\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"description-row\">\r\n                        {/* 帳號是否已激活 */}\r\n                        {attributeData.description || ''}\r\n                    </div>\r\n                    <div className=\"attribute-control-row\">\r\n                        <div className=\"attribute-control-left\">\r\n                            {/* 編輯 */}\r\n                            <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickEditAttr', apiData, attributeData, attrSrc)}\r\n                                importStyle={{ margin: '0 0 0 15px' }}>\r\n                                <DocumentSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                            </Button>\r\n                        </div>\r\n                        {addAttrPanelDom}\r\n                        {/* <div className=\"attribute-control-right\">\r\n                            刪除欄位\r\n                            <Button type=\"icon\"\r\n                                importStyle={{ margin: '0 0 0 15px', backgroundColor: apiDocTheme.getTheme('removeAttributeButton', '#a1a1a1') }}\r\n                                onClick={fetchControl('apiManage').bindAct('onClickRemoveAttr', apiData, attributeData, attrSrc)}>\r\n                                <MinusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n                            </Button>\r\n                            新增欄位(在底下)\r\n                            <Button type=\"icon\"\r\n                                importStyle={{ margin: '0 0 0 15px' }}\r\n                                onClick={fetchControl('apiManage').bindAct('onClickAddAttr', apiData, attributeData, attrSrc)}>\r\n                                <PlusSvg className=\"icon\" fill=\"#FFFFFF\" style={{ width: '1rem', height: '1rem' }} />\r\n                            </Button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    // return (\r\n    //     <div className=\"attr-row api-attribute-row\">\r\n    //         <div className=\"parameter-row tail\">\r\n    //             <div className=\"parameter-title-col\">\r\n    //                 <div className=\"title\">\r\n    //                     activated\r\n    //                 </div>\r\n    //                 <div className={`required ${true ? 'show' : ''}`}>\r\n    //                     required\r\n    //                 </div>\r\n    //             </div>\r\n    //             <div className=\"parameter-attribute-col\">\r\n    //                 <div className=\"attribute-row\">\r\n    //                     <div className=\"attr-type\">\r\n    //                         boolean\r\n    //                     </div>\r\n    //                     <div className=\"attr-default\">\r\n    //                         {`${true}`}\r\n    //                     </div>\r\n    //                 </div>\r\n    //                 <div className=\"description-row\">\r\n    //                     帳號是否已激活\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n}\r\n\r\n\r\nconst AttributesForm = ({ fetchControl, apiData, title, attributes, show = true, attrSrc }) => {\r\n    // attributes = apiComp.getApiDataField('requestAttributes')\r\n\r\n    // if (title === 'BODY - ATTRIBUTES') {\r\n    //     console.log('attributes', attributes)\r\n    // }\r\n\r\n    // console.log(`AttributesForm attrSrc`, attrSrc)\r\n\r\n    const [collapse, setCollapse] = useState(true);\r\n\r\n    useEffect(function () {\r\n        setCollapse(true);\r\n        // setCollapse(!show);\r\n    }, [show]);\r\n\r\n    let reqAttrListDom = [];\r\n    if (attributes) {\r\n        reqAttrListDom = attributes.map((attributeData, index, arr) => {\r\n            return (\r\n                (\r\n                    <ApiAttributeRow key={`ApiAttributeRow_${index}`}\r\n                        fetchControl={fetchControl}\r\n                        apiData={apiData}\r\n                        attributeData={attributeData} isTail={index === (arr.length - 1)}\r\n                        show={!collapse} attrSrc={attrSrc}></ApiAttributeRow>\r\n                )\r\n            )\r\n        });\r\n    }\r\n\r\n    // ps.最外面那層div是因為組件的關係，才必須多包一層\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"attr-row param-title-row\" style={{\r\n                display: show ? 'flex' : 'none',\r\n            }} onClick={() => setCollapse(!collapse)}>\r\n                <div className=\"title\">\r\n                    {title}\r\n                    {/* {`show: ${show}`} */}\r\n                </div>\r\n            </div>\r\n            {reqAttrListDom}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ApiBlock = ({ fetchControl, apiData, docType }) => {\r\n\r\n    // const fc = new FetchControl(fetchControl);\r\n    // const docType = fc.fetchModel('apiManage').getState('docType');\r\n    const apiComp = new ApiComposition(apiData, docType);\r\n\r\n    // console.log(`[${apiData.apiType}] ${apiData.path} apiData`, apiData)\r\n\r\n    // console.log(`[${apiData.apiType}] ${apiData.path} resAttr`, resAttr);\r\n\r\n    // 用來取得API的資料用的\r\n    // const onClickApiTitle = () => () => {\r\n    //     if (PRINT_LOG) {\r\n    //         console.log(`[${apiData.apiType}] ${apiData.path} apiData`, apiData)\r\n    //     }\r\n    // }\r\n\r\n    const [apiShow, setApiShow] = useState(false);\r\n\r\n    const getApiShowStyle = function (showDisplay = 'block') {\r\n        return {\r\n            display: apiShow ? showDisplay : 'none',\r\n        };\r\n    };\r\n\r\n    const onApiPathClick = () => e => {\r\n        e.stopPropagation();\r\n        setApiShow(!apiShow);\r\n    }\r\n\r\n    // const responses = apiData.responses || {};\r\n    // const responseList = Object.keys(responses).map((statusCode) => {\r\n    //     let resObj = Object.assign({}, apiData.responses[statusCode]);\r\n    //     resObj.status = statusCode; // 要將status代碼塞入，否則物件裡面沒有\r\n\r\n    //     return resObj;\r\n    // });\r\n\r\n\r\n    const statusList = apiComp.getApiDataField('statusList');\r\n\r\n    const resAttrFormListDom = statusList.map((status) => {\r\n        const key = `[${apiData.apiType}]_${apiData.path}_res_${status}`;\r\n        const resAttr = apiComp.getApiDataField('responseAttributes', status);\r\n\r\n        return (\r\n            <AttributesForm title={`BODY - ATTRIBUTES (${status})`} attributes={resAttr}\r\n                apiData={apiData} show={apiShow && apiComp.checkApiDataField('responseAttributes', status)}\r\n                key={key} fetchControl={fetchControl} attrSrc={AttrSrc.resBody(status)}></AttributesForm>\r\n        );\r\n    });\r\n\r\n    return (<div className=\"api-list-col\" id={`${apiData.apiType}_${apiData.path}`}>\r\n        {/* <div className=\"api-layer-display\">\r\n        階層顯示BAR (有空再來做)\r\n        {`3. 社群/3-06. 創建新文章/POST-/forum/sendCreateArticle`}\r\n    </div> */}\r\n        <div className=\"row api-title-row\">\r\n            {/* {`1-2.用ID取得子用戶(API名稱)`} */}\r\n            {/* Debug用 onClick={onClickApiTitle()} */}\r\n            <div>\r\n                {apiComp.getApiDataField('apiTitle')}\r\n            </div>\r\n            {/* API設定 */}\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ height: '1.5rem', paddingH: '0.75rem', marginTop: '0', marginBottom: '0' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickApiSetting', apiData)}>\r\n                <GearSvg className=\"plus-icon\" fill=\"#4c5e5a\" />\r\n            </Button>\r\n        </div>\r\n        <div className=\"row api-path-row\">\r\n            <div className=\"api-path-block\" onClick={onApiPathClick()}>\r\n                <div className=\"api-type-container\">\r\n                    <div className={`api-type ${apiComp.getApiDataField('apiType').toLowerCase()}`}>\r\n                        {apiComp.getApiDataField('apiType').toUpperCase()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"api-path\">\r\n                    {apiComp.getApiDataField('path')}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row api-description-row\" style={getApiShowStyle('block')}>\r\n            {/* {`這個是1-2.API的詳細描述`} */}\r\n            {/* {`${apiData.apiData.description}`} */}\r\n            {apiComp.getApiDataField('apiDescription')}\r\n        </div>\r\n        <div className=\"attr-row request-title-row\" style={getApiShowStyle('flex')}>\r\n            <div className=\"title-block\">\r\n                <div className=\"title\">\r\n                    Request\r\n                </div>\r\n                <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickAddBody', apiData)}\r\n                    importStyle={{ margin: '0 0 0 15px' }}>\r\n                    <DocumentSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                </Button>\r\n                <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickAddQueryParam', apiData)}\r\n                    importStyle={{ margin: '0 0 0 15px' }}>\r\n                    <SquareRootSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                </Button>\r\n                <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickAddExample', apiData, 'reqBody')}\r\n                    importStyle={{ margin: '0 0 0 15px' }}>\r\n                    <BookmarkSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                </Button>\r\n                {/* <Button type=\"fill\" pattern=\"small\" importStyle={{ marginLeft: '15px', marginTop: '0', marginBottom: '0', fixWidth: '65px' }}\r\n                    onClick={fetchControl('apiManage').bindAct('onClickAddBody', apiData)}>\r\n                    <PlusSvg className=\"plus-icon\" fill=\"#0a2f25\" />\r\n                </Button> */}\r\n            </div>\r\n            <div className=\"content-type-block\" style={{\r\n                display: apiComp.checkApiDataField('consumesContentType') ? 'flex' : 'none',\r\n            }}>\r\n                <div className=\"title\">\r\n                    content type\r\n                </div>\r\n                <div className=\"content-type\">\r\n                    {apiComp.getApiDataField('consumesContentType')}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <AttributesForm title=\"HEADER - ATTRIBUTES\" attributes={apiComp.getApiDataField('requestHeaderAttributes')}\r\n            apiData={apiData} show={apiShow && apiComp.checkApiDataField('requestHeaderAttributes')}\r\n            fetchControl={fetchControl}></AttributesForm>\r\n        <AttributesForm title=\"PATH - ATTRIBUTES\" attributes={apiComp.getApiDataField('requestUrlAttributes')}\r\n            apiData={apiData} show={apiShow && apiComp.checkApiDataField('requestUrlAttributes')}\r\n            fetchControl={fetchControl} ></AttributesForm>\r\n        <AttributesForm title=\"Query - ATTRIBUTES\" attributes={apiComp.getApiDataField('requestQueryAttributes')}\r\n            apiData={apiData} show={apiShow && apiComp.checkApiDataField('requestQueryAttributes')}\r\n            fetchControl={fetchControl}></AttributesForm>\r\n        <AttributesForm title=\"BODY - ATTRIBUTES\" attributes={apiComp.getApiDataField('requestAttributes')}\r\n            apiData={apiData} show={apiShow && apiComp.checkApiDataField('requestAttributes')}\r\n            fetchControl={fetchControl} attrSrc={AttrSrc.reqBody}></AttributesForm>\r\n        <div className=\"attr-row request-title-row\" style={getApiShowStyle('flex')}>\r\n            <div className=\"title-block\">\r\n                <div className=\"title\">\r\n                    Response\r\n                </div>\r\n                <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickAddRes', apiData)}\r\n                    importStyle={{ margin: '0 0 0 15px' }}>\r\n                    <DocumentSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                </Button>\r\n                <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickAddExample', apiData, 'resBody')}\r\n                    importStyle={{ margin: '0 0 0 15px' }}>\r\n                    <BookmarkSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                </Button>\r\n            </div>\r\n            <div className=\"content-type-block\" style={{\r\n                display: apiComp.checkApiDataField('producesContentType') ? 'flex' : 'none',\r\n            }}>\r\n                <div className=\"title\">\r\n                    content type\r\n                </div>\r\n                <div className=\"content-type\">\r\n                    {apiComp.getApiDataField('producesContentType')}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* <AttributesForm title=\"BODY - ATTRIBUTES\" attributes={resAttr}\r\n            apiData={apiData} show={apiShow && apiComp.checkApiDataField('responseAttributes')}></AttributesForm> */}\r\n        {resAttrFormListDom}\r\n    </div >);\r\n}\r\n\r\n\r\nconst TagHr = () => {\r\n    return (\r\n        <div className=\"tag-title-hr\">\r\n            <div className=\"hr-line\">\r\n            </div>\r\n        </div >)\r\n}\r\n\r\n\r\nconst TagBlock = ({ tagData, fetchControl, fetchModel, docType }) => {\r\n    /* tagData: {\r\n        // Swagger預設----------------------------\r\n        description: \"Everything about your Pets\"\r\n        externalDocs: {description: 'Find out more', url: 'http://swagger.io'}\r\n        name: \"pet\"\r\n        // 內部系統用----------------------------\r\n    } */\r\n    const apiBlockList = tagData.apiList || [];\r\n\r\n    let apiBlockListDom = [];\r\n    if (apiBlockList.length !== 0) {\r\n        apiBlockListDom = apiBlockList.map((apiBlockData, index) => {\r\n            return (\r\n                <ApiBlock key={`${tagData.name}_ApiBlock_${index}`}\r\n                    apiData={apiBlockData} fetchControl={fetchControl}\r\n                    docType={docType}></ApiBlock>\r\n            )\r\n        });\r\n    }\r\n\r\n    const removeTagButton = fetchModel('apiDoc').pageUnitAuth('removeTagButton') ? (\r\n        <Button type=\"fill\" pattern=\"small\" mode=\"danger\" importStyle={{ marginTop: '0', marginBottom: '0', marginRight: '0' }}\r\n            onClick={fetchControl('apiManage').bindAct('onClickRemoveTag', tagData.name)}>\r\n            <TrashSvg className=\"trash-icon\" fill=\"#e5d6d6\"></TrashSvg>\r\n        </Button>\r\n    ) : null;\r\n\r\n    return (\r\n        <TagBlockBoardStyled theme={apiDocThemeObject} id={`tag_${tagData.name}`} className=\"tag-block-board\">\r\n            <div className=\"tag-block-title-row\">\r\n                <div className=\"tag-block-title-left\">\r\n                    {tagData.description ? `${tagData.description} - ${tagData.name}` : tagData.name}\r\n                    <Button type=\"icon\" onClick={fetchControl('apiManage').bindAct('onClickTagEdit', tagData)}>\r\n                        <DocumentSvg className=\"icon\" fill=\"#FFFFFF\" />\r\n                    </Button>\r\n                </div>\r\n                <div className=\"tag-block-title-right\">\r\n                    {removeTagButton}\r\n                </div>\r\n            </div>\r\n            <TagHr></TagHr>\r\n            {apiBlockListDom}\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ marginLeft: '30px', marginTop: '15px', marginBottom: '0', fixWidth: '65px' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickAddApi', tagData)}>\r\n                <PlusSvg className=\"plus-icon\" fill=\"#0a2f25\" />\r\n            </Button>\r\n        </TagBlockBoardStyled>\r\n    )\r\n}\r\n\r\nconst ApiDocumentStyled = styled.div`\r\ndisplay: flex;\r\n                    flex-direction: column;\r\n\r\n                    flex-grow: 1;\r\n\r\n                    `\r\n\r\nconst ApiDocument = ({ fetchControl, docType }) => { // , jsonPath\r\n\r\n    const fc = new FetchControl(fetchControl);\r\n    const fetchModel = fc.export('fetchModel');\r\n\r\n    // const apiDocModel = new ApiConnectModel(useRef(null), {pageMode: mode });\r\n    // const fc = new FetchControl(fetchControl);\r\n    // fc.setupModel('apiDoc', apiDocModel); // 註冊進fetchControl體系，這樣底下就可以輕鬆存取\r\n    const apiDocModel = fetchModel('apiDoc');\r\n\r\n    // const apiDocModel = new ApiConnectModel(useRef(null), {pageMode: pageMode });\r\n    // fc.setupModel('apiDoc', apiDocModel); // 註冊進fetchControl體系，這樣底下就可以輕鬆存取\r\n\r\n    // useEffect(() => {\r\n    //     // 使用js原生的fetch讀取public底下的json\r\n    //     // fetch(jsonPath)\r\n    //     //     .then(response => {\r\n    //     //         if (!response.ok) {\r\n    //     //             throw new Error(\"HTTP error \" + response.status);\r\n    //     //         }\r\n    //     //         return response.json();\r\n    //     //     })\r\n    //     //     .then(json => {\r\n    //     //         fetchModel('apiDoc').saveApiDoc(json);\r\n    //     //     })\r\n    //     //     .catch(function (error) {\r\n    //     //         console.error(error);\r\n    //     //         // this.dataError = true;\r\n    //     //     })\r\n    //     fetchControl('apiManage').fetchJson(jsonPath);\r\n    // }, [jsonPath]);\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n    apiDocModel.registSetter('tagList', 'ApiDocument', setTagList);\r\n\r\n    const tagBlockListDom = tagList.map((tagData, index) => {\r\n        return (\r\n            <TagBlock key={`TagBlock_${index}`} fetchControl={fetchControl}\r\n                fetchModel={fetchModel} tagData={tagData} docType={docType}></TagBlock>\r\n        );\r\n    });\r\n\r\n    const { t: apiManageT } = useTranslation('apiConnect', { keyPrefix: 'apiManage' });\r\n\r\n    let addTagButton = fetchModel('apiDoc').pageUnitAuth('addTagButton') ?\r\n        (<Button type=\"fill\" onClick={fetchControl('apiManage').bindAct('onClickAddTag')}\r\n            importStyle={{ fixWidth: '120px', paddingH: '12px', marginLeft: '25px' }}>{apiManageT('addTag')}</Button>) : null;\r\n\r\n    return (\r\n        <ApiDocumentStyled>\r\n            {/* <TagBlock></TagBlock> */}\r\n            {tagBlockListDom}\r\n            {addTagButton}\r\n        </ApiDocumentStyled>\r\n    );\r\n}\r\n\r\nconst checkHalfShape = function (summary) {\r\n\r\n    /*\r\n                    str=\"中文;；ａ\"\r\n                    alert(str.match(/[\\u0000-\\u00ff]/g))     //半形\r\n                    alert(str.match(/[\\u4e00-\\u9fa5]/g))     //中文\r\n                    alert(str.match(/[\\uff00-\\uffff]/g))     //全形   */\r\n\r\n    // match會輸出一個陣列，把符合全形、或半形的字塞進每個陣列元素\r\n\r\n    // let isHalfShape = false;\r\n\r\n    const checkLen = 15;\r\n\r\n    // 檢查前15個字元，只要超過5成是半形，就以半形計算字數\r\n    let str = summary.slice(0, checkLen);\r\n\r\n    const matchArr = str.match(/[\\u0020-\\u00ff]/g); //全形 (0020以前是控制字符，不能使用)\r\n\r\n    if (!matchArr) {\r\n        return false; // 代表全都是全形\r\n    }\r\n\r\n    // console.log(`${summary} matchArr: ${matchArr.length} ${(matchArr.length / summary.length).toFixed(2)}`, matchArr.length / summary.length >= 0.5)\r\n\r\n    return matchArr.length / checkLen >= 0.5;\r\n}\r\n\r\n\r\nconst QuickLinkGroup = ({ fetchControl, tagGroupData }) => {\r\n\r\n    // console.log('tagGroupData', tagGroupData)\r\n\r\n    const apiList = tagGroupData.apiList || [];\r\n    // console.log('QuickLinkGroup apiList', apiList)\r\n\r\n    const getApiLinkLabel = function (apiData) {\r\n        const summary = apiData.apiData.summary;\r\n\r\n        if (!summary) {\r\n            return '';\r\n        }\r\n        if (checkHalfShape(summary)) {\r\n\r\n            return summary.slice(0, 36); // 半形限30字元\r\n        }\r\n\r\n        return summary.slice(0, 15); // 全形限15字元\r\n    }\r\n\r\n    let apiLinkListDom = apiList.map((apiData, index) => {\r\n        const apiLinkKey = `apiLink_${index}`;\r\n        if (!apiData.apiData) {\r\n            return (\r\n                <a key={apiLinkKey}\r\n                    style={{ cursor: 'pointer' }}>\r\n                    no summary\r\n                </a>\r\n                // <div key={apiLinkKey}>no summary</div>\r\n            );\r\n        }\r\n        const apiLinkId = `${apiData.apiType}_${apiData.path}`;\r\n\r\n        // 未完成: 之後要想辦法用js加回去，會跟textarea搶focus\r\n        // href={`#${apiLinkId}`}\r\n\r\n        const onAsideLinkClick = fetchControl('apiJson').bindAct('onAsideLinkClick', tagGroupData, apiData);\r\n\r\n        const handleApiLinkClick = () => () => {\r\n            const viewMode = fetchControl('apiJson').getViewMode();\r\n            // console.log('viewMode', viewMode);\r\n            if (viewMode === 'board') {\r\n                const element = document.getElementById(apiLinkId);\r\n                element.scrollIntoView();\r\n            } else if (viewMode === 'json') {\r\n                onAsideLinkClick();\r\n            }\r\n        }\r\n\r\n        return (\r\n            <a key={apiLinkKey} onClick={handleApiLinkClick()}\r\n                style={{ cursor: 'pointer' }}>\r\n                {getApiLinkLabel(apiData)}\r\n            </a>\r\n        )\r\n    });\r\n\r\n    const getApiGroupLabel = function (tagGroupData) {\r\n        return tagGroupData.description ? `${tagGroupData.description} - ${tagGroupData.name}` : tagGroupData.name;\r\n        // return tagGroupData.name;\r\n        // return tagGroupData.groupName || tagGroupData.name;\r\n    }\r\n\r\n    return (\r\n        (\r\n            <div className=\"quick-link-group\">\r\n                <a className=\"group-link\" href={`#tag_${tagGroupData.name}`}>\r\n                    {getApiGroupLabel(tagGroupData)}\r\n                </a>\r\n                {apiLinkListDom}\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\n// 用來騰出右側空間用的\r\nconst QuickPanelAsideSpace = styled.div`\r\n                    display: flex;\r\n                    flex-direction: column;\r\n\r\n                    flex-grow: 0;\r\n\r\n                    margin-right: ${quickPanelRight || '35px'};\r\n\r\n                    width: ${quickPanelWidth};\r\n\r\n                    @media only screen and (max-width: ${quickPanelHiddenMaxWidth}) {\r\n                        display: none;\r\n}\r\n                    `\r\n\r\nconst marginVertical = '1rem';\r\n\r\nconst QuickPanelAsideStyled = styled.div`\r\n\r\n\r\n                    display: flex;\r\n                    flex-direction: column;\r\n\r\n                    flex-grow: 0;\r\n\r\n/* margin-right: ${quickPanelRight || '35px'}; */\r\n\r\n                    background-color: ${fetchTheme('board', '#cba165')};\r\n\r\n                    border-radius: ${fetchTheme('boardRadius', '5px')};\r\n\r\n                    width: ${quickPanelWidth};\r\n\r\n                    position: fixed;\r\n\r\n                    top: calc(${LayoutMixin.navBarHeight} + ${marginVertical});\r\n                    // 若想要對齊PageTitle的下緣，只要把top參數拿掉即可\r\n\r\n                    right: ${quickPanelRight};\r\n\r\n                    height: calc(100vh - ${LayoutMixin.navBarHeight} - (${marginVertical} * 2));\r\n\r\n                    overflow-y: auto;\r\n\r\n                    @media only screen and (max-width: ${quickPanelHiddenMaxWidth}) {\r\n                        display: none;\r\n                    }\r\n\r\n                    // scrollbar---------------------------------------\r\n\r\n                    /* width */\r\n                    &::-webkit-scrollbar {\r\n                        width: 14px;\r\n                    }\r\n\r\n                    /* Track */\r\n                    &::-webkit-scrollbar-track {\r\n                        /* box-shadow: inset 0 0 5px grey; */\r\n                        /* background: #d1d1d1; */\r\n                        border-radius: 15px;\r\n\r\n                        background: transparent;\r\n                    }\r\n\r\n                    /* Handle */\r\n                    &::-webkit-scrollbar-thumb {\r\n                        /* background: #989898; */\r\n                        background-color: ${fetchTheme('scrollbar', '#cdcdcd')};\r\n\r\n                        border-radius: 30px;\r\n\r\n                        border: 3px solid transparent; // 用來縮小thumb的寬度\r\n                        background-clip: content-box;\r\n                        /* box-shadow: inset 0 0 5px #282828; */\r\n                    }\r\n\r\n                    /* Handle on hover */\r\n                    &::-webkit-scrollbar-thumb:hover {\r\n                        /* background: #dedede; */\r\n                        background-color: ${fetchTheme('scrollbarHover', '#dedede')};\r\n                        border: 3px solid transparent; // 用來縮小thumb的寬度\r\n                        background-clip: content-box;\r\n                    }\r\n\r\n                    & .quick-link-group {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n\r\n                        margin-right: 1rem;\r\n\r\n                        margin-top: 1rem;\r\n\r\n                        & a {\r\n                            margin-left: 2.5rem;\r\n\r\n                            /* word-break: break-all; */\r\n                            /* word-break: normal; */\r\n                            /* word-break: keep-all; */\r\n                            /* word-break: break-word; */\r\n\r\n                            color: ${fetchTheme('quickApiTitle', '#000000')};\r\n\r\n                            margin-bottom: 0.45rem;\r\n                            text-decoration: none;\r\n\r\n                            font-size: 1.05rem;\r\n                        }\r\n                        /* & a:active {\r\n                                        color: blue;\r\n                        } */\r\n\r\n                        & a.group-link {\r\n                            color: ${fetchTheme('quickGroupTitle', '#000000')};\r\n                            margin-left: 1rem;\r\n                        }\r\n                    }\r\n                    `\r\n\r\nconst QuickPanelAside = ({ fetchControl }) => {\r\n\r\n    const fc = new FetchControl(fetchControl);\r\n    const fetchModel = fc.export('fetchModel');\r\n\r\n    const [tagGroupList, setTagGroupList] = useState([]);\r\n    fetchModel('apiDoc').registSetter('jumpTagList', 'QuickLinkAside', setTagGroupList);\r\n\r\n    let tagGroupListDom = tagGroupList.map((tagGroupData, index) => {\r\n        return (\r\n            <QuickLinkGroup tagGroupData={tagGroupData} key={`QuickLinkGroup_${index}`}\r\n                fetchControl={fetchControl}>\r\n            </QuickLinkGroup>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <QuickPanelAsideStyled theme={apiDocThemeObject}>\r\n            {tagGroupListDom}\r\n        </QuickPanelAsideStyled>\r\n    )\r\n}\r\n\r\n\r\nconst ApiPageOuter = styled.div`\r\n                    /* display: flex; */\r\n                    display: ${props => (props.show ? 'flex' : 'none')};\r\n                    flex-direction: row;\r\n\r\n                    flex-grow: 1;\r\n\r\n                    /* position: relative; // 用來定位: 讓下層的QuickPanelAsideStyled可以定位 */\r\n                    `\r\n\r\nconst CreateApiDocStyled = styled.div`\r\n                    /* display: flex; */\r\n                    display: ${props => props.show ? 'flex' : 'none'};\r\n                    flex-direction: row-reverse;\r\n                    flex-grow: 1;\r\n\r\n                    justify-content: flex-start;\r\n\r\n                    & .icon {\r\n                        width: 22px;\r\n                    height: 22px;\r\n    }\r\n\r\n/* background-color: red; */\r\n\r\n/* width: calc(100% - ${quickPanelWidth} - 20px); */\r\n                    /* width: 100%; */\r\n                    `\r\n\r\nconst JsonEditorStyled = styled.div`\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    width: calc(100% - 1.5rem);\r\n\r\n                    & .text-area-block {\r\n                        margin-left: 1.5rem;\r\n}\r\n                    `\r\n\r\nconst ApiDocJsonTextEditor = ({ apiJsonControl, apiJsonModel }) => {\r\n    // {/* width={formItem.width} height={height} */}\r\n\r\n    const [json, setJson] = useState(apiJsonModel.getState('json'));\r\n    const actJson = apiJsonModel.reactive('json', 'ApiDocJsonTextEditor', setJson);\r\n\r\n    // const onUpdateJson = () => (val) => {\r\n    //     // console.log('onUpdateJson', val)\r\n    //     setJson('val');\r\n    // }\r\n\r\n    // useEffect(function () {\r\n    //     console.log('ApiDocJsonTextEditor');\r\n    // }, [])\r\n\r\n    return (\r\n        <JsonEditorStyled>\r\n            <div className=\"text-area-block\">\r\n                {/* onUpdate={onUpdateJson()} */}\r\n                <TextArea value={apiJsonModel.fetchRef('json', 'ApiDocJsonTextEditor_ref')}\r\n                    width=\"100%\" height=\"600px\"\r\n                    srcKey=\"ApiDocJsonTextEditor\"\r\n                    nowrap={true}\r\n                    searchTrigger={apiJsonControl.bindAct('receiveSearchKeyword')}></TextArea>\r\n            </div>\r\n        </JsonEditorStyled>\r\n    )\r\n}\r\n\r\nconst SwaggerButtonInnerStyled = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\n& .text {\r\n    margin-right: 5px;\r\n    font-weight: bold;\r\n    color: #4c5e5a;\r\n}\r\n& .icon {\r\n    width: 19px;\r\n    height: 19px;\r\n}\r\n`\r\n\r\nexport default function ApiConnect({ fetchControl, mode }) {\r\n    // mode: 'edit'\r\n\r\n    // console.log('page render')\r\n\r\n    const translationMenu = useTranslation('menu', { keyPrefix: 'subItem' });\r\n    const { t } = useTranslation('setting', { keyPrefix: 'payRelated' });\r\n\r\n\r\n    const urlQuery = useUrlQuery();\r\n    // console.log('UrlQuery', urlQuery.get())\r\n\r\n    const urlQueryObj = urlQuery.get();\r\n    /* urlQueryObj: {\r\n                        category: \"dataCollection\"\r\n    }*/\r\n\r\n    // apiDocModel------------------------------------------------------\r\n\r\n    const apiDocModel = new ApiConnectModel(useRef(null), { pageMode: mode });\r\n    const fc = new FetchControl(fetchControl);\r\n    fc.setupModel('apiDoc', apiDocModel); // 註冊進fetchControl體系，這樣底下就可以輕鬆存取\r\n\r\n    const actPageMode = apiDocModel.reactive('pageMode', 'ApiConnectPage');\r\n    useEffect(function () {\r\n        actPageMode(mode);\r\n    }, [mode]);\r\n\r\n    // apiManage------------------------------------------------------\r\n\r\n    const apiManageModel = new ApiManageModel(useRef(null));\r\n    fc.setupModel('apiManage');\r\n\r\n    const apiManageControl = new ApiManageControl();\r\n    fc.setup('apiManage', apiManageControl);\r\n\r\n\r\n    const addTagModel = new AddTagModel(useRef(null));\r\n    fc.setupModel('addTag', addTagModel);\r\n\r\n    const addApiModel = new AddApiModel(useRef(null));\r\n    fc.setupModel('addApi', addApiModel);\r\n\r\n    const addBodyModel = new AddBodyModel(useRef(null));\r\n    fc.setupModel('addBody', addBodyModel);\r\n\r\n    const editTagModel = new EditTagModel(useRef(null));\r\n    fc.setupModel('editTag', editTagModel);\r\n\r\n    const addResModel = new AddResModel(useRef(null));\r\n    fc.setupModel('addRes', addResModel);\r\n\r\n    const editAttrModel = new EditAttrModel(useRef(null));\r\n    fc.setupModel('editAttr', editAttrModel);\r\n\r\n    const addAttrModel = new AddAttrModel(useRef(null));\r\n    fc.setupModel('addAttr', addAttrModel);\r\n\r\n    const removeAttrModel = new RemoveAttrModel(useRef(null));\r\n    fc.setupModel('removeAttr', removeAttrModel);\r\n\r\n    const addApiDocModel = new AddApiDocModel(useRef(null));\r\n    fc.setupModel('addApiDoc', addApiDocModel);\r\n\r\n    const addSecurityModel = new AddSecurityModel(useRef(null));\r\n    fc.setupModel('addSecu', addSecurityModel);\r\n\r\n    const apiSettingModel = new ApiSettingModel(useRef(null));\r\n    fc.setupModel('apiSetting', apiSettingModel);\r\n\r\n    const addExampleModel = new AddExampleModel(useRef(null));\r\n    fc.setupModel('addExample', addExampleModel);\r\n\r\n\r\n    apiManageControl.registModel('apiManage', apiManageModel);\r\n    apiManageControl.registModel('addTag', addTagModel);\r\n    apiManageControl.registModel('addApi', addApiModel);\r\n    apiManageControl.registModel('addBody', addBodyModel);\r\n    apiManageControl.registModel('editTag', editTagModel);\r\n    apiManageControl.registModel('editAttr', editAttrModel);\r\n    apiManageControl.registModel('addApiDoc', addApiDocModel);\r\n\r\n    const docxControl = new DocxControl(useRef(null));\r\n    docxControl.registModel('apiManage', apiManageModel);\r\n    docxControl.registModel('apiDoc', apiDocModel);\r\n\r\n    const apiJsonModel = new ApiJsonModel(useRef(null));\r\n    const apiJsonControl = new ApiJsonControl();\r\n    apiJsonControl.registModel('apiJson', apiJsonModel);\r\n    apiJsonControl.registModel('apiManage', apiManageModel);\r\n\r\n    apiManageControl.registModel('apiJson', apiJsonModel);\r\n\r\n    fc.setup('apiJson', apiJsonControl);\r\n\r\n    const addQueryModel = new AddQueryModel(useRef(null));\r\n    apiManageControl.registModel('addQuery', addQueryModel);\r\n\r\n\r\n    // http://{host}/apiConnect?category=dataCollection\r\n\r\n    const apiConnectPageMap = {\r\n        dataCollection: { // <category>\r\n            jsonPath: \"/apiConnect/dataCollection.json\",\r\n            pageTitle: \"apiConnectDataCollection\",\r\n        },\r\n        shakuApi: {\r\n            fileName: 'qore-plus-api',\r\n            jsonPath: \"http://localhost:5050/apiDoc/qore-plus-api.json\",\r\n            pageTitle: \"apiConnectDataCollection\",\r\n        },\r\n    };\r\n\r\n    let jsonPath = '/apiConnect/default.json';\r\n    let pageTitle = translationMenu.t('apiConnect');\r\n    let fileName = '';\r\n    let docType;\r\n    if (urlQueryObj) {\r\n        if (urlQueryObj.category) {\r\n            const pageInfo = apiConnectPageMap[urlQueryObj.category];\r\n\r\n            if (pageInfo) {\r\n                if (pageInfo.jsonPath) {\r\n                    jsonPath = pageInfo.jsonPath\r\n                    pageTitle = `${translationMenu.t(pageInfo.pageTitle)} `;\r\n                    fileName = pageInfo.fileName;\r\n                }\r\n            }\r\n        } else if (urlQueryObj.fileName) { // fileName模式\r\n\r\n            const apiDocList = LocalAccessor.getItem('apiDocList');\r\n            const apiDocInfo = apiDocList.find(docInfo => docInfo.fileName === urlQueryObj.fileName);\r\n\r\n            if (apiDocInfo) {\r\n                jsonPath = apiDocInfo.path;\r\n                // jsonPath = `http://localhost:5050/apiDoc/${urlQueryObj.fileName}.json`\r\n                pageTitle = `pageTitle`;\r\n                fileName = urlQueryObj.fileName;\r\n                docType = apiDocInfo.type;\r\n            } else {\r\n                console.error(`apiDocInfo not found`, urlQueryObj.fileName);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(function () {\r\n        apiManageModel.setState('fileName', fileName);\r\n        apiManageModel.setState('jsonPath', jsonPath);\r\n        apiManageModel.setState('docType', docType);\r\n\r\n        fetchControl('apiManage').fetchJson();\r\n    }, []);\r\n\r\n    const [viewMode, setViewMode] = React.useState(apiManageModel.getState('viewMode')); // 'board'\r\n    const actViewMode = apiManageModel.reactive('viewMode', 'ApiConnect', setViewMode);\r\n\r\n    const handleChangeToggleButton = (event, newMode) => {\r\n        actViewMode(newMode);\r\n    };\r\n\r\n    const jumpToSwaggerPage = () => () => {\r\n        const fileName = apiManageModel.getState('fileName');\r\n        // console.log('fileName', fileName);\r\n\r\n        // 轉跳頁面\r\n        // window.location.href = `http://localhost:9001/api-docs/${fileName}`;\r\n        window.open(`http://localhost:9001/api-docs/${fileName}`);\r\n\r\n        // http://localhost:9001/api-docs/qore-plus-demo\r\n    }\r\n\r\n    const titleExtendSlotDom = (\r\n        <CreateApiDocStyled show={apiDocModel.pageUnitAuth('titleExtend')}>\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ marginTop: '0', marginBottom: '0', marginRight: '1.5rem' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickCreateApiDoc')}\r\n                show={viewMode === 'board'}>\r\n                <PlusSvg className=\"icon\" fill=\"#4c5e5a\" />\r\n            </Button>\r\n\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ marginTop: '0', marginBottom: '0', marginRight: '1.5rem', marginLeft: '0' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickClientSaveJsonFile')}\r\n                show={viewMode === 'json'}>\r\n                <FolderDownloadSvg className=\"icon\" fill=\"#4c5e5a\" />\r\n            </Button>\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ marginTop: '0', marginBottom: '0', marginRight: '0.75rem' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickUpdateJsonFile')}\r\n                show={viewMode === 'json'}>\r\n                <FolderUploadSvg className=\"icon\" fill=\"#4c5e5a\" />\r\n            </Button>\r\n\r\n            <ToggleButtonGroup\r\n                value={viewMode}\r\n                exclusive\r\n                onChange={handleChangeToggleButton}\r\n                aria-label=\"Platform\"\r\n            >\r\n                <ToggleButton value=\"board\">BOARD</ToggleButton>\r\n                <ToggleButton value=\"json\">JSON</ToggleButton>\r\n            </ToggleButtonGroup>\r\n\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ marginTop: '0', marginBottom: '0', marginRight: '0.75rem', paddingH: '0.5rem' }}\r\n                onClick={jumpToSwaggerPage()}\r\n                show={true}>\r\n                <SwaggerButtonInnerStyled>\r\n                    <div className=\"text\">\r\n                        swagger\r\n                    </div>\r\n                    <BrowserSvg className=\"icon\" fill=\"#4c5e5a\" />\r\n                </SwaggerButtonInnerStyled>\r\n            </Button>\r\n\r\n            <Button type=\"fill\" pattern=\"small\" importStyle={{ paddingH: '0.5rem', marginTop: '0', marginBottom: '0', marginRight: '0' }}\r\n                onClick={fetchControl('apiManage').bindAct('onClickAddSecuritySchemes')}\r\n                show={viewMode === 'board'}>\r\n                增加安全設定\r\n            </Button>\r\n            {/* <DocxSave apiManageModel={apiManageModel} docxControl={docxControl}></DocxSave> */}\r\n        </CreateApiDocStyled>\r\n    )\r\n\r\n    const asideSlotDom = (<QuickPanelAsideSpace>\r\n        <QuickPanelAside fetchControl={fc.export()}></QuickPanelAside>\r\n    </QuickPanelAsideSpace>);\r\n\r\n    return (\r\n        <PageTitle title={pageTitle} titleExtendSlot={titleExtendSlotDom} asideSlot={asideSlotDom}>\r\n            <ApiPageOuter show={viewMode === 'board'}>\r\n                <ApiDocument fetchControl={fetchControl} docType={docType}></ApiDocument>\r\n                {/* <QuickPanelAsideSpace></QuickPanelAsideSpace>\r\n                <QuickPanelAside fetchControl={fetchControl}></QuickPanelAside> */}\r\n                <AddTagModal control={apiManageControl}\r\n                    model={addTagModel}\r\n                    apiManageModel={apiManageModel}></AddTagModal>\r\n                <AddApiModal control={apiManageControl}\r\n                    model={addApiModel}\r\n                    apiManageModel={apiManageModel}></AddApiModal>\r\n                <AddBodyModal control={apiManageControl}\r\n                    model={addBodyModel}\r\n                    apiManageModel={apiManageModel}></AddBodyModal>\r\n                <EditApiModal control={apiManageControl}\r\n                    model={editTagModel}\r\n                    apiManageModel={apiManageModel}></EditApiModal>\r\n                <AddResponseModal control={apiManageControl}\r\n                    model={addResModel}\r\n                    apiManageModel={apiManageModel}></AddResponseModal>\r\n                <EditAttrModal control={apiManageControl}\r\n                    model={editAttrModel}\r\n                    apiManageModel={apiManageModel}></EditAttrModal>\r\n                <AddQueryModal control={apiManageControl}\r\n                    model={addQueryModel}\r\n                    apiManageModel={apiManageModel}></AddQueryModal>\r\n                <AddSecurityModal control={apiManageControl}\r\n                    model={addSecurityModel}\r\n                    apiManageModel={apiManageModel}></AddSecurityModal>\r\n                <ApiSettingModal control={apiManageControl}\r\n                    model={apiSettingModel}\r\n                    apiManageModel={apiManageModel}></ApiSettingModal>\r\n                <AddExampleModal control={apiManageControl}\r\n                    model={addExampleModel}\r\n                    apiManageModel={apiManageModel}></AddExampleModal>\r\n                <AddAttrModal control={apiManageControl}\r\n                    model={addAttrModel}\r\n                    apiManageModel={apiManageModel}></AddAttrModal>\r\n            </ApiPageOuter>\r\n            <ApiPageOuter show={viewMode === 'json'} className=\"json-editor-page-outer\">\r\n                <ApiDocJsonTextEditor apiJsonControl={apiJsonControl} apiJsonModel={apiJsonModel}></ApiDocJsonTextEditor>\r\n            </ApiPageOuter>\r\n            <AddApiDocModal control={apiManageControl}\r\n                model={addApiDocModel}\r\n                apiManageModel={apiManageModel}></AddApiDocModal>\r\n        </PageTitle>\r\n    );\r\n}"],"names":["_g","DefinitionBuild","json","refSchemaMap","this","console","error","vm","buildRefSchemaMap","refKey","schemaObj","resolveEachRefDefinition","outSchemaObj","ApiSchema","getSchema","resolveEach","Object","keys","forEach","categoryKey","componentType","definitionType","addRefSchema","components","componentMap","schemas","requestBodies","securitySchemes","componentTypeObj","definitionTypeObj","buildRefKey","content","schema","warn","defBuildObj","layer","silent","name","buildSchema","buildAttributes","ref","log","test","replace","replaceAllOf","replaceRefDefinition","replaceObjectRefDefinition","allOfSchemaList","map","val","haveRef","eachSchema","mergedSchema","type","properties","propKey","assign","defSchemaData","getRefSchema","propSchema","items","layerPath","layerName","concat","schemaPack","attributeList","key","requiredArray","attributeData","required","Array","isArray","requiredKey","attrRequired","layerPathPush","push","attributes","definitionMap","ApiProfile","rawApiInfo","apiRoute","apiType","apiData","apiInfo","addParameterBody","responsesAddAttributes","path","responses","code","responseItem","newSchemaObj","requestBody","jsonContent","contentSchemaObj","bodyParameterObj","description","in","obj","parameters","ApiDocVersion","constructor","ApiComponent","Tag","groupName","apiList","TagList","tagList","tagObj","outObj","OpenApiBuild","buildTagList","buildTagApiList","paths","tagApiDataMap","apiTags","tags","getApiData","tagName","addTagApiData","outTagObj","apiDataList","tagsObj","docTagItem","setName","setDescription","setGroupName","ApiBuild","docType","buildObj","getTagList","ApiComposition","tagData","consumes","produces","parameterItem","find","getApiDataField","length","args","summary","filter","item","status","defKey","getDefKey","definitionData","getDefinitionData","ApiConnectComposition","buildDefinitionMap","run","silentMode","definitions","definitionKey","callback","paramIn","buildParameters","apiSchema","ApiConnectModel","initObj","docJson","jumpTagList","pageMode","unitKey","unitAuth","addTagButton","removeTagButton","titleExtend","getState","setState","buildTagBlockDataList","JSON","stringify","buildJumpLinkList","apiCompConnectData","getJson","apiMap","buildApiMapFromJson","tag","buildApiData","registApiDataInTag","StateModel","_excluded","_extends","bind","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBrTrash","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","id","x","y","viewBox","style","enableBackground","xmlSpace","width","height","d","ForwardRef","SvgBrMinus","SvgBrPlus","_path","SvgStarSign","SvgFolderDownload","SvgFolderUpload","SvgBrBrowser","SvgSrSquareRoot","SvgBookBookmark","ApiJsonModel","searchKeywordFunc","jsonObj","jsonStr","formatJSON","ParameterTypeEnum","mode","query","label","value","header","body","SwaggerPropertyTypeEnum","string","integer","ApiManageModel","viewMode","addTagModalRef","addApiModalRef","addBodyModalRef","editTagModalRef","addResModalRef","editAttrModalRef","addApiDocModalRef","addQueryModalRef","addSecurityRef","apiSettingModalRef","addExampleModalRef","addAttrModalRef","removeAttrModalRef","fileName","jsonPath","srcKey","AddTagModel","AddApiModel","apiTypeOptionList","AddBodyModel","rootType","gqlJsonSrc","EditTagModel","AddResModel","resType","resTypeOptionList","EditAttrModel","paramType","attrName","attrSrc","newAttrName","defaultValue","valueType","valueTypeOptionList","requiredOptionList","originAttrName","originDefaultValue","originValueType","originDescription","originRequired","AddApiDocModel","host","docTypeOptionList","AddQueryModel","default","enum","AddSecurityModel","securityKey","securityTypeOptionList","securityInOptionList","ApiSettingModel","securityKeyOptionList","apiRouteVar","apiTypeVar","securityList","keyList","AddExampleModel","exampleShowKey","exampleOptionList","exampleMap","exampleSchemaJson","exampleKey","AddAttrModel","add_name","add_defaultValue","add_valueType","add_description","add_required","addPositionDescription","RemoveAttrModel","ApiManageControl","confirm","tip","notify","apiDoc","apiManage","addTag","addApi","editTag","addBody","addRes","editAttr","addApiDoc","apiJson","addQuery","addSecu","apiSetting","addExample","addAttr","removeAttr","fetchModel","fetch","then","response","ok","Error","saveJsonDoc","saveApiDoc","catch","ApiError","next","catchErrorMsg","openModal","closeModal","addTagModel","apiParam","ApiSender","catchAlertMsg","fetchJson","fetchControl","action","addApiModel","apiSettingModel","setSecurityKey","security","apiParamLoadSecurity","apiResLoadSecurity","setSecurityOptionList","data","addBodyModel","trim","bodyType","parse","e","qid","uniqid","toUpperCase","fieldType","requiredSign","valType","defaultValueDef","Number","isInteger","convertGql","gqlStr","model","addQueryModel","isErr","err","addResModel","addAttrModel","attrData","getBoolean","editAttrModel","noUpdateCheck","originKey","getNoUpdateCheckVal","nowValueType","addApiDocModel","Promise","reject","addSecurityModel","blob","Blob","saveFile","runErrorAlert","fileFullName","FileSaver","resolve","addExampleModel","apiRes","list","exampleItem","exampleObj","fJson","getExample","apiInnerData","Control","datePickerTheme","ThemeMixin","datePickerThemeObject","gridWidth","DefaultDatePickerStyled","styled","LayerMixin","fetchTheme","DateWeekPanel","nowYear","nowMonth","nowDate","nowValue","onDatePick","Date","setFullYear","setMonth","setDate","activeDateNum","valueYear","getFullYear","valueMonth","getMonth","startDate","startDay","getDay","dayAmount","getDate","monthGrid","weekRow","dayNum","weekNum","getGridClassName","dateNum","onDateGridClick","className","onClick","remainBlankNum","DatePickerPanel","show","headerRowSlot","MonthPickerPanel","onMonthChange","getMonthStr","month","shortMode","onMonthClick","getMonthItemClass","monthNum","YearPickerPanel","baseYear","onYearChange","useState","startYear","setStartYear","yearRowListDom","getYear","year","rowIndex","colIndex","onYearItemClick","onYearPageChagne","offset","yearA","yearB","yearC","fill","getTheme","InputStyled","InputTimeNumber","max","onChange","maxNum","undefined","inputNum","setInputNum","actInputNum","theme","str","isNaN","TimePickerPanel","hour","minute","onHourChange","onMinuteChange","HeaderRowPanel","onChangePanel","onChangeMonth","onChangeYear","handleChangePanel","onClickMonthChange","onClickYearChange","newYear","DefaultDateTimePicker","refValueType","Ref","getValue","panelShow","setPanelShow","refVal","dateVal","testDate","convertDateValue","setNowValue","setYear","date","getHours","setHour","getMinutes","setMinute","datePickerMode","setDatePickerMode","dateShow","setDateShow","monthShow","setMonthShow","yearShow","setYearShow","useEffect","outputValue","newMonth","reactive","convertShowDateStr","inputBoxValue","setInputBoxValue","InputText","importClass","left","setHours","setMinutes","setSeconds","toISOString","DateTimePicker","lineHeight","TextareaStyled","fetchImportStyle","importStyle","TextArea","onUpdate","nowrap","searchTrigger","disabled","isRefMode","initInputText","convertValue","actTextArea","bindValue","whiteSpace","overflowWrap","overflowX","textareaRef","useRef","keyword","selectionStartOffset","selectionEndOffset","halfTextareaHeight","pxStrIndex","search","slice","convertToPxNum","current","textPos","focus","setSelectionRange","scrollTop","match","textAreaThemeObject","FormModalStyled","modalWidth","modalHeight","FromModalTitleStyled","FormModalTitleRow","children","FormAreaStyled","formWidth","FormArea","FooterArea","FormItemRowStyled","ItemCommentStyled","InputButtonRowStyled","textWidth","InputButtonRow","formItem","inputText","filt","setInputText","mutInputText","pattern","onButtonClick","buttonLabel","TextRow","actText","TextAreaRow","InputTextRow","inputType","min","placeholder","setValue","SelectRow","initValue","actSelectValue","Select","optionList","loading","ItemLabelStyled","ItemLabel","nowLabel","setLabel","LabelToggleSwitchStyled","ToggleSwitchRow","trueLabel","falseLabel","ToggleSwitch","DateTimePickerRow","FormItemRow","itemContentDom","itemCommentDom","itemLabelWidth","slot","comment","initHide","hide","actHide","minWidth","FormExpandArea","FormAside","FormModal","modalRef","formItemList","footerSlot","asideSlot","formItemListDom","index","formAsidDom","Modal","childRef","AddTagModal","control","apiManageModel","t","useTranslation","keyPrefix","fetchRef","bindAct","AddApiModal","SvgBrSensorAlert","AsideJsonInputStyled","BodyModalJsonAside","onGqlOutput","debounceTimeout","setDebounceTimeout","jsonValid","setJsonValid","sensorAlertShow","setSensorAlertShow","converBtnShow","setConverBtnShow","setJson","clearTimeout","setTimeout","display","marginTop","marginRight","marginBottom","marginLeft","paddingH","fixHeight","onGqlJsonSrcUpdate","AddBodyModal","EditTagModal","AddResponseModal","EditAttrModal","AddQueryModal","getOptionList","AddSecurityModal","AttrSrc","reqBody","DocxControl","apiDocModel","AddApiDocModal","ApiJsonControl","tagGroupData","ApiSettingModal","AddExampleModal","AddAttrModal","apiDocTheme","apiDocThemeObject","quickPanelWidth","quickPanelRight","quickPanelHiddenMaxWidth","TagBlockBoardStyled","LayoutMixin","AttributeDefaultBlock","valueState","getDefault","enumLabel","setEnumLabel","enumSelectControl","SelectControl","selectedLabel","dropdownOpen","getStateModel","registSetter","arrowIcon","enumOptionList","setDropdownOpen","ApiAttributeObjectRow","isTail","indent","subShow","setSubShow","subAttributeListDom","subAttribute","ApiAttributeRow","layerIconDom","requiredTagDom","addAttrPanelDom","margin","backgroundColor","AttributesForm","collapse","setCollapse","reqAttrListDom","arr","ApiBlock","apiComp","apiShow","setApiShow","getApiShowStyle","showDisplay","resAttrFormListDom","resAttr","checkApiDataField","resBody","stopPropagation","toLowerCase","TagHr","TagBlock","apiBlockList","apiBlockListDom","apiBlockData","pageUnitAuth","fixWidth","ApiDocumentStyled","ApiDocument","FetchControl","export","setTagList","tagBlockListDom","apiManageT","QuickLinkGroup","getApiLinkLabel","matchArr","checkHalfShape","apiLinkListDom","apiLinkKey","cursor","apiLinkId","onAsideLinkClick","getViewMode","document","getElementById","scrollIntoView","href","getApiGroupLabel","QuickPanelAsideSpace","marginVertical","QuickPanelAsideStyled","QuickPanelAside","tagGroupList","setTagGroupList","tagGroupListDom","ApiPageOuter","CreateApiDocStyled","JsonEditorStyled","ApiDocJsonTextEditor","apiJsonControl","apiJsonModel","SwaggerButtonInnerStyled","ApiConnect","translationMenu","urlQueryObj","useUrlQuery","get","fc","setupModel","actPageMode","apiManageControl","setup","editTagModel","removeAttrModel","registModel","docxControl","pageTitle","category","pageInfo","dataCollection","shakuApi","apiDocInfo","LocalAccessor","docInfo","React","setViewMode","actViewMode","titleExtendSlotDom","ToggleButtonGroup","exclusive","event","newMode","ToggleButton","window","open","asideSlotDom","titleExtendSlot"],"sourceRoot":""}